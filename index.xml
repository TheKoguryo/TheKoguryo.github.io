<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TheKoguryo&#39;s 기술 블로그</title>
    <link>https://thekoguryo.github.io/</link>
    <description>Recent content on TheKoguryo&#39;s 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 27 Sep 2022 00:00:01 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4.1.1 NGINX Ingress Controller 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/1.install-nginx-ingress-controller/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/1.install-nginx-ingress-controller/</guid>
      <description>4.1.1 NGINX Ingress Controller 설치하기 OKE에서 Kubernetes에서 사용가능한 여러가지 오픈 소스 ingress controller를 사용할 수 있습니다. 본 문서에서는 그중에서 가</description>
    </item>
    
    <item>
      <title>5.1 OKE에서 OCI 자원관리를 위한 Service Operator</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oci-services/1.oci-service-operator-1.1.0/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oci-services/1.oci-service-operator-1.1.0/</guid>
      <description>5.1 OKE에서 OCI 자원관리를 위한 Service Operator 사용하기 OCI Service Operator for Kubernetes(OSOK)는 OCI 자원을 Kubernetes API를 통해 관리할 수 있도록 도와주는 도구입니다. Autonomous</description>
    </item>
    
    <item>
      <title>7.1 Spring Boot 애플리케이션 개발하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.develop-spring-boot-app/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.develop-spring-boot-app/</guid>
      <description>7.1 Spring Boot 애플리케이션 개발하기 Spring Boot 예제를 바탕으로 앱 개발, 컨테이너 이미지 빌드, OKE에 배포하는 과정을 확인해 봅니다. Spring Boot 기반 마이크로 서비스 만들기 Spring I</description>
    </item>
    
    <item>
      <title>7.2.1 GraalVM 기반 컨테이너 이미지 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</guid>
      <description>7.2.1 GraalVM 기반 컨테이너 이미지 만들기 여기서는 향상된 just-in-time(JIT) 컴파일러를 통한 가장 간편한 방법으로 코드 변경없이 자바 애플케이션의 성능 개선하는 방벙으로 알아보겠습니다.</description>
    </item>
    
    <item>
      <title>1.1 OKE(Oracle Container Engine for Kubernetes) 소개</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/1.oke/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/1.oke/</guid>
      <description>1.1 OKE(Oracle Container Engine for Kubernetes) 소개 Oracle Container Engine for Kubernetes는 OCI에서 제공하는 관리형 쿠버네티스 서비스 입니다. 줄여서 OKE라고 부며 CNCF 인증된 Kubernetes 버전을 사용하고 있</description>
    </item>
    
    <item>
      <title>15.1 Resource Manager 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter15/1/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter15/1/</guid>
      <description>15.1 Resource Manager 사용하기 Resource Manager는 OCI 자원 Provisioning을 자동화하는 기능으로 Terraform Configuration을 등록해서 실행하는 서비스입니다</description>
    </item>
    
    <item>
      <title>14.1.2.1 Object Storage를 위한 IAM Policy 설정</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/2/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/2/1/</guid>
      <description>14.1.2.1 Object Storage를 위한 IAM Policy 설정 Object Storage를 위한 Policy 설정 IAM Policy는 OCI 자원에 대한 접근 정책입니다. 하나의 정책은 일반적으로 사용자 그룹에게</description>
    </item>
    
    <item>
      <title>14.2.1 Terraform 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/1/</guid>
      <description>14.2.1 Terraform 설치하기 HashiCorp 다운로드 페이지에서 OS 맞는 설치파일을 다운받습니다. 압축을 풀면 terraform.exe 또는 terraform 파일 하나이므로 사용할 폴더에 복사하고 PATH에 등록하면 바로 사용</description>
    </item>
    
    <item>
      <title>13.1 Autoscaling을 위한 준비</title>
      <link>https://thekoguryo.github.io/oci/chapter13/1/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter13/1/</guid>
      <description>13.1 Autoscaling을 위한 준비 Autoscaling에 사용할 인스턴스 만들기 Autoscaling을 사용하려면 기준 이미지가 필요합니다. Au</description>
    </item>
    
    <item>
      <title>11.1 Domain Name과 매핑하기</title>
      <link>https://thekoguryo.github.io/oci/chapter11/1/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter11/1/</guid>
      <description>11.1 Domain Name과 매핑하기 이미 구입한 Domain Name이 있다는 전제하에 설정하는 과정입니다. 테스트를 위해 freenom 사이트에서 발급받은 무료 Domain Name(thekogu</description>
    </item>
    
    <item>
      <title>12.1 Compute 인스턴스 Monitoring 활성화</title>
      <link>https://thekoguryo.github.io/oci/chapter12/1/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter12/1/</guid>
      <description>12.1 Compute 인스턴스 Monitoring 활성화 Monitoring 활성화 아래는 OracleCloudAgent가 이미 설치된 최신 Oracle Linux 이미지를 사용하였습니다. 모니터링하려는 Compute 인스턴스의 상세</description>
    </item>
    
    <item>
      <title>9.1 기본 제공하고 있는 OS Image</title>
      <link>https://thekoguryo.github.io/oci/chapter09/1/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter09/1/</guid>
      <description>9.1 기본 제공하고 있는 OS Image Compute Instance 생성을 위한 OS Image 및 애플리케이션 Image를 제공하며, 사용자가 만든 Custom Image, Boot Volumes을 통해 Instance를 생성할 수</description>
    </item>
    
    <item>
      <title>7.1 Bucket 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/1/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/1/</guid>
      <description>7.1 Bucket 생성하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Storage &amp;raquo; Object Storage &amp;amp; Archive Storage &amp;raquo; Buckets 항목으로 이동합니다. Bucket을 생성할 Compartment를 선택합니다.</description>
    </item>
    
    <item>
      <title>4.1 Reserved Public IP 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter04/1/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter04/1/</guid>
      <description>4.1 Reserved Public IP 만들기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking &amp;raquo; IP Management &amp;raquo; Reserved Public IPs 항목으로 이동합니다. Reserve Public IP Address를 클릭합니다. 생성 정보 입력 Name: 생성할 Reserved</description>
    </item>
    
    <item>
      <title>3.1 작업 Compartment 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/1/</guid>
      <description>3.1 작업 Compartment 만들기 Compartment는 자원들을 쉽게 관리할 수 있도록 하는 논리적인 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초</description>
    </item>
    
    <item>
      <title>3.5.1 Linux, Mac 에서 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/5/1/</guid>
      <description>3.5.1 Linux, Mac 에서 접속하기 ssh-keygen로 생성한 PEM(Privacy Enhanced Mail) 파일 형식의 키는 Linux, Mac에서는 바로 사용 가능합니다. PuTTY Key Generator로 생성한 .ppk은</description>
    </item>
    
    <item>
      <title>3.6.1 Block Volume 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/1/</guid>
      <description>3.6.1 Block Volume 생성하기 Block Volume은 OCI Compute Instance와 함께 사용하는 네트워크 스토리지입니다. Block Volume을 생성하여 인스턴스에 장착하고 마운트하면</description>
    </item>
    
    <item>
      <title>3.7.1 Block Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/7/1/</guid>
      <description>3.7.1 Block Volume Full 백업하기 이전 가이드에서 Block Volume을 삭제한 경우, 다시 Block Volume을 만듭니다. 기본 Block Volume 백업하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Storage</description>
    </item>
    
    <item>
      <title>3.8.1 Boot Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/8/1/</guid>
      <description>3.8.1 Boot Volume 백업하기 Boot Volume 백업 기능은 Block Volume 백업 기능과 거의 같습니다. OCI 콘솔에서 내비게이션 메뉴를 엽니다. Boot Volume 상세 페이지로 이동합니다. 방법 #1 Compute &amp;raquo; Instances 항목으로 이</description>
    </item>
    
    <item>
      <title>1.1 Regions, Availability Domains</title>
      <link>https://thekoguryo.github.io/oci/chapter01/1/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/1/</guid>
      <description>1.1 Regions, Availability Domains OCI(Oracle Cloud Infrastructure)는 Region과 Availability Domain 안에서 호스팅 됩니다. Region은 지리적인 영역이며 Availability Domain은 한 Region 내에 위치</description>
    </item>
    
    <item>
      <title>2.1 Oracle Cloud Free Tier 계정 생성</title>
      <link>https://thekoguryo.github.io/oci/chapter02/1/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter02/1/</guid>
      <description>2.1 Oracle Cloud Free Tier 계정 생성 Oracle Cloud Infrastructure을 무료로 사용해 보기 위한 30일 동안 US 300$ 한도 내에서 사용할 수 있는 Trial을 제공하고 있습니다. 또</description>
    </item>
    
    <item>
      <title>6.1 Verrazzano 설치</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/1.install-verrazzano/</link>
      <pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/1.install-verrazzano/</guid>
      <description>6.1 Kubernetes 클러스터에 Verrazzano 설치하기 쿠버네티스 클러스터 준비 Verrazzano는 Kubernetes Operator 방식을 사용하여 쿠버네티스 클러스터에 설치하는 방식입니다. 즉 설치할 쿠버네</description>
    </item>
    
    <item>
      <title>4.4.1 Service Mesh 없는 마이크로서비스 앱 배포</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/service-mesh/1.sampleapp-without-istio/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/service-mesh/1.sampleapp-without-istio/</guid>
      <description>4.4.1 Service Mesh 없는 마이크로서비스 앱 배포 본 내용은 아래 Istio 문서 상에 있는 내용을 재 확인하는 내용으로 마이크로 서비스 앱을 사용하는 데 있어서 어떤 문제가 발생할 수 있는지,</description>
    </item>
    
    <item>
      <title>4.3.1 Prometheus&amp;Grafana 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/monitoring/1.install-prometheus-grafana/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/monitoring/1.install-prometheus-grafana/</guid>
      <description>4.3.1 Prometheus&amp;amp;Grafana 설치하기 Prometheus 설치 설치용 namespace를 만듭니다. kubectl create ns monitoring Helm Chart를 통해 설치하기 위해 저장소를 등록합니다. 본 예제에서는 Bitnami Helm Chart 저장소를 사</description>
    </item>
    
    <item>
      <title>4.2.1 EFK 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/logging-efk/1.install-efk/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/logging-efk/1.install-efk/</guid>
      <description>4.2.1 EFK 설치하기 Elastic Search + Kibana 설치 설치용 namespace를 만듭니다. kubectl create ns logging Helm Chart를 통해 설치하기 위해 저장소를 등록합니다. 본 예제에서는 Bitnami Helm Chart 저장</description>
    </item>
    
    <item>
      <title>2.1 컨테이너 이미지 스캔</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/ocir/1.scan-image/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/ocir/1.scan-image/</guid>
      <description>2.1 컨테이너 이미지 스캔 OCIR는 알려진 Common Vulnerabilities and Exposures (CVE) database를 기반으로 컨테이너 이미지에 대한 취약점 분석 기능을 제공하고 있습니다. 다음은 취약점 분</description>
    </item>
    
    <item>
      <title>5.2.1 OCI Logging을 사용한 로그 모니터링</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oci-services/logging/1.oci-logging/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oci-services/logging/1.oci-logging/</guid>
      <description>5.2.1 OCI Logging을 사용한 로그 모니터링 OKE 상에 배포되어 있는 애플리케이션 로그 모니터링을 OCI Logging 서비스를 통해 모니터링할 수 있습니다. OCI Logging 서비스 사용 권한 설</description>
    </item>
    
    <item>
      <title>1.6.1 Block Volume 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/6.persistent-volume/1.block-volume/</link>
      <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/6.persistent-volume/1.block-volume/</guid>
      <description>1.6.1 Block Volume 사용하기 컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이터를 저장하기 위해</description>
    </item>
    
    <item>
      <title>1.3.1 Cloud Shell로 클러스터 연결하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/3.access-cluster/1.cloudshell-access/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/3.access-cluster/1.cloudshell-access/</guid>
      <description>1.3.1 Cloud Shell로 OKE 클러스터 연결하기 Cloud Shell Cloud Shell은 공식 문서에서 설명하는 것 처럼 Oracle Cloud 콘솔에서 제공하는 웹 브라우저 기반 리눅스 터미널입니다. 작은 가상</description>
    </item>
    
    <item>
      <title>1.3.2 로컬 환경에서 클러스터 연결하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/3.access-cluster/2.local-access/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/3.access-cluster/2.local-access/</guid>
      <description>1.3.2 로컬 환경에서 클러스터 연결하기 OCI CLI 설치 및 환경 구성 OCI CLI 설치 공식 문서를 참고하여 OCI OCI를 설치합니다. https://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm Oracle Linux 기준 예시 설치 bash -c &amp;#34;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)&amp;#34; 설치 확인 oci --version OCI CLI</description>
    </item>
    
    <item>
      <title>8.1 File Storage 구성 예시</title>
      <link>https://thekoguryo.github.io/oci/chapter08/1/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter08/1/</guid>
      <description>8.1 File Storage 구성 예시 서버간 공유 파일 시스템으로 File Storage를 통해 여러 개의 클라이언트 서버에서 파일을 공유할 수 있습니다. 필요로 하는 보안규칙을 이해하기 위</description>
    </item>
    
    <item>
      <title>14.3.1 OCI Request Signature Version 1</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/1/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/3/1/</guid>
      <description>14.3.1 OCI Request Signature Version 1 앞서 설명한 것처럼 OCI REST API를 호출하기 위해서는 요청 서명을 추가해야 합니다. draft-cavage-http-signatures-08 스펙에 기초하며 개략적인 절차는 다음과 같습니다. HTTPS (SSL protocol TLS 1.2) 요</description>
    </item>
    
    <item>
      <title>10.1 Load Balancer 구성 예시</title>
      <link>https://thekoguryo.github.io/oci/chapter10/1/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/1/</guid>
      <description>10.1 Load Balancer 구성 예시 인스턴스의 가용성을 보장하기 위해 OCI Load Balancer를 통해 여러 개의 대상 서버로 부하를 분산할 수 있습니다. 대상 서버도 가용성 보장을 위해 서</description>
    </item>
    
    <item>
      <title>6.1 Compartment</title>
      <link>https://thekoguryo.github.io/oci/chapter06/1/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter06/1/</guid>
      <description>6.1 Compartment Compartment는 자원들을 쉽게 관리할 수 있도록 하는 논리적인 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초로 Root Compartment 하나</description>
    </item>
    
    <item>
      <title>5.1 Linux 인스턴스에 Apache HTTP Server 설치</title>
      <link>https://thekoguryo.github.io/oci/chapter05/1/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter05/1/</guid>
      <description>5.1 Linux 인스턴스에 Apache HTTP Server 설치 생성한 Instance에 SSH 명령을 통해 접속합니다. 아래 명령은 Oracle Enterprise Linux 기준입니다. ssh –i &amp;lt;private_key&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;public-ip-address&amp;gt; Apache HTTP Server 설치 sudo yum -y install httpd OS 방화벽에</description>
    </item>
    
    <item>
      <title>14.1.1.1 Windows에서 OCI CLI 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/1/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/1/</guid>
      <description>14.1.1.1 Windows에서 OCI CLI 설치하기 관리자 모드로 PowerShell 실행 PowerShell의 remote execution policy 구성을 위해 다음 명령 실행 Set-ExecutionPolicy RemoteSigned 정책 변경을 위해 Y 응답 설치 스크립트 실행</description>
    </item>
    
    <item>
      <title>5.2.2 OpenSearch 기반 OCI Search 서비스를 사용한 로그 모니터링</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oci-services/logging/2.oci-opensearch/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oci-services/logging/2.oci-opensearch/</guid>
      <description>5.2.2 OCI Search 서비스를 사용한 로그 모니터링 OpenSearch와 OpenDashboards는 2021년에 ElasticSearch와 Cabana에서</description>
    </item>
    
    <item>
      <title>1.6.2 File Storage 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/6.persistent-volume/2.file-storage/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/6.persistent-volume/2.file-storage/</guid>
      <description>1.6.2 File Storage 사용하기(CSI Driver 기반) 컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이</description>
    </item>
    
    <item>
      <title>14.3.2 Bash 샘플 클라이언트</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/2/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/3/2/</guid>
      <description>14.3.2 Bash 샘플 클라이언트 (예전 스타일) Step 1. oci-curl 함수 준비 아래는 이전에 OCI 문서에서 제공하던 oci-curl bash 함수를 이용하는 방법을 사용합니다. 백업을 위해 남겨 놓으며, 현재 2</description>
    </item>
    
    <item>
      <title>15.2 Resource Manager을 위한 Stack Template</title>
      <link>https://thekoguryo.github.io/oci/chapter15/2/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter15/2/</guid>
      <description>15.2 Resource Manager을 위한 Stack Template Stack Template OCI 콘솔에서 내비게이션 메뉴의 Developer Services &amp;raquo; Resource Manager &amp;raquo; Stacks을 클릭합니다. Create Stack 을 클릭합니다. 두번째 Template 옵션을 선택하고 Select T</description>
    </item>
    
    <item>
      <title>14.1.2.2 CLI를 통한 파일 업로드</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/2/2/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/2/2/</guid>
      <description>14.1.2.2 CLI를 통한 파일 업로드 아래 페이지의 일부를 정리한 내용입니다. 전체 내용은 다음 링크를 참고하세요. https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.4.2/oci_cli_docs/cmdref/os/object/put.html Object Storage Namespace을 조회합니다. oci os ns get</description>
    </item>
    
    <item>
      <title>12.2 Monitoring Alarm 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter12/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter12/2/</guid>
      <description>12.2 Monitoring Alarm 만들기 Compute 인스턴스에 설정한 모니터링 중에서 CPU 사용률이 지정한 수치에 이르면 메일을 발송하도록 알람을 생성해 보겠습니다. OCI 콘솔에서 내비게이션 메뉴의 Observability</description>
    </item>
    
    <item>
      <title>12.3.1 Compute VM에 Grafana 설치</title>
      <link>https://thekoguryo.github.io/oci/chapter12/3/1/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter12/3/1/</guid>
      <description>12.3.1 Compute VM에 Grafana 설치 Compute Instance 만들기 Compute Instance 생성 화면으로 이동합니다. 이미지 소스를 Oracle Images 목록에 있는 Oracle Linux Cloud Developer Image 이미지로 선택합니다. Oracle Cloud Developer Image는 OCI CLI 등 개발툴</description>
    </item>
    
    <item>
      <title>12.3.2 Grafana 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter12/3/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter12/3/2/</guid>
      <description>12.3.2 Grafana 구성 Data Source 등록 Grafana에 로그인 합니다. 왼쪽 메뉴 Configuration &amp;raquo; Data Sources로 이동하거나, 홈 대시보드에서 Add data source를 클릭합니다. 데이터 소</description>
    </item>
    
    <item>
      <title>13.2 Autoscaling 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter13/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter13/2/</guid>
      <description>13.2 Autoscaling 구성 Autoscaling을 하기 위해서는 다음 사항이 필요합니다. Instance Pool: Autoscaling은 Instance Pool에서 현재 인스턴스 수를 설정된 메트릭에 따</description>
    </item>
    
    <item>
      <title>8.2 FSS를 Linux VM에 마운트하여 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter08/2/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter08/2/</guid>
      <description>8.2 FSS(File Storage Service)를 Linux VM에 마운트하여 사용하기 제약사항 File Storage는 Compute Instance와 같은 Subnet이라 하더라도, File Storag</description>
    </item>
    
    <item>
      <title>9.2 인스턴스에서 Custom Image 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter09/2/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter09/2/</guid>
      <description>9.2 인스턴스에서 Custom Image 만들기 중요 이미지를 만드는 동안 인스턴스가 몇 분간 오프라인 상태가 됩니다. Custom Image를 만드는 동안 인스턴스를 STOP 시키는 것을 권장하며,</description>
    </item>
    
    <item>
      <title>7.2 Bucket에 파일 올리기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/2/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/2/</guid>
      <description>7.2 Bucket에 파일 올리기 Object Storage는 단일 파일 기준 최대 50 GB까지 지원합니다. OCI Console의 메시지 기준으로는 2 GiB까지만 올릴 수 있습</description>
    </item>
    
    <item>
      <title>4.2 Reserved Public IP 할당하기</title>
      <link>https://thekoguryo.github.io/oci/chapter04/2/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter04/2/</guid>
      <description>4.2 Reserved Public IP 할당하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Compute &amp;raquo; Instances 항목으로 이동합니다. Instance 목록 중에서 고정 IP를 부여할 Instance의 이름을 클릭하여 상세</description>
    </item>
    
    <item>
      <title>6.2 사용자 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/2/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter06/2/</guid>
      <description>6.2 사용자 만들기 팁 OCI는 접속할 수 있는 사용자는 크게 IDCS 사용자와 OCI 사용자가 있습니다. OCI는 Identity Cloud Service와 기본적으로 연결설정이 되어 있어, ID</description>
    </item>
    
    <item>
      <title>3.2 가상 네트워크 환경을 위한 VCN 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/2/</guid>
      <description>3.2 가상 네트워크 환경을 위한 VCN 만들기 Virtual Cloud Network(VCN) 이란 Virtual Cloud Network(VCN)은 가상 네트워크 환경을 제공합니다. 사용자의 요구에 맞게 VCN 및 관련 자원을 구성하</description>
    </item>
    
    <item>
      <title>3.6.2 Block Volume을 Instance에 장착하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/2/</guid>
      <description>3.6.2 Block Volume을 Instance에 장착하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Compute &amp;raquo; Instances 항목으로 이동합니다. 앞서 생성한 대상 Instance의 이름</description>
    </item>
    
    <item>
      <title>3.7.2 백업으로 새 Volume 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/7/2/</guid>
      <description>3.7.2 백업으로 새 Volume 만들기 Block Volume 백업본을 이용해 새로운 Block Volume을 생성하는 복구방식입니다. 복구된 Block Volume은 새로운 Block Volume을 장착하는 것과</description>
    </item>
    
    <item>
      <title>3.8.2 백업으로 새 Boot Volume 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/8/2/</guid>
      <description>3.8.2 백업으로 새 Boot Volume 만들기 Boot Volume 백업 복구 기능은 Block Volume 백업 복구 기능과 거의 같습니다. OCI 콘솔에서 내비게이션 메뉴를 엽니다. Boot Volume 상세 페이지로 이동합니다. Boot Volume 상</description>
    </item>
    
    <item>
      <title>2.2 OCI Console 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter02/2/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter02/2/</guid>
      <description>2.2 OCI Console 접속하기 방법 #1. Welcome 이메일을 통한 접속 Free Tier Account 준비 완료 메일 수신되면 Oracle Cloud에 사인인을 클릭하여 OCI Cloud Console에 접속합니다. 로그인 화면에서</description>
    </item>
    
    <item>
      <title>6.2 Open Application Model 이해 및 애플리케이션 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/2.deploy-app/</link>
      <pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/2.deploy-app/</guid>
      <description>6.2 Open Application Model 이해 및 애플리케이션 배포하기 참고 https://verrazzano.io/latest/docs/guides/app-deployment/application-deployment-guide/ Open Application Model Open Application Model(OAM)은 컨테이너 또는 오케스트레이터 또는 인프라 보다는 개발자가 애플리케이션에 집중</description>
    </item>
    
    <item>
      <title>4.4.2 마이크로서비스 앱에 Service Mesh - Istio 적용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/service-mesh/2.sampleapp-with-istio/</link>
      <pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/service-mesh/2.sampleapp-with-istio/</guid>
      <description>4.4.2 마이크로서비스 앱에 Service Mesh - Istio 적용하기 istioctl, Helm 또는 매뉴얼로 설치가 가능합니다. 여기서는 OKE 문서에서 예시로 설명하고 있는 istioctl 기준으로 설치하고 Istio 문서에 따라 서비</description>
    </item>
    
    <item>
      <title>4.1.2 NGINX Ingress Controller에서 PATH 기반 라우팅</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/2.nginx-ingress-path/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/2.nginx-ingress-path/</guid>
      <description>4.1.2 NGINX Ingress Controller에서 PATH 기반 라우팅 PATH 기반 기본 라우팅 테스트 가장 기본적인 라우팅으로 URL PATH에 따라 라우팅 서비스를 달리하는 경우입니다. 테스</description>
    </item>
    
    <item>
      <title>2.2 Helm Chart Repository로 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/ocir/2.helm-chart/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/ocir/2.helm-chart/</guid>
      <description>2.2 Helm Chart Repository로 사용하기 OCIR은 OCI(Open Container Initiative) Registry로 Helm 3에서는 현재 OCI Registry를 실험적(experimental)인</description>
    </item>
    
    <item>
      <title>1.6.2 File Storage 사용하기(Flex Volume Driver)</title>
      <link>https://thekoguryo.github.io/archives/oracle-cloudnative/oke/6.persistent-volume/2.file-storage-by-flex-volume-driver/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/archives/oracle-cloudnative/oke/6.persistent-volume/2.file-storage-by-flex-volume-driver/</guid>
      <description>1.6.2 File Storage 사용하기(Flex Volume Driver) 컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이터</description>
    </item>
    
    <item>
      <title>1.2 OKE 클러스터 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/2.install-quick-oke-cluster/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/2.install-quick-oke-cluster/</guid>
      <description>1.2 OKE 클러스터 만들기 Quick 모드로 클러스터 만들기 처음 OKE 클러스터를 만드는 단계로 실환경에서는 별도의 OKE 사용자 및 VCN 등 커스텀한 환경을 사용하겠지만, OKE를 이해</description>
    </item>
    
    <item>
      <title>14.2.2 Terraform Configurations 작성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/2/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/2/</guid>
      <description>14.2.2 Terraform Configurations 작성하기 Terraform을 쓰려면 Terraform 설정 파일(.tf)에 HashiCorp Configuration Language(HCL) 형식으로 OCI 인프라 자원을 표현해야 합니다. JSON 형식도 지원하지만, 여기서는 HCL 포맷</description>
    </item>
    
    <item>
      <title>10.2 VCN 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter10/2/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/2/</guid>
      <description>10.2 VCN 구성 LoadBalancer 테스트용 VCN 만들기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking » Virtual Cloud Networks 항목으로 이동합니다. 왼쪽 아래 Compartment에서 Sandbox를</description>
    </item>
    
    <item>
      <title>14.1.1.2 리눅스계열에서 OCI CLI 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/2/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/2/</guid>
      <description>14.1.1.2 리눅스계열에서 OCI CLI 설치하기 터미널 실행 설치 스크립트 실행을 위해 다음 실행 bash -c &amp;#34;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)&amp;#34; Python 설치여부: Y 응답 설치 경로에 대한 확인 후 설정 CLI의 새 버전 업데이</description>
    </item>
    
    <item>
      <title>5.2 Default Security List 업데이트 하기</title>
      <link>https://thekoguryo.github.io/oci/chapter05/2/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter05/2/</guid>
      <description>5.2 방법 #1. Default Security List 업데이트 하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Compute &amp;raquo; Instances 항목으로 이동합니다. 원하는 Instance를 클릭하여 상세 페이지로 이동합니다</description>
    </item>
    
    <item>
      <title>3.5.2 Windows에서 PuTTY로 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/2/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/5/2/</guid>
      <description>3.5.2 Windows에서 PuTTY로 접속하기 PuTTY Key Generator로 생성한 SSH Key는 Save private key를 통해 PuTTY Private Key (PPK) .ppk로 저장하여 PuTTY에서 사용</description>
    </item>
    
    <item>
      <title>1.2 Fault Domains</title>
      <link>https://thekoguryo.github.io/oci/chapter01/2/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/2/</guid>
      <description>1.2 Fault Domains Fault Domain은 Availability Domain 내에 하드웨어와 인프라스트럭쳐의 그룹입니다. 각 Availability Domain은 3개의 Fault Domain을 가지고 있습니다. Fault Domain은</description>
    </item>
    
    <item>
      <title>15.3 Resource Manager을 위한 Private Git 서버 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter15/3/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter15/3/</guid>
      <description>15.3 Resource Manager을 위한 Private Git 서버 구성 Resource Manager는 테라폼 설정 저장소로 GitHub, GitLab을 지원합니다. 퍼블릭 인터넷으로 접근이 가능한 환경은 당연히</description>
    </item>
    
    <item>
      <title>14.1.1.3 Config File 설정</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/3/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/3/</guid>
      <description>14.1.1.3 Config File 설정 설정을 위해 필요한 정보 사전 확인 user OCID 오른쪽 위 사용자 Profle에서 User Settings 클릭 후 사용자 OCID 확인 Tenancy OCID 오른쪽 위 사용자 Profle에서 Tenancy 클릭 후 Tenancy OCID</description>
    </item>
    
    <item>
      <title>14.2.3 Terraform OCI Provider 연결정보 구하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/3/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/3/</guid>
      <description>14.2.3 Terraform OCI Provider 연결정보 구하기 Tenancy OCID 오른쪽 위 사용자 Profile에서 Tenancy 클릭 후 Tenancy OCID 확인 user OCID 오른쪽 위 사용자 Profile에서 User Settings 클릭 후 사용자 OCID 확인 region: 사용할</description>
    </item>
    
    <item>
      <title>13.3 Autoscaling 테스트</title>
      <link>https://thekoguryo.github.io/oci/chapter13/3/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter13/3/</guid>
      <description>13.3 Autoscaling 테스트 Scale Out 발생 테스트 Instance Pool로 이동해서 현재 있는 Compute 인스턴스에 SSH로 접속합니다. stress 툴 설치 sudo yum-config-manager --enable ol7_developer_EPEL sudo yum install -y stress stress 수행 sudo stress --cpu N 실행 예시 사용할 Compute</description>
    </item>
    
    <item>
      <title>8.3 접근 제어를 위한 Export Option</title>
      <link>https://thekoguryo.github.io/oci/chapter08/3/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter08/3/</guid>
      <description>8.3 접근 제어를 위한 Export Option Export Option 설정을 통한 권한 제어 앞서 만든 File System의 상세화면으로 이동합니다. 아래쪽에 그림과 같이 Export 리스트에서 생성된 Export를</description>
    </item>
    
    <item>
      <title>7.3 Object 권한 관리 - 사전인증</title>
      <link>https://thekoguryo.github.io/oci/chapter07/3/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/3/</guid>
      <description>7.3 Object 권한 관리 - 사전인증(Pre-Authenticated Requests) Pre-Authenticated Requests는 Bucket 또는 Object에 대해서 인증 없이 사용자가 접근할 수 있도록 설정</description>
    </item>
    
    <item>
      <title>3.7.3 백업을 다른 Region으로 복사하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/3/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/7/3/</guid>
      <description>3.7.3 백업을 다른 Region으로 복사하기 Block Volume의 백업은 단일 Region 내에서만 가능합니다. 장애 복구나 다른 용도로 다른 Region에서 필요한 경우에는 Region</description>
    </item>
    
    <item>
      <title>3.3 SSH 접속을 위한 Key Pair 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/3/</guid>
      <description>3.3 SSH 접속을 위한 Key Pair 만들기 서버 인스턴스에 접근하기 위해 패스워드 대신 SSH Key Pair를 사용합니다. Key Pair는 개인키와 공개키로 구성되며, 개인키는 사용자</description>
    </item>
    
    <item>
      <title>3.5.3 PEM &lt;-&gt; PPK 포맷 변경하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/5/3/</guid>
      <description>3.5.3 PEM &amp;lt;-&amp;gt; PPK 포맷 변경하기 PEM(Privacy Enhanced Mail) OCI 인스턴스에서 사용하는 Key Pair 포맷으로 앞선 문서 기준으로 ssh-keygen 명령을 통해 생성됨 PPK(PuTTY Private Key) PuTTY에서 사용하는 키 포맷으로 PuTTY Key Ge</description>
    </item>
    
    <item>
      <title>3.6.3 Block Volume에 연결하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/3/</guid>
      <description>3.6.3 Block Volume에 연결하기 Block Volume 장착 후에 iSCSI 연결을 설정해야 합니다. iscsiadm 명령으로 실행되며 실행해야 할 명령은 장착된 Block Volume에서 제공하므로 복사 후 그대</description>
    </item>
    
    <item>
      <title>3.8.3 Boot Volume으로 새 Instance 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/8/3/</guid>
      <description>3.8.3 Boot Volume으로 새 Instance 생성하기 아직 Instance에 사용 중이 아닌 Boot Volume을 이용하여 새 Compute Instance를 만들 수 있습니다. Boot Volum</description>
    </item>
    
    <item>
      <title>2.3 OCI Console 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter02/3/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter02/3/</guid>
      <description>2.3 OCI Console 사용하기 OCI Console UI 서비스 내비게이션 왼쪽 위의 내비게이션 메뉴를 통해 서비스 및 자원에 대한 작업을 수행할 수 있습니다. Region 관리 현재 Region이 오른쪽 위에</description>
    </item>
    
    <item>
      <title>6.3 Multicluster Verrazzano 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/3.multicluster-verrazzano/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/3.multicluster-verrazzano/</guid>
      <description>6.3 Multicluster Verrazzano 설치하기 참고문서 https://verrazzano.io/latest/docs/applications/multicluster/ Verrazzano 설치 admin-cluster에 Verrazzano 설치 단일 클러스터 환경에 Verrazzano는 설치하는 것과 동일하게 설치합니다. dev 또</description>
    </item>
    
    <item>
      <title>4.1.3 NGINX Ingress Controller에서 host 기반 라우팅(feat. OCI DNS)</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/3.nginx-ingress-host/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/3.nginx-ingress-host/</guid>
      <description>4.1.3 NGINX Ingress Controller에서 host 기반 라우팅(feat. OCI DNS) Ingress Controller에서 도메인 네임을 기반하여 라우팅하기 위해 OCI DNS를 사용하는 방법</description>
    </item>
    
    <item>
      <title>14.3.3 Insomnia - OCI REST API 호출하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/3/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/3/3/</guid>
      <description>14.3.3 Insomnia - OCI REST API 호출하기 전문 REST 클라이언트 툴인 Insomnia를 사용하면 GUI를 통해 사용하기가 더 편리합니다. 아직 OCI Request Signature를 기본 지원하</description>
    </item>
    
    <item>
      <title>10.3 Backend 웹서버 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/3/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/3/</guid>
      <description>10.3 Backend 웹서버 만들기 첫 번째 Linux Instance 만들기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Compute » Instances 항목으로 이동합니다. Instance를 생성할 Region을 확인하고 Create</description>
    </item>
    
    <item>
      <title>6.3 그룹 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/3/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter06/3/</guid>
      <description>6.3 그룹 만들기 Step 1. OCI 그룹 추가 관리자로 OCI 콘솔에 로그인합니다. OCI 콘솔에서 내비게이션 메뉴를 엽니다. Identity &amp;amp; Security &amp;raquo; Identity &amp;raquo; Groups 항목으로 이동합니다. Cloud Account 생성후에 Administrators 그</description>
    </item>
    
    <item>
      <title>5.3 Custom Security List 추가하기</title>
      <link>https://thekoguryo.github.io/oci/chapter05/3/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter05/3/</guid>
      <description>5.3 방법 #2. Custom Security List 추가하기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking &amp;raquo; Virtual Private Networks 항목으로 이동합니다. 현재 사용중인 VCN(예시, ExampleVCN)을 클릭</description>
    </item>
    
    <item>
      <title>1.3 Compartment</title>
      <link>https://thekoguryo.github.io/oci/chapter01/3/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/3/</guid>
      <description>1.3 Compartment Compartment는 자원들을 쉽게 관리할 수 있도록 하는 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초로 Root Compartment 하나가 만들어</description>
    </item>
    
    <item>
      <title>14.1.1.4 API Public Key 등록</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/4/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/4/</guid>
      <description>14.1.1.4 API Public Key 등록 OCI Config File에 등록한 사용자 상세 페이지로 이동 왼쪽 아래 Resources에서 API Keys 선택 Add API Key 클릭 oci setup config 실행 후 생성된 API Public Key 확인 [opc@bastion-host ~]$ cat ~/.oci/oci_api_key_public.pem -----BEGIN</description>
    </item>
    
    <item>
      <title>8.4 백업을 위한 Snapshot</title>
      <link>https://thekoguryo.github.io/oci/chapter08/4/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter08/4/</guid>
      <description>8.4 백업을 위한 Snapshot 실행한 시간 기준으로 File System의 Snapshot을 만들 수 있습니다. 만들어진 Snapshot을 통해 파일 또는 전체를 복구할 수 있습니</description>
    </item>
    
    <item>
      <title>9.3 Custom Image Export/Import</title>
      <link>https://thekoguryo.github.io/oci/chapter09/3/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter09/3/</guid>
      <description>9.3 Custom Image Export/Import Custom Image는 Import, Export 기능을 제공합니다. Custom Image는 해당 Region 내 Comparment에 속하게 되며, 다른 Compartment로 복사하거나,</description>
    </item>
    
    <item>
      <title>7.4 Object 권한 관리 - Public Bucket</title>
      <link>https://thekoguryo.github.io/oci/chapter07/4/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/4/</guid>
      <description>7.4 Object 권한 관리 - Public Bucket 생성된 Bucket은 기본적으로 Private 상태입니다. 인증없이는 접근할 수 없는 상태입니다. Bucket을 Public으로 변경하게 되면 별</description>
    </item>
    
    <item>
      <title>3.7.4 정책 기반 Block Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/4/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/7/4/</guid>
      <description>3.7.4 정책 기반 Block Volume 백업하기 Volume Backup Policies Bronze Policy 월단위 - 매월 첫날에 월간 증분 백업이 실행됩니다. 12개월 동안 유지됩니다. 매단위 - 매년 1월 1일에 전체 백업이 실행됩니</description>
    </item>
    
    <item>
      <title>6.4 Policy 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/4/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter06/4/</guid>
      <description>6.4 Policy 만들기 Step 1. 생성된 그룹을 위한 Policy 추가 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Identity &amp;amp; Security &amp;raquo; Identity &amp;raquo; Policies 항목으로 이동합니다. 왼쪽 아래에 대상 Compartment</description>
    </item>
    
    <item>
      <title>3.4 Linux 인스턴스 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/4/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/4/</guid>
      <description>3.4 Linux 인스턴스 생성하기 팁 인스턴스를 생성하기 전에 자원이 충분한지 사전에 확인하는 것이 좋습니다. Service Limit 조회를 통해 가용한 자원이 있는지, 특히 가용한 CPU가 있</description>
    </item>
    
    <item>
      <title>3.6.4 Block Volume 포맷하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/4/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/4/</guid>
      <description>3.6.4 Block Volume 포맷하기 Compute Instance에 SSH로 접속한 후 Block Volume을 포맷합니다. 파일 시스템 타입은 원하는 다른 것으로 변경하여 포맷하셔도 됩니다. sudo mkfs</description>
    </item>
    
    <item>
      <title>2.4 최초 Cloud Account(Tenancy) 구조</title>
      <link>https://thekoguryo.github.io/oci/chapter02/4/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter02/4/</guid>
      <description>2.4 최초 Cloud Account(Tenancy) 구조 Cloud Account 환경이 생성되면 OCI Native IAM에 의해서 사용자가 관리됩니다. OCI Classic의 유물로 기본적으로 Oracle Identity Cloud Service(IDCS)를 Identity</description>
    </item>
    
    <item>
      <title>6.4 Multicluster에 애플리케이션 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/4.deploy-app-to-multicluster/</link>
      <pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/4.deploy-app-to-multicluster/</guid>
      <description>6.4 Multicluster에 애플리케이션 배포하기 Helidon 예제 애플리케이션 배포하기 Helidon 프레임워크를 사용해서 개발한 Java 애플리케이션을, Open Application Model을 사용</description>
    </item>
    
    <item>
      <title>4.1.4 NGINX Ingress Controller에서 TLS termination</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/4.nginx-ingress-tls-termination/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/4.nginx-ingress-tls-termination/</guid>
      <description>4.1.4 NGINX Ingress Controller에서 TLS termination(feats. Let&amp;rsquo;s Encrypt) Ingress Controller에서 외부 수신을 SSL로 하기 위한 설정을 확인합니다. Self-Signed 인증서 사용하기 테스트 목적으로 Self-Signed</description>
    </item>
    
    <item>
      <title>1.4 앱 배포 및 Load Balancer 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/4.deploy-docker-hub-image-with-lb/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/4.deploy-docker-hub-image-with-lb/</guid>
      <description>1.4 앱 배포 및 Load Balancer 사용하기 Docker Hub 이미지 테스트 가장 흔한 형태인 Public Container Registry에 이미지를 가져와서 OKE 클러스터에 배포를 해봅니다. kubectl create deployment nginx-docker-hub --image=nginx:latest 배포 결과를 확</description>
    </item>
    
    <item>
      <title>14.3.4 Postman - OCI REST API 호출하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/4/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/3/4/</guid>
      <description>14.3.4 Postman - OCI REST API 호출하기 가장 많이 사용하는 전문 REST 클라이언트 툴인 Postman을 사용하면 GUI를 통해 사용하기가 더 편리합니다. 아직 OCI Request Signatur</description>
    </item>
    
    <item>
      <title>14.2.4 Terraform Configuration 실행하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/4/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/4/</guid>
      <description>14.2.4 Terraform Configuration 실행하기 명령창실행 Configuration 파일이 있는 경로로 이동 [opc@bastion-host example_vcn]$ ls -la total 12 drwxrwxr-x. 2 opc opc 63 Jan 18 09:50 . drwxrwxr-x. 3 opc opc 25 Jan 18 09:46 .. -rw-rw-r--. 1 opc opc 359 Jan 18 09:47 provider.tf -rw-rw-r--. 1 opc opc 479 Jan 18 09:50 terraform.tfvars -rw-rw-r--. 1 opc opc 284</description>
    </item>
    
    <item>
      <title>10.4 Load Balancer를 위한 Subnet 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/4/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/4/</guid>
      <description>10.4 Load Balancer를 위한 Subnet 만들기 Subnet 만들기 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking » Virtual Cloud Networks 항목으로 이동합니다. 앞서 만든 VCN인 LoadBalancerVCN 클릭 Create Subnets 클릭 생성</description>
    </item>
    
    <item>
      <title>1.4 Virtual Cloud Network(VCN)</title>
      <link>https://thekoguryo.github.io/oci/chapter01/4/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/4/</guid>
      <description>1.4 Virtual Cloud Network(VCN) OCI를 사용하게 되면 처음 해야 할 작업 중의 하나가 다른 클라우드 자원을 위해 Virtual Cloud Network(VCN)를 만드는 작업입니다. Oracle 데이터 센터에 서버</description>
    </item>
    
    <item>
      <title>5.4 Apache HTTP Server 접속 테스트</title>
      <link>https://thekoguryo.github.io/oci/chapter05/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter05/4/</guid>
      <description>5.4 Apache HTTP Server 접속 테스트 Apache HTTP Server가 구동하는 Compute Instance를 통해 접속을 테스트합니다. 그림처럼 잘 연결되는 것을 확인할 수 있습니다.</description>
    </item>
    
    <item>
      <title>4.1.5 NGINX Ingress Controller에서 클라이언트 IP 얻기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/5.nginx-ingress-preserve-client-ip/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oss/ingress-controller/5.nginx-ingress-preserve-client-ip/</guid>
      <description>4.1.5 NGINX Ingress Controller에서 클라이언트 IP 얻기 Nginx Ingress Controller를 사용할 때, Pod에 있는 애플리케이션에서 모니터링 등을 위해 실 Client IP를 확인</description>
    </item>
    
    <item>
      <title>7.5 Public Bucket을 통한 정적 웹사이트 호스팅</title>
      <link>https://thekoguryo.github.io/oci/chapter07/5/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/5/</guid>
      <description>7.5 Public Bucket을 통한 정적 웹사이트 호스팅 Public Bucket을 생성하면 URL 경로로 접근할 수 있다는 것을 이용하며 점을 이용하여 간단한 정적 웹사이트 호스팅을 해보</description>
    </item>
    
    <item>
      <title>3.6.5 Block Volume 마운트하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/5/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/5/</guid>
      <description>3.6.5 Block Volume 마운트하기 OCI 문서에 따르면 root volume 이외 volume이 둘 이상일 경우 장치 이름으로 마운트 할 경우 서버 재기동 후 장치 이름과 실제 장치의 대응 되는 순서가 달라 질</description>
    </item>
    
    <item>
      <title>6.5 WebLogic Server를 Verrazzano를 통해 OKE에 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/5.weblogic-on-oke-using-verrazzano/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/verrazzano/5.weblogic-on-oke-using-verrazzano/</guid>
      <description>6.5 WebLogic Server를 Verrazzano를 통해 OKE에 배포하기 Verrazzano 설치시 WebLogic Operator가 함께 설치가 됩니다. 이번 내용은 아래 문서에 있는 내용을 따라</description>
    </item>
    
    <item>
      <title>1.5 OCIR 이미지 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/5.deploy-ocir-image/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/5.deploy-ocir-image/</guid>
      <description>1.5 OCIR 이미지 사용하여 앱 배포하기 OCIR에 이미지 등록하기 Oracle Cloud Infrastructure Registry(OCIR)는 오라클이 제공하는 관리형 컨테이너 레지스트리로 Docker V2 API</description>
    </item>
    
    <item>
      <title>14.2.5 다중 환경을 위한 workspace 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/5/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/5/</guid>
      <description>14.2.5 다중 환경을 위한 workspace 사용하기 OCI는 여러 Region을 제공하고 있습니다. 필요에 따라 동일 자원을 여러 Region에 한꺼번에 만들어야 하는 경우가 있습니</description>
    </item>
    
    <item>
      <title>10.5 Load Balancer 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/5/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/5/</guid>
      <description>10.5 Load Balancer 만들기 Load Balancer 생성 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking &amp;raquo; Load Balancers 항목으로 이동합니다. Create Load Balancer 클릭합니다. Load Balancer 를 타입으로 선정합니다. Load Balancer Type: L7 로드밸</description>
    </item>
    
    <item>
      <title>6.5 Policy 개념 잡기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/5/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter06/5/</guid>
      <description>6.5 Policy 개념 잡기 IAM Policy IAM Policy는 OCI 자원에 대한 접근 정책입니다. 하나의 정책은 일반적으로 사용자 그룹에 특정 Compartment에 속한 특정 타입의 자원</description>
    </item>
    
    <item>
      <title>1.5 Bare Metal, Virtual Machine</title>
      <link>https://thekoguryo.github.io/oci/chapter01/5/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/5/</guid>
      <description>1.5 Bare Metal, Virtual Machine OCI는 Bare Metal과 Virtual Machine 인스턴스를 모두 제공하고 있습니다. Bare Metal: 물리적인 서버를 단일 사용자에게 전용으로 사용할 수 있는 환경을 제공합니다. 물</description>
    </item>
    
    <item>
      <title>14.1.1.5 OCI CLI 설치 확인</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/5/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/5/</guid>
      <description>14.1.1.5 OCI CLI 설치 확인 oci os ns get 명령을 통해 Tenancy Name을 가져오는 지 확인하여 OCI CLI가 잘 동작하는 지 확인합니다. 다시 리눅스 호스트로 돌아가 oci os ns get을 실행하</description>
    </item>
    
    <item>
      <title>7.6 CloudBerry Explorer를 통한 파일 업로드</title>
      <link>https://thekoguryo.github.io/oci/chapter07/6/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/6/</guid>
      <description>7.6 CloudBerry Explorer를 통한 파일 업로드 Object Storage는 자체 API를 제공합니다. 또한 Amazon S3 호환 API를 제공합니다. OCI CLI를 통해 다량, 대용량 파일</description>
    </item>
    
    <item>
      <title>3.6.6 Block Volume 장착 해제하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/6/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/6/</guid>
      <description>3.6.6 Block Volume 장착 해제하기 언마운트 하기 Compute Instance에 SSH로 접속합니다. /etc/fstab 업데이트 sudo vi /etc/fstab 명령을 수행하여 fstab 파일에서 언마운트할 Volume인 /mn</description>
    </item>
    
    <item>
      <title>1.6 클라우드 서비스 제공업체(CSP) 간 제공 서비스 매핑</title>
      <link>https://thekoguryo.github.io/oci/chapter01/6/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter01/6/</guid>
      <description>1.6 클라우드 서비스 제공업체(Cloud Service Provider) 간 제공 서비스 매핑 IaaS 기준으로 Oracle Cloud Infrastructure에서 제공하는 클라우드 서비스를 이해를 돕고자 타</description>
    </item>
    
    <item>
      <title>14.2.6 예시, list, count를 이용한 유저 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/6/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/6/</guid>
      <description>14.2.6 예시, list, count를 이용한 유저 만들기 자원을 만들다 보면 Array를 통해 동일한 자원을 여러개 만드는 경우가 있습니다. 실습환경을 구성하기위해 여러 유저</description>
    </item>
    
    <item>
      <title>10.6 Load Balancer 연결 확인</title>
      <link>https://thekoguryo.github.io/oci/chapter10/6/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter10/6/</guid>
      <description>10.6 Load Balancer 연결 확인 OCI 콘솔에서 내비게이션 메뉴를 엽니다. Networking » Load Balancers 항목으로 이동합니다. 앞서 생성한 Load Balancer의 Public IP를 확인합니다. 브라우저를 통해</description>
    </item>
    
    <item>
      <title>7.7 수명주기를 통한 Archive 설정하기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/7/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter07/7/</guid>
      <description>7.7 수명주기를 통한 Archive 설정하기 Object Storage의 사용 사례의 하나로 디스크 이미지 백업, 파일 백업 등의 용도로 많이 사용합니다. 최근 백업을 사용할 가능성이 높지</description>
    </item>
    
    <item>
      <title>3.6.7 Block Volume 삭제하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/7/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter03/6/7/</guid>
      <description>3.6.7 Block Volume 삭제하기 주의사항 Block Volume을 Terminate 하면 완전히 삭제됩니다. 복구할 수 없으니 이점 유의합니다. OCI 콘솔에서 내비게이션 메뉴를 엽니다. Storage &amp;raquo; Block Storage &amp;raquo; Block Volumes</description>
    </item>
    
    <item>
      <title>1.7 Kubernetes 버전 업그레이드</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke/7.supported-version-and-upgrade/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke/7.supported-version-and-upgrade/</guid>
      <description>1.7 Kubernetes 지원 버전 및 업그레이드 Kubernetes 지원 버전 Kubernetes 버전은 x.y.z로 표현되며, 각각 x는 메이저, y는 마이너, z는 패치 버전을 뜻하며, 오픈소스 Kubernete</description>
    </item>
    
    <item>
      <title>14.2.7 OCI Terraform 사용 예제</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/7/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oci/chapter14/2/7/</guid>
      <description>14.2.7 OCI Terraform 사용 예제 오라클에서 OCI Github에서 다양한 예제를 제공하고 있습니다. 다음 사이트를 참고하세요. terraform-provider-oci/docs/examples</description>
    </item>
    
    <item>
      <title>ARM 기반 서버 성능 비교: OCI vs. AWS</title>
      <link>https://thekoguryo.github.io/blog/arm-based-server-performance/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/blog/arm-based-server-performance/</guid>
      <description>ARM 기반 서버 성능 비교: OCI vs. AWS OCI Ampere Altra A1 오라클은 2021년 5월부터 Arm 기반의 Ampere A1 Compute Shape을 가상 머신에서 사용할 수 있습니다. Release Notes - Arm-based Ampere A1 Compute shape now available Ampere A1</description>
    </item>
    
    <item>
      <title>Code Editor is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20220802-code-editor-is-now-available/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:02 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220802-code-editor-is-now-available/</guid>
      <description>오라클 클라우드 콘솔에서 코드 에디터를 제공합니다. Cloud Shell과 동일한 사용자 환경을 사용합니다.</description>
    </item>
    
    <item>
      <title>Cloud Shell now offers Private Access</title>
      <link>https://thekoguryo.github.io/release-notes/20220802-cloud-shell-now-offers-private-access/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220802-cloud-shell-now-offers-private-access/</guid>
      <description>Cloud Shell에서 Private IP를 가지는 자원에 대한 접근을 지원합니다.</description>
    </item>
    
    <item>
      <title>CloudShell now offers GraalVM Enterprise JDK 17 and Native Image</title>
      <link>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</link>
      <pubDate>Tue, 26 Jul 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</guid>
      <description>CloudShell에서 GraalVM Enterprise JDK 17을 제공합니다.</description>
    </item>
    
    <item>
      <title>Support for VCN-native pod networking</title>
      <link>https://thekoguryo.github.io/release-notes/20220712-support-for-vcn-native-pod-networking/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220712-support-for-vcn-native-pod-networking/</guid>
      <description>OCI VCN-Native Pod Networking CNI을 사용하는 경우, Pod가 VCN의 IP의 할당받아, 해당 IP로 직접 통신할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Support for worker node deletion, along with new cordon and drain options</title>
      <link>https://thekoguryo.github.io/release-notes/20220628-support-for-worker-node-deletion-along-with-new-cordon-and-drain-options/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220628-support-for-worker-node-deletion-along-with-new-cordon-and-drain-options/</guid>
      <description>특정 Worker Node를 삭제하는 기능을 제공합니다.</description>
    </item>
    
    <item>
      <title>Private endpoints for Resource Manager</title>
      <link>https://thekoguryo.github.io/release-notes/20220608-private-endpoints-for-resource-manager/</link>
      <pubDate>Wed, 08 Jun 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220608-private-endpoints-for-resource-manager/</guid>
      <description>Resource Manager에서 Private Endpoint를 통해 인터넷을 거치지 않고, Private 환경에서 있는 자원에 대한 접근을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for OKE images as worker node base images</title>
      <link>https://thekoguryo.github.io/release-notes/20220601-support-for-oke-images-as-worker-node-base-images/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:02 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220601-support-for-oke-images-as-worker-node-base-images/</guid>
      <description>Worker Node의 베이스 이미지로 범용 이미지가 아닌 OKE 전용 이미지를 사용하므로 이전보다 더 빠르게 클러스터 생성 및 확장이 가능합니다.</description>
    </item>
    
    <item>
      <title>Support for fault domains in node pool placement configuration</title>
      <link>https://thekoguryo.github.io/release-notes/20220601-support-for-fault-domains-in-node-pool-placement-configuration/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220601-support-for-fault-domains-in-node-pool-placement-configuration/</guid>
      <description>Node Pool 생성시 Availability Domain을 설정시 Fault Domain을 사용자가 지정할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Support for CSI metrics</title>
      <link>https://thekoguryo.github.io/release-notes/20220526-support-for-csi-metrics/</link>
      <pubDate>Thu, 26 May 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220526-support-for-csi-metrics/</guid>
      <description>Persistent Volume에 대한 용량에 대한 모니터링 지원을 추가적인 메트릭을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for Kubernetes version 1.23.4</title>
      <link>https://thekoguryo.github.io/release-notes/20220518-support-for-kubernetes-version-1.23.4/</link>
      <pubDate>Wed, 18 May 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220518-support-for-kubernetes-version-1.23.4/</guid>
      <description>쿠버네티스 지원 버전이 업데이트 되었습니다. 이제 1.23.4을 새롭게 지원합니다.</description>
    </item>
    
    <item>
      <title>Detect vulnerabilities from the DevOps build pipeline</title>
      <link>https://thekoguryo.github.io/release-notes/20220517-detect-vulnerabilities-from-the-devops-build-pipeline/</link>
      <pubDate>Tue, 17 May 2022 00:00:02 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220517-detect-vulnerabilities-from-the-devops-build-pipeline/</guid>
      <description>Application Dependency Management (ADM) 서비스와 연계하여 DevOps 빌드 파이프라인에서 라이브러리 패키지에 대한 취약점 검사기능을 제공합니다.</description>
    </item>
    
    <item>
      <title>New features for DevOps</title>
      <link>https://thekoguryo.github.io/release-notes/20220517-new-features-for-devops/</link>
      <pubDate>Tue, 17 May 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220517-new-features-for-devops/</guid>
      <description>OCI DevOps 서비스가 Bitbucket Cloud, Helm Chart, 취약점 검사 기능을 제공합니다.</description>
    </item>
    
    <item>
      <title>OCI Search Service with OpenSearch is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20220510-oci-search-service-with-opensearch-is-now-available/</link>
      <pubDate>Tue, 10 May 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220510-oci-search-service-with-opensearch-is-now-available/</guid>
      <description>OpenSearch 기반의 관리형 서비스로 OCI Search 서비스가 출시되었습니다.</description>
    </item>
    
    <item>
      <title>Accelerate function start-ups using provisioned concurrency</title>
      <link>https://thekoguryo.github.io/release-notes/20220504-accelerate-function-start-ups-using-provisioned-concurrency/</link>
      <pubDate>Wed, 04 May 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220504-accelerate-function-start-ups-using-provisioned-concurrency/</guid>
      <description>함수 실행을 위한 초기 응답지연을 최소화하기 위해 항상 provisioned concurrency 만큼 가용 환경을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for PVC block volume performance levels</title>
      <link>https://thekoguryo.github.io/release-notes/20220411-support-for-pvc-block-volume-performance-levels/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220411-support-for-pvc-block-volume-performance-levels/</guid>
      <description>Persistent Volume으로 사용하는 Block Volume에 대해서 성능 레벨을 지정할 수 있게 되었습니다.</description>
    </item>
    
    <item>
      <title>DevOps now supports deployment to private Kubernetes API endpoints</title>
      <link>https://thekoguryo.github.io/release-notes/20220329-devops-now-supports-deployment-to-private-kubernetes-api-endpoints/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:02 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220329-devops-now-supports-deployment-to-private-kubernetes-api-endpoints/</guid>
      <description>DevOps 서비스가 프라이빗 쿠버네티스 API 엔드포인트를 지원합니다.</description>
    </item>
    
    <item>
      <title>DevOps adds Blue-Green and Canary deployment strategies</title>
      <link>https://thekoguryo.github.io/release-notes/20220329-devops-adds-blue-green-and-canary-deployment-strategies/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220329-devops-adds-blue-green-and-canary-deployment-strategies/</guid>
      <description>DevOps 서비스에서 Blue/Green 배포 전략, Canary 배포 전략을 새롭게 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for Kubernetes version 1.22.5</title>
      <link>https://thekoguryo.github.io/release-notes/20220321-support-for-kubernetes-version-1.22.5/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220321-support-for-kubernetes-version-1.22.5/</guid>
      <description>쿠버네티스 지원 버전이 업데이트 되었습니다. 이제 1.22.5을 새롭게 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for OCI Network Load Balancers</title>
      <link>https://thekoguryo.github.io/release-notes/20220315-support-for-oci-network-load-balancers/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:02 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220315-support-for-oci-network-load-balancers/</guid>
      <description>OKE에서 Service Type을 Load Balancer를 사용할때 이제는 OCI &lt;strong&gt;Network&lt;/strong&gt; Load Balancer을 추가적으로 지원합니다.</description>
    </item>
    
    <item>
      <title>Container image scanning using the Console</title>
      <link>https://thekoguryo.github.io/release-notes/20220315-container-image-scanning-using-the-console/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220315-container-image-scanning-using-the-console/</guid>
      <description>Oracle Cloud 콘솔에서 Vulnerability Scanning 서비스를 통해 컨테이너 이미지 스캐닝하여 취약점을 분석하는 기능을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for function invocation logs</title>
      <link>https://thekoguryo.github.io/release-notes/20220303-support-for-function-invocation-logs/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220303-support-for-function-invocation-logs/</guid>
      <description>서비스 중인 Function을 클라이언트가 호출을 로그 정보를 확인하는 기능을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for PVC block volume expansion</title>
      <link>https://thekoguryo.github.io/release-notes/20220228-support-for-pvc-block-volume-expansion/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220228-support-for-pvc-block-volume-expansion/</guid>
      <description>OKE에서 Block Volume을 Persistent Volume으로 사용하는 경우, 할당 받은 이후에도 사용 중인 볼륨의 크리를 확장하는 기능을 지원합니다.</description>
    </item>
    
    <item>
      <title>Support for 2 GB functions</title>
      <link>https://thekoguryo.github.io/release-notes/20220211-support-for-2gb-functions/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:01 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/release-notes/20220211-support-for-2gb-functions/</guid>
      <description>Functions 서비스에서 하나의 함수에서 사용할 수 있는 최대 메모리를 2GB까지 지원합니다.</description>
    </item>
    
    <item>
      <title>3.1 DevOps 서비스를 통해 Spring Boot 앱 배포 자동화하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/devops/1.deploy-app-on-oke-using-devops/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/devops/1.deploy-app-on-oke-using-devops/</guid>
      <description>3.1 DevOps 서비스를 이용한 Spring Boot 앱을 OKE에 배포 자동화하기 DevOps 서비스 사용을 위한 IAM Policy 설정 DevOps 서비스를 사용하기 위해서는 DevOps 자원들에 권한 설정이 필요합니다. 공식 문서</description>
    </item>
    
    <item>
      <title>3.2 DevOps 서비스의 Blue/Green 배포 전략으로 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/devops/2.bluegreen-stragtegy/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/devops/2.bluegreen-stragtegy/</guid>
      <description>3.2 DevOps 서비스의 Blue/Green 배포 전략으로 배포하기 DevOps 서비스를 통한 CI/CD 배포 자동화 하기 사전 준비 사항 4.1.1 NGINX Ingress Controller 설치하기을 참조하여 Nginx Ingress Controller를 미리 설치합니</description>
    </item>
    
    <item>
      <title>3.3 DevOps 서비스의 Canary 배포 전략으로 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/devops/3.canary-stragtegy/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/devops/3.canary-stragtegy/</guid>
      <description>3.3 DevOps 서비스의 Canary 배포 전략으로 배포하기 2.2 DevOps 서비스의 Blue/Green 배포 전략으로 배포하기에서 만든 Code Repository, Build Pipeline, Trigger 등을 그대로 사용합니다. 여기서는 배포전략으로 변경이 발생하</description>
    </item>
    
    <item>
      <title>3.4 DevOps 서비스를 통해 Helm Chart로 배포 자동화하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/devops/4.deploy-app-with-helm-chart/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/devops/4.deploy-app-with-helm-chart/</guid>
      <description>3.4 DevOps 서비스를 통해 Helm Chart로 배포 자동화하기 DevOps 서비스를 통한 CI/CD 배포 자동화 하기 DevOps 프로젝트 만들기 이전에 생성한 프로젝트를 그대로 사용하거나, 새롭게 프로</description>
    </item>
    
    <item>
      <title>3.5 DevOps 서비스의 빌드시 패키지 취약점 검사하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/devops/5.detect-vulnerabilities-from-build-pipeline/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/oracle-cloudnative/devops/5.detect-vulnerabilities-from-build-pipeline/</guid>
      <description>3.5 DevOps 서비스의 빌드시 패키지 취약점 검사하기 취약점 검사를 위한 소스 코드 스캐닝 Application Dependency Management (ADM) 서비스는 OCI DevOps 빌드 파이프라인 내에서 소스코드 빌드에 사용되는 라이브러리</description>
    </item>
    
    <item>
      <title></title>
      <link>https://thekoguryo.github.io/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/link/</guid>
      <description>참조할만한 사이트 OCI Documentation Oracle OCI 공식 문서 사이트입니다. Oracle Learning 오라클에서 OU에서 OCI를 학습할 수 있는 사이트로 동영상과 실습교재를 제공합니다. 프로모션 기간 중에는 무료로 사용할 수 있습니다. Oracle LiveLabs 오라클에서 제공하는 OCI 실습 가이드를 제공하는 사이트입니다. </description>
    </item>
    
    <item>
      <title></title>
      <link>https://thekoguryo.github.io/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/test/</guid>
      <description>aa</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://thekoguryo.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
