<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on TheKoguryo&#39;s 기술 블로그</title>
    <link>https://thekoguryo.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on TheKoguryo&#39;s 기술 블로그</description>
    <generator>Hugo</generator>
    <language>ko</language>
    <lastBuildDate>Sun, 19 Nov 2023 00:00:02 +0000</lastBuildDate>
    <atom:link href="https://thekoguryo.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4.1.1.3 Spring Boot에서 OCI Cache with Redis &#43; MySQL 쓰기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/3.cache-with-redis-mysql-in-springboot/</link>
      <pubDate>Sun, 19 Nov 2023 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/3.cache-with-redis-mysql-in-springboot/</guid>
      <description>&lt;h3 id=&#34;4113-spring-boot에서-oci-cache-with-redis--mysql-쓰기&#34;&gt;4.1.1.3 Spring Boot에서 OCI Cache with Redis + MySQL 쓰기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;사전-준비-테스트용-mysql-서버-준비&#34;&gt;사전 준비: 테스트용 MySQL 서버 준비&lt;/h4&gt;&#xA;&lt;p&gt;OCI에서는 MySQL 데이터베이스 서비스를 제공하고 있습니다. 여기서는 간단한 테스트이므로, 간단히 컨테이너 이미지를 실행할 수 있는 OCI Container Instance를 통해 MySQL 서버를 만들도록 하겠습니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
