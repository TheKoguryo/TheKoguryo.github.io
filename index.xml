<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TheKoguryo&#39;s 기술 블로그</title>
    <link>https://thekoguryo.github.io/</link>
    <description>Recent content on TheKoguryo&#39;s 기술 블로그</description>
    <generator>Hugo</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 17 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thekoguryo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>9.1 Velero로 백업, 복구하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/migration/1.velero/</link>
      <pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/migration/1.velero/</guid>
      <description>&lt;h4 id=&#34;91-velero로-백업-복구하기&#34;&gt;9.1 Velero로 백업, 복구하기&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://velero.io/docs/v1.15/&#34;&gt;Velero&lt;/a&gt;는 쿠버네티스 자원과 영구볼륨을 백업하고 복구하는 도구입니다. 백업본은 Object Storage에 저장합니다. &lt;a href=&#34;https://velero.io/docs/v1.15/supported-providers&#34;&gt;Supported providers&lt;/a&gt; 에서 보듯 많은 서비스 제공자에 대해 지원하며, Oracle Cloud의 경우는 S3 호환 Object Storage 제공자로 &lt;a href=&#34;https://github.com/vmware-tanzu/velero-plugin-for-aws&#34;&gt;Velero plugin for AWS&lt;/a&gt;을 사용하여, OCI Object Storage로 백업할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>18.1 OCI Logging Analytics로 로그 관리시 비용 최적화</title>
      <link>https://thekoguryo.github.io/oci/chapter18/1/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter18/1/</guid>
      <description>&lt;h2 id=&#34;181-oci-logging-analytics로-로그-관리시-비용-최적화&#34;&gt;18.1 OCI Logging Analytics로 로그 관리시 비용 최적화&lt;/h2&gt;&#xA;&lt;h6 id=&#34;oci에서-발생하는-로그-알아보기&#34;&gt;OCI에서 발생하는 로그 알아보기&lt;/h6&gt;&#xA;&lt;p&gt;OCI Logging 서비스를 사용하여, 관리 및 검색할 수 있는 로그는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;감사 로그(Audit logs)&lt;/strong&gt; : OCI Audit 서비스에서 생성된 이벤트와 관련된 로그입니다. OCI 문서에 따르면, OCI Audit 서비스는 OCI 공개 API 엔드포인트에 대한 호출을 로그 이벤트로 기록합니다. 현재 모든 OCI 서비스는 Audit 로깅을 지원합니다. Object 스토리지로 예를 들면, Bucket 관련된 이벤트를 모두 Audit 로그로 기록하지만, Object에 대한 API 호출은 기록하지 않습니다. 각 OCI 서비스에 따라 로깅하는 영역의 약간은 차이는 있어 보입니다. OCI 콘솔, CLI, SDK, OCI 서비스를 포함하여, 사용자 클라이언트의 API 요청을 포함하여, Audit 로그 이벤트가 기록됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.11.1 Arm 기반으로 OKE 사용시 유의할 점</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/others/oke-cluster-on-arm/</link>
      <pubDate>Wed, 29 May 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/others/oke-cluster-on-arm/</guid>
      <description>&lt;h3 id=&#34;1111-arm-기반으로-oke-사용시-유의할-점&#34;&gt;1.11.1 Arm 기반으로 OKE 사용시 유의할 점&lt;/h3&gt;&#xA;&lt;h6 id=&#34;-fluent-bit-설치-이슈&#34;&gt;# fluent-bit 설치 이슈&lt;/h6&gt;&#xA;&lt;p&gt;OCI 콘솔에서 Quick Create 모드로 기본 설치하게 되면, 선택사항 없이 VCN-Native Pod Networking CNI로 설치되게 됩니다. 해당 CNI에서 이후 Service Mesh를 사용할 것을 가정하면, Worker Node Image를 Oracle Linux 7.x로 선택해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17.1 Kafka Connect, Debezium로 PostgreSQL CDC 구성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-postgresql-debezium/</link>
      <pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-postgresql-debezium/</guid>
      <description>&lt;h2 id=&#34;171-kafka-connect-debezium로-postgresql-cdc-구성하기&#34;&gt;17.1 Kafka Connect, Debezium로 PostgreSQL CDC 구성하기&lt;/h2&gt;&#xA;&lt;p&gt;Kafka에서 Debezium Connector를 통해 데이터 변경분 캡쳐(CDC)를 수행하고, JDBC Connector를 통해 대상 시스템에 동기화는 것을 구현하는 경우가 있습니다. 여기서는 Kafka를 대신하여 Kafka 호환 서비스인 OCI Streaming을 사용할 수 있는 지, 사용시 유의사항이 있는 지를 확인해 보고자 합니다. 그래서 여기서는 Kafka에 대한 자세한 설명보다는 OCI Streaming로 가능 여부 확인에 우선합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>16.1 Load Balancer의 인증서를 OCI Certificate로 관리하기</title>
      <link>https://thekoguryo.github.io/oci/chapter16/1/</link>
      <pubDate>Tue, 30 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter16/1/</guid>
      <description>&lt;h2 id=&#34;161-load-balancer의-인증서를-oci-certificate로-관리하기&#34;&gt;16.1 Load Balancer의 인증서를 OCI Certificate로 관리하기&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;OCI Certificate는 Load Balancer, API Gateway와의 연동을 지원합니다. Compute 인스턴스 앞에 그림과 같이 OCI Load Balancer를 두고, OCI Certificate 상의 인증서를 통해 관리할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.5.1 Ampere (Arm) Node Pool 추가하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/nodepool/1.arm-node-pool/</link>
      <pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/nodepool/1.arm-node-pool/</guid>
      <description>&lt;h4 id=&#34;1251-ampere-arm-node-pool-추가하기&#34;&gt;1.2.5.1 Ampere (Arm) Node Pool 추가하기&lt;/h4&gt;&#xA;&lt;p&gt;오라클은 2021년 5월부터 Arm 기반의 Ampere A1 Compute Shape을 가상 머신에서 사용할 수 있습니다. Ampere는 &lt;a href=&#34;https://thekoguryo.github.io/blog/arm-based-server-performance/&#34;&gt;ARM 기반 서버 성능 비교&lt;/a&gt;에서 보듯이 뛰어난 가성비를 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3.1 Metrics Server 설치</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/1.metric-server/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/1.metric-server/</guid>
      <description>&lt;h3 id=&#34;131-metrics-server-설치&#34;&gt;1.3.1 Metrics Server 설치&lt;/h3&gt;&#xA;&lt;p&gt;Kubernetes Metrics Server는 클러스터 전체의 리소스 사용량 데이터 수집기입니다. Kubernetes Metrics Server는 서버는 각 Worker Node에서 실행되는 kubelet에서 리소스 지표를 수집하고 Kubernetes 지표 API를 통해 Kubernetes API 서버에 노출합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.3.1 Block Volume 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/block-volume/1.block-volume/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/block-volume/1.block-volume/</guid>
      <description>&lt;h4 id=&#34;1231-block-volume-사용하기&#34;&gt;1.2.3.1 Block Volume 사용하기&lt;/h4&gt;&#xA;&lt;p&gt;컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이터를 저장하기 위해 별도의 Persistent Volume을 사용합니다. Block Volume을 Persistent Volume으로 사용되는 방법을 알아봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.1.1.1 OCI Cache with Redis 클러스터 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/1.cache-with-redis/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/1.cache-with-redis/</guid>
      <description>&lt;h3 id=&#34;4111-oci-cache-with-redis-클러스터-만들기&#34;&gt;4.1.1.1 OCI Cache with Redis 클러스터 만들기&lt;/h3&gt;&#xA;&lt;p&gt;OCI 콘솔에서 OCI Cache with Redis 서비스로 Redis 클러스터를 만들고, 클라이언트를 가정하여, redis-cli로 접속해 봅니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;redis-cluster-만들기&#34;&gt;Redis Cluster 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에 로그인합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.2.1 Oracle Autonomous Database Free Container Image</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/1.adb-free/</link>
      <pubDate>Thu, 19 Oct 2023 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/1.adb-free/</guid>
      <description>&lt;h3 id=&#34;421-oracle-autonomous-database-free-container-image&#34;&gt;4.2.1 Oracle Autonomous Database Free Container Image&lt;/h3&gt;&#xA;&lt;p&gt;지난 2023년 9월,  개발자를 위해 Autonomous Database를 OCI가 아닌, 개인 데스크탑/랩탑에서 실행할 수 있는 Autonomous Database Free Container Image를 출시하였습니다. 로컬 PC에 docker CLI 호환 도구를 통해 실행할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.1 GraalVM 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.use-graal-vm/</link>
      <pubDate>Tue, 10 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.use-graal-vm/</guid>
      <description>&lt;h2 id=&#34;81-graalvm-사용하기&#34;&gt;8.1 GraalVM 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;GraalVM은 고급 JIT(Just-In-Time) 최적화 컴파일러를 추가하여 자바 애플리케이션의 성능 향상을 제공하는 자바 런타임입니다. Just-In-Time 방식으로 자바 바이트코드를 실행시점에 머신코드로 변환하여 실행할때, 개선된 최적화 기법을 사용합니다. 여기에 추가하여 AOT(Ahead-Of-Time) 방식도 지원하여, JVM 없이 바로 실행할수 있도록, 바이트 코드가 아닌, 실행가능한 Native Image 생성 기능을 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.10.1 Worker Node 디스크 사이즈 늘리기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/1.resize-worker-node/</link>
      <pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/1.resize-worker-node/</guid>
      <description>&lt;h3 id=&#34;1101-worker-node-디스크-사이즈-늘리기&#34;&gt;1.10.1 Worker Node 디스크 사이즈 늘리기&lt;/h3&gt;&#xA;&lt;p&gt;용량이 큰 컨테이너 이미지들을 사용하거나, 이미지를의 합계 사이즈가 큰 경우, 실행을 위해 컨테이너 이미지를 Worker Node로 가져오다 오류가 날수 있습니다. 이를 방지하기 위해 Worker Node의 디스크 사이즈를 다음과정을 통해 늘립니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.1 게임서비스를 위한 Agones 테스트</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/other-k8s-tools/agones/</link>
      <pubDate>Fri, 14 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/other-k8s-tools/agones/</guid>
      <description>&lt;h2 id=&#34;51-게임서비스를-위한-agones-테스트&#34;&gt;5.1 게임서비스를 위한 Agones 테스트&lt;/h2&gt;&#xA;&lt;p&gt;게임 서버를 쿠버네티스에서 서비스하기 많이 사용되는 Agones가 OKE에서 잘 동작하는 확인하기 위한 테스트입니다. &lt;a href=&#34;https://agones.dev/site/docs/overview/&#34;&gt;Agones 공식문서&lt;/a&gt;를 참조하여 진행하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11.1 Domain Name과 매핑하기</title>
      <link>https://thekoguryo.github.io/oci/chapter11/1/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter11/1/</guid>
      <description>&lt;h2 id=&#34;111-domain-name과-매핑하기&#34;&gt;11.1 Domain Name과 매핑하기&lt;/h2&gt;&#xA;&lt;p&gt;이미 구입한 Domain Name이 있다는 전제하에 설정하는 과정입니다. 테스트를 위해 &lt;a href=&#34;https://www.godaddy.com/&#34;&gt;&lt;strong&gt;GoDaddy&lt;/strong&gt;&lt;/a&gt; 사이트에서 구매한 도메인 네임(thekoguryo.xyz)을 사용하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.1.1 OCI Native Ingress Controller 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/1.install-oci-ingress-controller/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/1.install-oci-ingress-controller/</guid>
      <description>&lt;h5 id=&#34;12211-oci-native-ingress-controller-설치하기&#34;&gt;1.2.2.1.1 OCI Native Ingress Controller 설치하기&lt;/h5&gt;&#xA;&lt;p&gt;OKE에서는 여러가지 오픈 소스 ingress controller를 그대로 사용할 수 있습니다. 그와 함께 Ingress Controller를 OCI 서비스로 제공하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.1 OKE Virtual Nodes 소개</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/1.oke-virtual-nodes/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/1.oke-virtual-nodes/</guid>
      <description>&lt;h2 id=&#34;21-oke-virtual-nodes-소개&#34;&gt;2.1 OKE Virtual Nodes 소개&lt;/h2&gt;&#xA;&lt;h6 id=&#34;oke-virtual-nodes&#34;&gt;OKE Virtual Nodes&lt;/h6&gt;&#xA;&lt;p&gt;쿠버네티스의 사용이 늘어나고 있습니다. 하지만, 관리 유저들은 다음 항목에 대한 관리상의 어려움이 많다고 합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Infrastructure right-sizing: 쿠버네티스는 대규모 애플리케이션을 관리하고, 스케일할 수 있도록 설계되어 있습니다. 스케일과 관련된 운영작업으로 CPU, 메모리 같은 인프라 자원에 적정량의 배분, 사이징하는 것에 대한 어려움이 발생합니다.&lt;/li&gt;&#xA;&lt;li&gt;Upgrades and maintenance: 쿠버네티스를 최신버전으로 유지하거나, 서포트 범위 내 버전을 유지하기 위해서도 주기적으로 업그레이드가 필요합니다. 또 그 업데이트 주기도 짧은 편입니다.&lt;/li&gt;&#xA;&lt;li&gt;Infrastructure security: 쿠버네티스 클러스터의 인프라가 노출되면, 해당 클러스터에 수행중인 모든 애플리케이션에 대해서도 위험이 발생합니다. 해당 인프라에 대한 보안이 강화되어야 하며, 접근은 통제되어야 하며, 지속적으로 보안 패치가 적용되어야 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이런 쿠버네티스 관리상의 어려움을 단순화하기 위해 OKE에서 Virtual Nodes을 출시하게 되었다고 합니다. OKE Virtual Nodes는 Serverless Kubernetes로써 유저가 Worker Nodes 인프라를 관리할 필요가 없습니다. Pod 레벨에서 탄력성을 제공하고, Pod 기준으로 비용이 발생합니다. 유저가 Worker Nodes를 스케일하거나, 업그레이드 하거나, 트러블 슈팅할 필요가 없습니다. 유저가 지속적인 보안 패치를 적용할 필요도 없으며, Virtual Nodes(Worker Nodes)에 접근 자체가 불가합니다. OKE 클러스터의 Control Plane, Data Plane을 OCI가 관리하고, 유저는 Kubernetes API를 통해 애플리케이션을 배포하고, 관리하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.1 OKE Self-Managed Nodes 소개</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-self-managed-nodes/1.oke-self-managed-nodes/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-self-managed-nodes/1.oke-self-managed-nodes/</guid>
      <description>&lt;h2 id=&#34;31-oke-self-managed-nodes-소개&#34;&gt;3.1 OKE Self-Managed Nodes 소개&lt;/h2&gt;&#xA;&lt;p&gt;Self-Managed 노드는 OKE가 Work Node 인스턴스를 생성하는 것이 아니라, 유저가 Compute 서비스를 사용하여 직접 생성한 컴퓨트 인스턴스를 Worker Node로 사용하는 방법입니다. BYON(Bring Your Own Nodes) 라고도 합니다. Self-Managed 노드는 OKE 노드 풀로 관리되지 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.9.1 OKE Enhanced Cluster 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/1.create-enhanced-cluster/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/1.create-enhanced-cluster/</guid>
      <description>&lt;h3 id=&#34;191-oke-enhanced-cluster-만들기&#34;&gt;1.9.1 OKE Enhanced Cluster 만들기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에 로그인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;좌측 상단 햄버거 메뉴에서 &lt;strong&gt;Developer Services&lt;/strong&gt; &amp;gt; &lt;strong&gt;Containers &amp;amp; Artifacts&lt;/strong&gt; &amp;gt; &lt;strong&gt;Kubernetes Clusters&lt;/strong&gt; (&lt;strong&gt;OKE&lt;/strong&gt;)로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;클러스터 생성을 위해 &lt;strong&gt;Create Cluster&lt;/strong&gt; 버튼을 클릭합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h6 id=&#34;quick-모드로-클러스터-만들때-조건&#34;&gt;Quick 모드로 클러스터 만들때 조건&lt;/h6&gt;&#xA;&lt;p&gt;OKE 클러스터 생성 옵션에서 &lt;strong&gt;Quick Create&lt;/strong&gt; 옵션을 선택합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Shell 문제해결</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/cloud-shell/</link>
      <pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/cloud-shell/</guid>
      <description>&lt;h2 id=&#34;cloud-shell-문제해결&#34;&gt;Cloud Shell 문제해결&lt;/h2&gt;&#xA;&lt;h6 id=&#34;가-포함된-텍스트-복사시-다음-줄에도-가-추가되거나-텍스트가-쉬프트-되는-현상&#34;&gt;#가 포함된 텍스트 복사시 다음 줄에도 #가 추가되거나, 텍스트가 쉬프트 되는 현상&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;현상: #가 포함된 텍스트 여러 줄을 복사해서 Cloud Shell상의 VI Editor로 복사하는 경우, # 다음 줄에 #가 추가되어 복사되거나, #가 추가 되면서 텍스트가 오른쪽으로 쉬프트 되는 현상 발생&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.3.1 OpenSearch 사용 환경 구성하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/1.configure-oci-opensearch/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/1.configure-oci-opensearch/</guid>
      <description>&lt;h5 id=&#34;15231-opensearch-사용-환경-구성하기&#34;&gt;1.5.2.3.1 OpenSearch 사용 환경 구성하기&lt;/h5&gt;&#xA;&lt;p&gt;OpenSearch와 OpenDashboards는 2021년에 ElasticSearch와 Kibana에서 포크되어 별도 오픈소스 프로젝트로 운영되고 있습니다. OCI OpenSearch는 OCI에서 제공하는 관리형 서비스입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.1 NGINX Ingress Controller 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/1.install-nginx-ingress-controller/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/1.install-nginx-ingress-controller/</guid>
      <description>&lt;h5 id=&#34;12221-nginx-ingress-controller-설치하기&#34;&gt;1.2.2.2.1 NGINX Ingress Controller 설치하기&lt;/h5&gt;&#xA;&lt;p&gt;OKE에서 Kubernetes에서 사용가능한 여러가지 오픈 소스 ingress controller를 사용할 수 있습니다.  본 문서에서는 그중에서 가장 많이 사용되며, OKE 문서에서 예제로 설명하고 있는 nginx-ingress-controller를 테스트 해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.6.1 NLB로 NGINX Ingress Controller 설치</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/nlb/1.install-nginx-ingress-controller/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/nlb/1.install-nginx-ingress-controller/</guid>
      <description>&lt;h5 id=&#34;122261-oci-network-load-balancer로-nginx-ingress-controller-설치하기&#34;&gt;1.2.2.2.6.1 OCI Network Load Balancer로 Nginx Ingress Controller 설치하기&lt;/h5&gt;&#xA;&lt;h6 id=&#34;nginx-ingress-controller-설치&#34;&gt;NGINX Ingress Controller 설치&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;kubectl 사용이 가능한  Cloud Shell 또는 작업환경에 접속합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;nginx ingress controller 설치할 파일 deploy.yaml을 다운로드 받습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.2.1 Logging Analytics로 모니터링 하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/logging-analytics/1.logging-analytics/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/logging-analytics/1.logging-analytics/</guid>
      <description>&lt;h5 id=&#34;15221-oci-kubernetes-monitoring-solution을-사용하여-logging-analytics로-모니터링-하기&#34;&gt;1.5.2.2.1 OCI Kubernetes Monitoring Solution을 사용하여 Logging Analytics로 모니터링 하기&lt;/h5&gt;&#xA;&lt;p&gt;OCI Logging Analytics, OCI Monitoring, OCI Management Agent 와 FluentD를 통해 Kubernetes를 모니터링할 수 있는 솔루션인 OCI Kubernetes Monitoring Solution을 오픈소스로 제공하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.1 Container Instances로 컨테이너 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/container-instances/1.use-container-instances/</link>
      <pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/container-instances/1.use-container-instances/</guid>
      <description>&lt;h2 id=&#34;61-container-instances로-컨테이너-배포하기&#34;&gt;6.1 Container Instances로 컨테이너 배포하기&lt;/h2&gt;&#xA;&lt;h6 id=&#34;oci-container-instances&#34;&gt;OCI Container Instances&lt;/h6&gt;&#xA;&lt;p&gt;컨테이너 애플리케이션을 사용하기 위해 Container Orchestration으로 일반적으로 쿠버네티스를 많이 사용합니다. 또는 가상머신에 Docker 엔진을 직접 설치하여, 컨테이너를 간단하게 구동시킬 수도 있습니다. 이때 쿠버네티스 또는 Docker 엔진 등을 사용자가 관리해 주어야 합니다. Container Instances는 Container Orchestration을 사용자가 관리하지 않고, 클라우드 서비스 제공자가 관리합니다. 사용자는 간단하게 컨테이너를 배포해서 사용할 수 있고, 컨테이너가 직접 사용하는 자원에 대한 비용만 드는 장점이 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.2.1 GraalVM 기반 컨테이너 이미지 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</guid>
      <description>&lt;h3 id=&#34;721-graalvm-기반-컨테이너-이미지-만들기&#34;&gt;7.2.1 GraalVM 기반 컨테이너 이미지 만들기&lt;/h3&gt;&#xA;&lt;p&gt;여기서는 향상된 just-in-time(JIT) 컴파일러를 통한 가장 간편한 방법으로 코드 변경없이 자바 애플케이션의 성능 개선하는 방벙으로 알아보겠습니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;graalvm--제공-컨테이너-이미지&#34;&gt;GraalVM  제공 컨테이너 이미지&lt;/h4&gt;&#xA;&lt;p&gt;GraalVM은 오픈소스로 제공하는 Community 버전과 상업용 Enterprise 버전을 제공하고 있습니다. Enterprise 버전은 더 높은 최적화 기능을 제공하고 있습니다. GraalVM은 Oracle Java SE 구독 모델에 포함되어 있으며, Oracle Cloud Infrastructure 내 자원에서는 별도 비용없이 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.2 GraalVM 사용하여 Spring Boot 3 애플리케이션 개발하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.develop-spring-boot-app/</link>
      <pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.develop-spring-boot-app/</guid>
      <description>&lt;h3 id=&#34;82-graalvm-사용하여-spring-boot-3-애플리케이션-개발하기&#34;&gt;8.2 GraalVM 사용하여 Spring Boot 3 애플리케이션 개발하기&lt;/h3&gt;&#xA;&lt;p&gt;Spring Boot 예제를 바탕으로 앱 개발, 컨테이너 이미지 빌드, OKE에 배포하는 과정을 확인해 봅니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;spring-boot-기반-마이크로-서비스-만들기&#34;&gt;Spring Boot 기반 마이크로 서비스 만들기&lt;/h6&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://start.spring.io&#34;&gt;Spring Initializr&lt;/a&gt;를 사용하여 기본 프로젝트 소스파일을 기반으로 개발을 하게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1.1 OKE, OKE Managed Nodes 소개</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/1.oke-managed-nodes/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/1.oke-managed-nodes/</guid>
      <description>&lt;h3 id=&#34;111-oke-oke-managed-nodes-소개&#34;&gt;1.1.1 OKE, OKE Managed Nodes 소개&lt;/h3&gt;&#xA;&lt;p&gt;OCI Kubernetes Engine는 OCI에서 제공하는 관리형 쿠버네티스 서비스 입니다. 줄여서 OKE라고 부며 CNCF 인증된 Kubernetes 버전을 사용하고 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;Quick Start 버전으로 클러스터를 생성하게 되면 OCI 자원들을 사용하여 아래와 같은 구조를 가지는 쿠버네티스 클러스터가 생성됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15.1 Resource Manager 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter15/1/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter15/1/</guid>
      <description>&lt;h2 id=&#34;151-resource-manager-사용하기&#34;&gt;15.1 Resource Manager 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;Resource Manager는 OCI 자원 Provisioning을 자동화하는 기능으로 Terraform Configuration을 등록해서 실행하는 서비스입니다. 클라이언트에 Terraform을 설치하는 것이 아닌, Resource Manager에서 Terraform Configuration 파일들을 등록해서 OCI 콘솔 또는 OCI CLI로 실행할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.2.1 Object Storage를 위한 IAM Policy 설정</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/2/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/2/1/</guid>
      <description>&lt;h4 id=&#34;14121-object-storage를-위한-iam-policy-설정&#34;&gt;14.1.2.1 Object Storage를 위한 IAM Policy 설정&lt;/h4&gt;&#xA;&lt;h5 id=&#34;object-storage를-위한-policy-설정&#34;&gt;Object Storage를 위한 Policy 설정&lt;/h5&gt;&#xA;&lt;p&gt;IAM Policy는 OCI 자원에 대한 접근 정책입니다. 하나의 정책은 일반적으로 사용자 그룹에게 특정 Compartment에 속한 특정 타입의 자원에 대한 권한을 허용하는 것을 정의하는 것으로 생각하면 하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.1 Terraform 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/1/</guid>
      <description>&lt;h3 id=&#34;1431-terraform-설치하기&#34;&gt;14.3.1 Terraform 설치하기&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;HashiCorp 다운로드 페이지&lt;/a&gt;에서 OS 맞는 설치파일을 다운받습니다.&#xA;압축을 풀면 terraform.exe 또는 terraform 파일 하나이므로 사용할 폴더에 복사하고 PATH에 등록하면 바로 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>13.1 Autoscaling을 위한 준비</title>
      <link>https://thekoguryo.github.io/oci/chapter13/1/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter13/1/</guid>
      <description>&lt;h2 id=&#34;131-autoscaling을-위한-준비&#34;&gt;13.1 Autoscaling을 위한 준비&lt;/h2&gt;&#xA;&lt;h4 id=&#34;step-1-autoscaling에-사용할-템플릿-compute-인스턴스-생성&#34;&gt;Step #1: Autoscaling에 사용할 템플릿 Compute 인스턴스 생성&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Autoscaling을 사용하려면 기준 이미지가 필요합니다. Oracle Linux에 Apache가 설치된 템플릿 인스턴스를 먼저 만들겠습니다. 설치 스크립트는 cloud-init을 사용하고, 추가 인스턴스임을 확인하기 쉽게 하기 위해 index.html에 생성된 호스트의 Private IP가 보이도록 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12.1 Compute 인스턴스 Monitoring 활성화</title>
      <link>https://thekoguryo.github.io/oci/chapter12/1/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter12/1/</guid>
      <description>&lt;h2 id=&#34;121-compute-인스턴스-monitoring-활성화&#34;&gt;12.1 Compute 인스턴스 Monitoring 활성화&lt;/h2&gt;&#xA;&lt;h4 id=&#34;monitoring-활성화&#34;&gt;Monitoring 활성화&lt;/h4&gt;&#xA;&lt;p&gt;아래는 OracleCloudAgent가 이미 설치된 최신 Oracle Linux 이미지를 사용하였습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;모니터링하려는 Compute 인스턴스의 상세 페이지로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>9.1 기본 제공하고 있는 OS Image</title>
      <link>https://thekoguryo.github.io/oci/chapter09/1/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter09/1/</guid>
      <description>&lt;h2 id=&#34;91-기본-제공하고-있는-os-image&#34;&gt;9.1 기본 제공하고 있는 OS Image&lt;/h2&gt;&#xA;&lt;p&gt;Compute Instance 생성을 위한 OS Image 및 애플리케이션 Image를 제공하며, 사용자가 만든 Custom Image, Boot Volumes을 통해 Instance를 생성할 수 도 있습니다.&#xA;그림처럼 Compute Instance 생성시 오른쪽 이미지 선택 메뉴에서 고를 수 있는 현재 기본 제공하고 있는 OS Image 목록입니다.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230508190101613.png&#34; alt=&#39;image-20230508190101613&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230508190101613.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.1 Bucket 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/1/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/1/</guid>
      <description>&lt;h2 id=&#34;71-bucket-생성하기&#34;&gt;7.1 Bucket 생성하기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Object Storage &amp;amp; Archive Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Buckets&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Bucket을 생성할 Compartment를 선택합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create Bucket&lt;/strong&gt;을 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.1 Reserved Public IP 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter04/1/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter04/1/</guid>
      <description>&lt;h2 id=&#34;41-reserved-public-ip-만들기&#34;&gt;4.1 Reserved Public IP 만들기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;IP Management&lt;/strong&gt; &amp;gt; &lt;strong&gt;Reserved Public IPs&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Reserve Public IP Address&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230504173257241.png&#34; alt=&#39;image-20230504173257241&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230504173257241.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;생성 정보 입력&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;: 생성할 Reserved Public IP의 이름 입력&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.1 작업 Compartment 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/1/</guid>
      <description>&lt;h2 id=&#34;31-작업-compartment-만들기&#34;&gt;3.1 작업 Compartment 만들기&lt;/h2&gt;&#xA;&lt;p&gt;Compartment는 자원들을 쉽게 관리할 수 있도록 하는 논리적인 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초로 Root Compartment 하나가 만들어져 있으며, 관리자가 Root Compartment 하위로 새로운 Compartment를 추가할 수 있습니다. 모든 OCI 자원들은 특정 Compartment에 속하게 되며 Compartment 단위로 사용자들의 접근 정책을 관리할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.5.1 Linux, Mac 에서 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/5/1/</guid>
      <description>&lt;h3 id=&#34;351-linux-mac-에서-접속하기&#34;&gt;3.5.1 Linux, Mac 에서 접속하기&lt;/h3&gt;&#xA;&lt;p&gt;ssh-keygen로 생성한 PEM(Privacy Enhanced Mail) 파일 형식의 키는 Linux, Mac에서는 바로 사용 가능합니다. PuTTY Key Generator로 생성한 .ppk은 변환기를 통해 PEM 형식으로 변환하여 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.1 Block Volume 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/1/</guid>
      <description>&lt;h3 id=&#34;361-block-volume-생성하기&#34;&gt;3.6.1 Block Volume 생성하기&lt;/h3&gt;&#xA;&lt;p&gt;Block Volume은 OCI Compute Instance와 함께 사용하는 네트워크 스토리지입니다. Block Volume을 생성하여 인스턴스에 장착하고 마운트하면 컴퓨터에 물리적인 하드 드라이브를 연결해서 사용하는 것처럼 사용할 수 있습니다. 한 번에 한 Instance에 장착될 수 있으면, 장착해제 후 다른 Instance에 장착할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.7.1 Block Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/7/1/</guid>
      <description>&lt;h3 id=&#34;371-block-volume-full-백업하기&#34;&gt;3.7.1 Block Volume Full 백업하기&lt;/h3&gt;&#xA;&lt;p&gt;이전 가이드에서 Block Volume을 삭제한 경우, 다시 Block Volume을 만듭니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;기본-block-volume-백업하기&#34;&gt;기본 Block Volume 백업하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Block Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Block Volumes&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.8.1 Boot Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/1/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/8/1/</guid>
      <description>&lt;h3 id=&#34;381-boot-volume-백업하기&#34;&gt;3.8.1 Boot Volume 백업하기&lt;/h3&gt;&#xA;&lt;p&gt;Boot Volume 백업 기능은 Block Volume 백업 기능과 거의 같습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. Boot Volume 상세 페이지로 이동합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;방법 #1&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/li&gt;&#xA;&lt;li&gt;대상 인스턴스 VM을 클릭합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt; &amp;gt; &lt;strong&gt;Boot volume&lt;/strong&gt;으로 이동하여 Attached 된 Boot Volume을 클릭하여 상세 페이지로 이동합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;방법 #2&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Block Volume&lt;/strong&gt; 항목으로 이동합니다.&lt;/li&gt;&#xA;&lt;li&gt;왼쪽 메뉴에서 Boot Volumes로 이동하여 원하는 Boot Volume을 클릭하여 상세 페이지로 이동합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Boot Volume 상세 페이지에서 왼쪽 아래의 &lt;strong&gt;Resources&lt;/strong&gt; &amp;gt; &lt;strong&gt;Boot Volume Backups&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1 Regions, Availability Domains</title>
      <link>https://thekoguryo.github.io/oci/chapter01/1/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/1/</guid>
      <description>&lt;h2 id=&#34;11-regions-availability-domains&#34;&gt;1.1 Regions, Availability Domains&lt;/h2&gt;&#xA;&lt;p&gt;OCI(Oracle Cloud Infrastructure)는 Region과 Availability Domain 안에서 호스팅 됩니다. Region은 지리적인 영역이며 Availability Domain은 한 Region 내에 위치한 데이터 센터입니다. 단일 Region은 하나 이상의 Availability Domain으로 구성됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.1 Oracle Cloud Free Tier 계정 생성</title>
      <link>https://thekoguryo.github.io/oci/chapter02/1/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter02/1/</guid>
      <description>&lt;h2 id=&#34;21-oracle-cloud-free-tier-계정-생성&#34;&gt;2.1 Oracle Cloud Free Tier 계정 생성&lt;/h2&gt;&#xA;&lt;p&gt;Oracle Cloud Infrastructure을 무료로 사용해 보기 위한 30일 동안 US 300$ 한도 내에서 사용할 수 있는 Trial을 제공하고 있습니다. 또한 Always Free 항목으로 제공하는 자원에 대해서 30일 이후도 항시 무료로 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.8.1.1 Service Mesh 없는 마이크로서비스 앱 배포</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/service-mesh/istio/1.sampleapp-without-istio/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/service-mesh/istio/1.sampleapp-without-istio/</guid>
      <description>&lt;h4 id=&#34;1811-service-mesh-없는-마이크로서비스-앱-배포&#34;&gt;1.8.1.1 Service Mesh 없는 마이크로서비스 앱 배포&lt;/h4&gt;&#xA;&lt;p&gt;본 내용은 아래 Istio 문서 상에 있는 내용을 재 확인하는 내용으로 마이크로 서비스 앱을 사용하는 데 있어서 어떤 문제가 발생할 수 있는지, 왜 Istio 같은 Service Mesh 필요한지에 대해 알아보는 내용입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.4.1 EFK(Elasticsearch, Fluentd, kibana)</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/open-source/elasticsearch/1.install-efk/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/open-source/elasticsearch/1.install-efk/</guid>
      <description>&lt;h5 id=&#34;15241-efkelasticsearch-fluentd-kibana&#34;&gt;1.5.2.4.1 EFK(Elasticsearch, Fluentd, Kibana)&lt;/h5&gt;&#xA;&lt;p&gt;오픈 소스로 쿠버네티스 로그 모니터링을 하는 데 가장 많이 사용되는 구성으로 다음 세가지 구성을 확인해 봅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt;lasticsearch: 수집저장된 로그를 검색 및 분석하는 역할 수행&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;F&lt;/strong&gt;luentd 또는 &lt;strong&gt;F&lt;/strong&gt;luent Bit: 쿠버네티스 클러스터에서 로그를 수집하는 역할을 수행&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;K&lt;/strong&gt;ibana: 로그를 쿼리하고, 시각화 해주는 역할 수행&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;여기서는 Fluent Bit를 사용하는 예시입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.1.1 OCI Logging을 사용한 Control Plane 로그 모니터링</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/control-plane-logs/1.oci-logging/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/control-plane-logs/1.oci-logging/</guid>
      <description>&lt;h4 id=&#34;1511-oci-logging을-사용한-control-plane-로그-모니터링&#34;&gt;1.5.1.1 OCI Logging을 사용한 Control Plane 로그 모니터링&lt;/h4&gt;&#xA;&lt;p&gt;OKE 클러스터를 생성후, 모니터링 및 문제해결을 위해 쿠버네티스 Control Plane 상의 프로세스에 대한 로그 모니터링이 필요할 수 있습니다. 컨트롤 플레인상의 프로세스에 대한 로그는 OKE 서비스 로그로 간주되어 OCI 서비스 로그를 다루는 방법과 동일하게 설정하여 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.1 OCI Logging을 사용한 애플리케이션 로그 모니터링</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/1.oci-logging/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/1.oci-logging/</guid>
      <description>&lt;h4 id=&#34;1521-oci-logging을-사용한-애플리케이션-로그-모니터링&#34;&gt;1.5.2.1 OCI Logging을 사용한 애플리케이션 로그 모니터링&lt;/h4&gt;&#xA;&lt;p&gt;OKE 상에 배포되어 있는 애플리케이션 로그 모니터링을 OCI Logging 서비스를 통해 모니터링할 수 있습니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;oci-logging-서비스-사용-권한-설정&#34;&gt;OCI Logging 서비스 사용 권한 설정&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;Worker Node에 대한 Dynamic Group 만들기&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.1.1 OCI Load Balancer로 서비스하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/1.default-load-balancer/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/1.default-load-balancer/</guid>
      <description>&lt;h4 id=&#34;1211-oci-load-balancer로-서비스하기&#34;&gt;1.2.1.1 OCI Load Balancer로 서비스하기&lt;/h4&gt;&#xA;&lt;h6 id=&#34;앱-배포해보기&#34;&gt;앱 배포해보기&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;가장 흔한 형태인 Public Container Registry인 Docker Hub에서 이미지를 가져와서 OKE 클러스터에 배포를 해봅니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment nginx-docker-hub --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nginx:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;배포 결과를 확인해보면 정상적으로 배포된 것을 알 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4.1.1 OCIR 이미지 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/1.deploy-ocir-image/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/1.deploy-ocir-image/</guid>
      <description>&lt;h4 id=&#34;1411-ocir-이미지-사용하기&#34;&gt;1.4.1.1 OCIR 이미지 사용하기&lt;/h4&gt;&#xA;&lt;p&gt;Oracle Cloud Infrastructure Registry(OCIR)는 오라클이 제공하는 관리형 컨테이너 레지스트리로 Docker V2 API를 지원하며, Open Container Initiate 호환 컨테이너 레지스트리입니다.  docker cli를 통해 이미지를 Push, Pull 해서 사용할 수 있으며, Kubernetes 클러스터에서도 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1.3.1 Cloud Shell로 클러스터 연결하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/3.access-cluster/1.cloudshell-access/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/3.access-cluster/1.cloudshell-access/</guid>
      <description>&lt;h4 id=&#34;1131-cloud-shell로-oke-클러스터-연결하기&#34;&gt;1.1.3.1 Cloud Shell로 OKE 클러스터 연결하기&lt;/h4&gt;&#xA;&lt;h6 id=&#34;cloud-shell&#34;&gt;Cloud Shell&lt;/h6&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/API/Concepts/cloudshellintro.htm&#34;&gt;Cloud Shell&lt;/a&gt;은 공식 문서에서 설명처럼 Oracle Cloud 콘솔에서 제공하는 웹 브라우저 기반 리눅스 터미널입니다. 작은 가상머신으로 구동된다고 이해하시면 되며, Oracle Cloud 콘솔에 접속한 유저에 대해 사전 인증된 OCI CLI를 제공하며, 추가적인 cli 및 설정들을 기본 구성하여 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1.3.2 로컬 환경에서 클러스터 연결하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/3.access-cluster/2.local-access/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/3.access-cluster/2.local-access/</guid>
      <description>&lt;h4 id=&#34;1132-로컬-환경에서-클러스터-연결하기&#34;&gt;1.1.3.2 로컬 환경에서 클러스터 연결하기&lt;/h4&gt;&#xA;&lt;p&gt;OKE 클러스터 접속을 위해서는 #1. OCI CLI 설치 및 인증 설정, #2. kubectl 설치 및 kubeconfig 파일 생성의 작업이 필요합니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;oci-cli-설치-및-환경-구성&#34;&gt;OCI CLI 설치 및 환경 구성&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;OCI CLI 설치&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.1 File Storage 구성 예시</title>
      <link>https://thekoguryo.github.io/oci/chapter08/1/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter08/1/</guid>
      <description>&lt;h2 id=&#34;81-file-storage-구성-예시&#34;&gt;8.1 File Storage 구성 예시&lt;/h2&gt;&#xA;&lt;p&gt;서버간 공유 파일 시스템으로 File Storage를 통해 여러 개의 클라이언트 서버에서 파일을 공유할 수 있습니다. 필요로 하는 보안규칙을 이해하기 위해 아래 그림과 같이 기본 구성된 VCN의 Subnet과 별도의 Subnet 상에 File Storage를 구성하도록 해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.2.1 OCI Request Signature Version 1</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/1/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/2/1/</guid>
      <description>&lt;h3 id=&#34;1421-oci-request-signature-version-1&#34;&gt;14.2.1 OCI Request Signature Version 1&lt;/h3&gt;&#xA;&lt;p&gt;앞서 설명한 것처럼 OCI REST API를 호출하기 위해서는 요청 서명을 추가해야 합니다. &lt;a href=&#34;https://tools.ietf.org/html/draft-cavage-http-signatures-08&#34;&gt;draft-cavage-http-signatures-08&lt;/a&gt; 스펙에 기초하며 개략적인 절차는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;HTTPS (SSL protocol TLS 1.2) 요청 메시지를 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;요청 메시지에 따른 서명대상 문자열을 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;개인키와 RSA-SHA256을 사용해 서명대상 문자열을 서명(암호화)합니다.&lt;/li&gt;&#xA;&lt;li&gt;요청 메시지 Authorization 헤더에 서명된 문자열 및 필요한 추가 정보를 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;OCI REST API 호출&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;자세한 절차는 공식 문서와 다음 블로그에서 잘 설명하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.1 Load Balancer 구성 예시</title>
      <link>https://thekoguryo.github.io/oci/chapter10/1/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/1/</guid>
      <description>&lt;h2 id=&#34;101-load-balancer-구성-예시&#34;&gt;10.1 Load Balancer 구성 예시&lt;/h2&gt;&#xA;&lt;p&gt;인스턴스의 가용성을 보장하기 위해 OCI Load Balancer를 통해 여러 개의 대상 서버로 부하를 분산할 수 있습니다. 대상 서버도 가용성 보장을 위해 서로 다른 AD 또는 동일 AD 상의 서로 다른 Fault Domain에 일반적으로 구성해야 합니다. 그리고 OCI Load Balancer는 Fail Over를 위해 자체적으로 이중화되어 구성됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.1 Compartment</title>
      <link>https://thekoguryo.github.io/oci/chapter06/1/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter06/1/</guid>
      <description>&lt;h2 id=&#34;61-compartment&#34;&gt;6.1 Compartment&lt;/h2&gt;&#xA;&lt;p&gt;Compartment는 자원들을 쉽게 관리할 수 있도록 하는 논리적인 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초로 Root Compartment 하나가 만들어져 있으며, 관리자가 Root Compartment 하위로 새로운 Compartment를 추가할 수 있습니다. 모든 OCI 자원들은 특정 Compartment에 속하게 되며 Compartment 단위로 사용자들의 접근 정책을 관리할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.1 Linux 인스턴스에 Apache HTTP Server 설치</title>
      <link>https://thekoguryo.github.io/oci/chapter05/1/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter05/1/</guid>
      <description>&lt;h2 id=&#34;51-linux-인스턴스에-apache-http-server-설치&#34;&gt;5.1 Linux 인스턴스에 Apache HTTP Server 설치&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;생성한 Instance에 SSH 명령을 통해 접속합니다. 아래 명령은 Oracle Enterprise Linux 기준입니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh –i &amp;lt;private_key&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;public-ip-address&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Apache HTTP Server 설치&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum -y install httpd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OS 방화벽에서 Apache HTTP용 포트, 80 포트 개방&lt;/p&gt;</description>
    </item>
    <item>
      <title>9.2.1 Bitnami Wordpress 이미지로 인스턴스 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter09/2/1/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter09/2/1/</guid>
      <description>&lt;p&gt;Cloud Market 상의 Bitnami 이미지 사용방법을 알고자 그중에서 많이 사용하는 WordPress 이미지로 Compute Instance를 만들어 보도로 하겠습니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;참고-사이트&#34;&gt;참고 사이트&lt;/h3&gt;&#xA;&lt;p&gt;&amp;ldquo;Get Started with Bitnami Applications on Oracle Cloud Infrastructure &amp;ldquo;, Bitnami Documentation(웹), 2019년  1월 12일, &lt;a href=&#34;https://docs.bitnami.com/oci/get-started-oci/&#34;&gt;https://docs.bitnami.com/oci/get-started-oci/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.1.1 Windows에서 OCI CLI 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/1/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/1/</guid>
      <description>&lt;h4 id=&#34;14111-windows에서-oci-cli-설치하기&#34;&gt;14.1.1.1 Windows에서 OCI CLI 설치하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;관리자 모드로 PowerShell 실행&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PowerShell의 remote execution policy 구성을 위해 다음 명령 실행&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Set-ExecutionPolicy RemoteSigned&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;정책 변경을 위해 &lt;strong&gt;Y&lt;/strong&gt; 응답&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;설치 스크립트 실행을 위해 다음 실행&lt;/p&gt;</description>
    </item>
    <item>
      <title>비용 예측기</title>
      <link>https://thekoguryo.github.io/oci/chapter-appendix/1/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter-appendix/1/</guid>
      <description>&lt;p&gt;Oracle Cloud에서는 웹 브라우저에서 비용을 미리 산정해 볼수 있는 비용 예측기 사이트를 제공합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.oracle.com/en_US/cost-estimator&#34;&gt;https://cloud.oracle.com/en_US/cost-estimator&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;    &#xA;    &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/TBLaWYcYeHg?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&#xA;      &gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;비용-예측기-사용법&#34;&gt;비용 예측기 사용법&lt;/h3&gt;&#xA;&lt;p&gt;Oracle Cloud에서 제공하는 IaaS, PaaS 서비스들에 대한 요금을 계산할 수 있습니다. OCI-Compute, VM 인스턴스를 예로 들면 Infrastructure &amp;gt; Oracle Cloud Infrastructure - Compute, VM 를 선택하면, Compute를 사용하기 위한 최소 구성으로 기본 설정됩니다. 기본 구성은 한달 24시간 사용시 1OCPU 사용기준으로, 추가적으로 필요한 자원, 즉, Load Balancer, Storage 까지 같이 기본적으로 구성되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>비용 지급 방식</title>
      <link>https://thekoguryo.github.io/oci/chapter-appendix/2/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter-appendix/2/</guid>
      <description>&lt;p&gt;각 서비스의 가격을 보면 그림과 같이 크게 두 가지, Pay as You Go와 Monthly Flex 방식이 있는 것을 볼 수 있습니다. (캡쳐당시 가격으로 가격은 변경될 수 있습니다.)&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;&#xA;&#xA;&lt;img class=&#34;img-fluid2&#34; src=&#34;../images/price_example_1.png&#34; alt=&#39;그림&#39; /&gt;&#xA;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;비용-지급-방식&#34;&gt;비용 지급 방식&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;지급 정책&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;비용 지급 방식&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Pay As You Go&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;사용량 기준&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;실제 사용량에 따라 청구되며 선불 지급이 필요하지 않습니다&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Monthly Flex&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;약정 기준&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;월 고정 약정을 통한 계약이며, 최소 월간 약정 비용이 있으며 최소 계약 기간이 1년입니다. &lt;br&gt;약정된 금액은 사용되지 않으면 소멸되며 이월되지 않습니다. &lt;br&gt;약정 금액 및 기간에 따라 추가 할인이 적용될 수도 있습니다. &lt;br&gt;할인하지 않더라도 기본적으로 Pay As You Go보다 저렴합니다. &lt;br&gt;약정 이상의 초과 사용한 사용량에 대해서는 할인율이 적용된 단가를 기반으로 계산됩니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>9.2 Amazon EKS에서 OKE로 마이그레이션하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/migration/2.eks-to-oke-os/</link>
      <pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/migration/2.eks-to-oke-os/</guid>
      <description>&lt;h4 id=&#34;92-amazon-eks에서-oke로-마이그레이션하기-oci-object-storage-사용&#34;&gt;9.2 Amazon EKS에서 OKE로 마이그레이션하기 (OCI Object Storage 사용)&lt;/h4&gt;&#xA;&lt;p&gt;이번에는 Amazon EKS에서 OKE로 마이그레이션하는 과정입니다. EKS 상에서 사용하고 있는 애플리케이션이 있다는 가정하에 마이그레이션과정을 테스트 해보기 위해 &lt;a href=&#34;https://github.com/aws-containers/retail-store-sample-app&#34;&gt;retail-store-sample-app&lt;/a&gt; 예제를 먼저 EKS에 배포 설정하고, Velero를 통해 OKE로 마이그레이션 해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>18.2  Object Storage Archive 사용하여 로그 관리 비용 줄이기</title>
      <link>https://thekoguryo.github.io/oci/chapter18/2/</link>
      <pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter18/2/</guid>
      <description>&lt;h2 id=&#34;182--object-storage-archive-사용하여-비용-줄이기&#34;&gt;18.2  Object Storage Archive 사용하여 비용 줄이기&lt;/h2&gt;&#xA;&lt;p&gt;앞서 Logging Analytics 서비스에서 제공하는 아카이브 기능을 사용하여, 비용을 줄이는 방법을 설명하였습니다. 해당 기능을 사용하지 않고, 비용을 줄이기 위해 Object Storage의 아카이브 기능을 사용하는 방법에 대해 알아봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17.2 Kafka Connect, Debezium로 MySQL CDC 구성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-mysql-debezium/</link>
      <pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-mysql-debezium/</guid>
      <description>&lt;h2 id=&#34;172-kafka-connect-debezium로-mysql-cdc-구성하기&#34;&gt;17.2 Kafka Connect, Debezium로 MySQL CDC 구성하기&lt;/h2&gt;&#xA;&lt;p&gt;Kafka에서 Debezium Connector를 통해 데이터 변경분 캡쳐(CDC)를 수행하고, JDBC Connector를 통해 대상 시스템에 동기화는 것을 구현하는 경우가 있습니다. 여기서는 Kafka를 대신하여 Kafka 호환 서비스인 OCI Streaming을 사용할 수 있는 지, 사용시 유의사항이 있는 지를 확인해 보고자 합니다. 그래서 여기서는 Kafka에 대한 자세한 설명보다는 OCI Streaming로 가능 여부 확인에 우선합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.5.2 Preemptible Capacity Node Pool 추가하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/nodepool/2.preemptible-capacity/</link>
      <pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/nodepool/2.preemptible-capacity/</guid>
      <description>&lt;h4 id=&#34;1252-preemptible-capacity-node-pool-추가하기&#34;&gt;1.2.5.2 Preemptible Capacity Node Pool 추가하기&lt;/h4&gt;&#xA;&lt;h5 id=&#34;preemptible-node-pool-만들기&#34;&gt;Preemptible Node Pool 만들기&lt;/h5&gt;&#xA;&lt;p&gt;&lt;strong&gt;Node Pool 만들기&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에 로그인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;대상 OKE 클러스터로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;클러스터 상세정보에서 Resources &amp;gt; Node Pools을 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3.2 Horizontal Pod Autoscaler</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/2.hpa/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/2.hpa/</guid>
      <description>&lt;h3 id=&#34;132-horizontal-pod-autoscaler&#34;&gt;1.3.2 Horizontal Pod Autoscaler&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CPU 또는 메모리 기반의 Horizontal Pod Autoscaler를 사용하기 위해서는 먼저 Metrics Server의 설치가 필요합니다. Metrics Server가 설치가 되어 있는지 확인합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.1.2 OCI Load Balancer 상세 설정하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/2.load-balancer-annotation/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/2.load-balancer-annotation/</guid>
      <description>&lt;h4 id=&#34;1212-oci-load-balancer-상세-설정하기&#34;&gt;1.2.1.2 OCI Load Balancer 상세 설정하기&lt;/h4&gt;&#xA;&lt;p&gt;OCI Load Balancer는 OCI에서 제공하고 있는 L7 로드 밸런서입니다. HTTP/HTTPS, HTTP/2, TCP의 프로토콜을 지원합니다. HTTP 기반 서비스 사용시 OCI Certificate을 통해 인증서 서비스를 연동하거나, OCI WAF, WAA 등과 연동을 할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.1.3 OCI Network Load Balancer 상세 설정하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/3.network-load-balancer-annotation/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/load-balancer/3.network-load-balancer-annotation/</guid>
      <description>&lt;h4 id=&#34;1213-oci-network-load-balancer-상세-설정하기&#34;&gt;1.2.1.3 OCI Network Load Balancer 상세 설정하기&lt;/h4&gt;&#xA;&lt;p&gt;OCI Network Load Balancer는 OCI에서 제공하고 있는 L4 로드 밸런서입니다. TCP, UDP의 프로토콜을 지원합니다. 무료 서비스입니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;기본-생성-load-balancer&#34;&gt;기본 생성 Load Balancer&lt;/h6&gt;&#xA;&lt;p&gt;추가 설정없이 Service Type만 Load Balancer로 지정하는 경우, 이전에 주로 사용하던 Fixed Shape 형태의 로드 밸런서로 100Mbps 사이즈로 생성되며, 기본적으로 Public Subnet을 전제로 만들어 지게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.1.1.2 Spring Boot에서 OCI Cache with Redis 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/2.cache-with-redis-in-springboot/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/2.cache-with-redis-in-springboot/</guid>
      <description>&lt;h3 id=&#34;4112-spring-boot에서-oci-cache-with-redis-사용하기&#34;&gt;4.1.1.2 Spring Boot에서 OCI Cache with Redis 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;Spring Boot에서는 캐쉬를 설정할 수 있고, 캐쉬 서버로 Redis를 많이 사용합니다. OCI Cache with Redis로 만든 Redis 클러스터도 Spring Boot, Redis 코드에서 잘 연결되는 지 확인해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.2.2 Oracle Database Operator for Kubernetes</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/2.oracle-database-operator/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/2.oracle-database-operator/</guid>
      <description>&lt;h3 id=&#34;422-oracle-database-operator-for-kubernetes-oraoperator&#34;&gt;4.2.2 Oracle Database Operator for Kubernetes (OraOperator)&lt;/h3&gt;&#xA;&lt;p&gt;지난 2023년 7월, Kubernetes Operator 방식을 지원하는 Oracle Database Operator for Kubernete가 Production 릴리즈로 v1.0.0이 출시되었습니다. 줄여서 OraOperator라 부릅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.10.2 cloud-init으로 kubelet 옵션 변경하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/2.kubelet-options/</link>
      <pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/2.kubelet-options/</guid>
      <description>&lt;h3 id=&#34;1102-cloud-init으로-kubelet-옵션-변경하기&#34;&gt;1.10.2 cloud-init으로 kubelet 옵션 변경하기&lt;/h3&gt;&#xA;&lt;p&gt;Worker Node 생성시 커스텀 cloud-init 스크립트를 실행할 수 있습니다. OKE에서 수행해야 하는 디폴트 스크립트에 추가하여, Worker Node 생성시 수행하고 싶은 스크립트을 입력하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.1.2 PATH 기반 라우팅</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/2.ingress-path/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/2.ingress-path/</guid>
      <description>&lt;h5 id=&#34;12212-oci-native-ingress-controller에서-path-기반-라우팅&#34;&gt;1.2.2.1.2 OCI Native Ingress Controller에서 PATH 기반 라우팅&lt;/h5&gt;&#xA;&lt;h6 id=&#34;path-기반-기본-라우팅-테스트&#34;&gt;PATH 기반 기본 라우팅 테스트&lt;/h6&gt;&#xA;&lt;p&gt;가장 기본적인 라우팅으로 URL PATH에 따라 라우팅 서비스를 달리하는 경우입니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;테스트를 위한 샘플 앱을 배포합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.2 OKE 클러스터 만들기 - Virtual Nodes</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/2.create-oke-cluster-virtual-nodes/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/2.create-oke-cluster-virtual-nodes/</guid>
      <description>&lt;h2 id=&#34;22-oke-클러스터-만들기---virtual-nodes&#34;&gt;2.2 OKE 클러스터 만들기 - Virtual Nodes&lt;/h2&gt;&#xA;&lt;h6 id=&#34;virtual-nodes를-위한-oci-iam-policy-만들기&#34;&gt;Virtual Nodes를 위한 OCI IAM Policy 만들기&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OKE Serverless 서비스가 Virtual Nodes 생성할 있도록 권한을 줍니다. 사용중인 테넌시내에서 Virtual Nodes을 사용하겠다고 알려주는 것이기 때문에, 아래 내용을 변경없이 그대로 복사해서 Policy를 만들면 됩니다. 각자 테넌시 환경에 맞게 변경하는 내용이 아닙니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.2 OKE 클러스터 만들기 - Self-Managed Nodes</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-self-managed-nodes/2.create-oke-cluster-self-managed-nodes/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-self-managed-nodes/2.create-oke-cluster-self-managed-nodes/</guid>
      <description>&lt;h2 id=&#34;32-oke-클러스터-만들기---self-managed-nodes&#34;&gt;3.2 OKE 클러스터 만들기 - Self-Managed Nodes&lt;/h2&gt;&#xA;&lt;h6 id=&#34;사전-요구-사항-확인&#34;&gt;사전 요구 사항 확인&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cluster 요구사항&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Control Plane Nodes 버전: &lt;strong&gt;1.25 이상&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enhanced Cluster&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flannel&lt;/strong&gt; CNI 사용 할 것 (VCN-Native Pod Networking CNI는 지원하지 않음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Image 요구사항&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.9.2 Workload Identity 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/2.workload-identity/</link>
      <pubDate>Fri, 19 May 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/2.workload-identity/</guid>
      <description>&lt;h3 id=&#34;192-workload-identity-사용하기&#34;&gt;1.9.2 Workload Identity 사용하기&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Workload Identity&lt;/strong&gt;: 애플리케이션 컨테이너 Pod에서 OCI 자원에 대해 API Call을 하는 경우, OCI Policy로 권한 설정이 필요합니다. 기본적으로는 애플리케이션내에서 User 인증을 사용하는 방법 또는 Worker Nodes 그룹에 대해 권한 설정하는 방법이 있습니다. 여기에서 추가해 Workload Identity는 Pod 단위로 권한 설정을 지원합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.2 CLI로 Container Instance 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/container-instances/2.create-container-instances-by-cli/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/container-instances/2.create-container-instances-by-cli/</guid>
      <description>&lt;h2 id=&#34;62-cli로-container-instance-만들기&#34;&gt;6.2 CLI로 Container Instance 만들기&lt;/h2&gt;&#xA;&lt;p&gt;OCI CLI, SDK, REST API 등을 통해 OCI 자원을 관리할 수 있습니다. OCI CLI로 Container Instance를 생성하는 방법을 확인해 봅니다. 편의상 CLI 서브 파라미터 보다는 JSON 메시지 하나를 만들어 사용하였습니다. 해당 JSON 메시지를 REST API를 통해 요청시도 사용 가능합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11.2 GoDadday의 서브 도메인을 OCI DNS 서비스에 delegation 하기</title>
      <link>https://thekoguryo.github.io/oci/chapter11/2/</link>
      <pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter11/2/</guid>
      <description>&lt;h2 id=&#34;112-godaddy의-서브-도메인-관리를-oci-dns-서비스에-delegation-하기&#34;&gt;11.2 GoDaddy의 서브 도메인 관리를 OCI DNS 서비스에 delegation 하기&lt;/h2&gt;&#xA;&lt;p&gt;이미 사용하는 Domain Name과 DNS 서버가 있는 경우에, 기존 관리하는 방식을 사용하면서, OCI를 통해서 서비스하는 자원들에 대해 별도로 관리하고자 하는 경우가 있습니다. 서브 도메인을 분리하여, 분리된 서브 도메인에 대한 DNS 관리는 OCI DNS 서비스에 위임하는 경우에 대해서 알아보고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.3.2 FluentD로 OKE 로그 전송하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/2.fluentd-to-oci-opensearch/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/2.fluentd-to-oci-opensearch/</guid>
      <description>&lt;h5 id=&#34;15232-fluentd로-oke-로그-전송하기&#34;&gt;1.5.2.3.2 FluentD로 OKE 로그 전송하기&lt;/h5&gt;&#xA;&lt;p&gt;EFK 구성에서 ElasticSearch와 Kibana 대신 OpenSearch와 OpenSearch Dashboard를 사용할 수 있도록 FluentD를 설정합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>16.2 OCI Certificate에 외부 인증서 임포트하기</title>
      <link>https://thekoguryo.github.io/oci/chapter16/2/</link>
      <pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter16/2/</guid>
      <description>&lt;h2 id=&#34;162-oci-certificate에-외부-인증서-임포트하기&#34;&gt;16.2 OCI Certificate에 외부 인증서 임포트하기&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;외부 발급업체에서 발급한 인증서를 임포트해서 사용하는 경우에 대한 테스트입니다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;외부-ssl-인증서-발급하기&#34;&gt;외부 SSL 인증서 발급하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SSL 인증서를 발급받습니다. 여기서는 Self-Signed 인증서가 아닌 무료 인증서를 사용하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4.2 Image Registry로 Nexus Repository 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/nexus/1.nexus-repository/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/nexus/1.nexus-repository/</guid>
      <description>&lt;h3 id=&#34;142-image-registry로-nexus-repository-사용하기&#34;&gt;1.4.2 Image Registry로 Nexus Repository 사용하기&lt;/h3&gt;&#xA;&lt;h6 id=&#34;컴퓨트-인스턴스에-nexus-설치&#34;&gt;컴퓨트 인스턴스에 Nexus 설치&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;Step 1 - 컴퓨트 인스턴스 생성&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;시스템 요구사항에 맞춰 컴퓨트 인스턴스를 생성합니다. 여기서는 최소사항에 맞춰 설치하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.2.2 Management Agent를 사용한 모니터링</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/logging-analytics/2.management-agent-manual/</link>
      <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/logging-analytics/2.management-agent-manual/</guid>
      <description>&lt;h5 id=&#34;15222-management-agent를-사용한-모니터링&#34;&gt;1.5.2.2.2 Management Agent를 사용한 모니터링&lt;/h5&gt;&#xA;&lt;p&gt;애플리케이션에서 내보내는 메트릭 정보를 수집할 수 있는 OCI Management Agent를 GitHub 저장소를 통해 제공합니다. 쿠버네티스를 위해서 Helm Chart 형식으로 제공하며, OKE에 설치하여 OKE 클러스터에서 수집되는 메트릭 정보를 OCI Logging Analytics를 통해 모니터링할 수  있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Load Balancer 문제해결</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/load-balancer/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/load-balancer/</guid>
      <description>&lt;h2 id=&#34;load-balancer-문제해결&#34;&gt;Load Balancer 문제해결&lt;/h2&gt;&#xA;&lt;h6 id=&#34;load-balancer-생성-오류---the-following-tag-namespaces--keys-are-not-authorized-or-not-found&#34;&gt;Load Balancer 생성 오류 - The following tag namespaces / keys are not authorized or not found&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;현상: OKE에서 kubectl로 Load Balancer 타입을 생성했을때 다음과 같은 오류 발생&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl describe svc nginx-deployment&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Normal   EnsuringLoadBalancer    12s &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;x3 over 34s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  service-controller  Ensuring load balancer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Warning  SyncLoadBalancerFailed  8s                 service-controller  Error syncing load balancer: failed to ensure load balancer: creating load balancer: Error returned by LoadBalancer Service. Http Status Code: 400. Error Code: RelatedResourceNotAuthorizedOrNotFound. Opc request id: 783ddd1d645bf1efda4918a6ba52ca51/DCC20EA18C4559FD348A8597553FF298/980E1AFAF615507D4AF6F8CE665EF2FD. Message: The following tag namespaces / keys are not authorized or not found: &lt;span class=&#34;s1&#34;&gt;&amp;#39;cn&amp;#39;&lt;/span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Operation Name: CreateLoadBalancer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;원인:&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.6.2 컨테이너에서 클라이언트 IP 얻기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/nlb/2.nginx-ingress-preserve-client-ip/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/nlb/2.nginx-ingress-preserve-client-ip/</guid>
      <description>&lt;h5 id=&#34;122262-oci-network-load-balancer-기반-nginx-ingress-controller에서-클라이언트-ip-얻기&#34;&gt;1.2.2.2.6.2 OCI Network Load Balancer 기반 NGINX Ingress Controller에서 클라이언트 IP 얻기&lt;/h5&gt;&#xA;&lt;p&gt;Nginx Ingress Controller를 사용할 때, Pod에 있는 애플리케이션에서 모니터링 등을 위해 실 Client IP를 확인 할 필요가 있습니다. 하지만, 클라이언트의 요청은 Nginx Ingress Controller가 사용하는 OCI Network Load Balancer를 거쳐 오는 경우에도 실제 Client IP를 얻기 위한 방법을 알아봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.2.2 OpenSearch 기반 OCI Search 서비스를 사용한 로그 모니터링 - Self-Signed</title>
      <link>https://thekoguryo.github.io/archives/oracle-cloudnative/oci-services/logging/2.oci-opensearch-self-signed/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/archives/oracle-cloudnative/oci-services/logging/2.oci-opensearch-self-signed/</guid>
      <description>&lt;h1 id=&#34;522-oci-search-서비스를-사용한-로그-모니터링&#34;&gt;5.2.2 OCI Search 서비스를 사용한 로그 모니터링&lt;/h1&gt;&#xA;&lt;p&gt;OpenSearch와 OpenDashboards는 2021년에 ElasticSearch와 Cabana에서 포크되어 별도 오픈소스 프로젝트로 운영되고 있습니다. OCI OpenSearch는 OCI에서 제공하는 관리형 서비스입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.3.2.1 File Storage 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/file-storage-service/1.file-storage/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/file-storage-service/1.file-storage/</guid>
      <description>&lt;h5 id=&#34;12321-file-storage-사용하기csi-driver-기반---있는-file-system-쓰기&#34;&gt;1.2.3.2.1 File Storage 사용하기(CSI Driver 기반) - 있는 File System 쓰기&lt;/h5&gt;&#xA;&lt;p&gt;컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이터를 저장하기 위해 별도의 Persistent Volume을 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.2.2 Bash 샘플 클라이언트</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/2/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/2/2/</guid>
      <description>&lt;h3 id=&#34;1422-bash-샘플-클라이언트-예전-스타일&#34;&gt;14.2.2 Bash 샘플 클라이언트 (예전 스타일)&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2022년 기준으로 oci cli(즉, oci raw-request)를 사용하는 것으로 변경되었습니다. 최신 내용은 아래 링크를 참조하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15.2 Resource Manager을 위한 Stack Template</title>
      <link>https://thekoguryo.github.io/oci/chapter15/2/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter15/2/</guid>
      <description>&lt;h2 id=&#34;152-resource-manager을-위한-stack-template&#34;&gt;15.2 Resource Manager을 위한 Stack Template&lt;/h2&gt;&#xA;&lt;h4 id=&#34;stack-template&#34;&gt;Stack Template&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴의 &lt;strong&gt;Developer Services&lt;/strong&gt; &amp;gt; &lt;strong&gt;Resource Manager&lt;/strong&gt; &amp;gt; &lt;strong&gt;Stacks&lt;/strong&gt;을 클릭합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create Stack&lt;/strong&gt; 을 클릭합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;두번째 Template 옵션을 선택하고 Select Template을 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.2.2 CLI를 통한 파일 업로드</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/2/2/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/2/2/</guid>
      <description>&lt;h4 id=&#34;14122-cli를-통한-파일-업로드&#34;&gt;14.1.2.2 CLI를 통한 파일 업로드&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아래 페이지의 일부를 정리한 내용입니다. 전체 내용은 다음 링크를 참고하세요.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm&#34;&gt;https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.4.2/oci_cli_docs/cmdref/os/object/put.html&#34;&gt;https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.4.2/oci_cli_docs/cmdref/os/object/put.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Object Storage Namespace을 조회합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;oci os ns get&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Bucket상의 Object 목록 조회&lt;/p&gt;</description>
    </item>
    <item>
      <title>12.2 Monitoring Alarm 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter12/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter12/2/</guid>
      <description>&lt;h2 id=&#34;122-monitoring-alarm-만들기&#34;&gt;12.2 Monitoring Alarm 만들기&lt;/h2&gt;&#xA;&lt;p&gt;Compute 인스턴스에 설정한 모니터링 중에서 CPU 사용률이 지정한 수치에 이르면 메일을 발송하도록 알람을 생성해 보겠습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OCI 콘솔에서 내비게이션 메뉴의 &lt;strong&gt;Observability &amp;amp; Management&lt;/strong&gt; &amp;gt; &lt;strong&gt;Monitoring&lt;/strong&gt; &amp;gt; &lt;strong&gt;Alarm Definition&lt;/strong&gt;에서 정의&lt;/li&gt;&#xA;&lt;li&gt;자원 모니터링 메트릭의 옵션 메뉴에서 정의&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;위 두 가지 방법이 있지만, 본 문서에서는 선택한 모니터링 메트릭으로 Alarm의 메트릭이 자동으로 설정되어 사용이 쉬운 두 번째 방법으로 진행하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12.3.1 Compute VM에 Grafana 설치</title>
      <link>https://thekoguryo.github.io/oci/chapter12/3/1/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter12/3/1/</guid>
      <description>&lt;h3 id=&#34;1231-compute-vm에-grafana-설치&#34;&gt;12.3.1 Compute VM에 Grafana 설치&lt;/h3&gt;&#xA;&lt;h4 id=&#34;compute-instance-만들기&#34;&gt;Compute Instance 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Compute Instance 생성 화면으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;이미지 소스를 &lt;strong&gt;Oracle Linux&lt;/strong&gt; 목록에 있는 &lt;strong&gt;Oracle Linux Cloud Developer Image&lt;/strong&gt; 이미지로 선택합니다.&lt;/p&gt;&#xA;&lt;p&gt;Oracle Cloud Developer Image는 OCI CLI 등 개발툴이 이미 설치되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12.3.2 Grafana 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter12/3/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter12/3/2/</guid>
      <description>&lt;h3 id=&#34;1232-grafana-구성&#34;&gt;12.3.2 Grafana 구성&lt;/h3&gt;&#xA;&lt;h4 id=&#34;data-source-등록&#34;&gt;Data Source 등록&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Grafana에 로그인 합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;왼쪽 메뉴에서 &lt;strong&gt;Administration&lt;/strong&gt; &amp;gt; &lt;strong&gt;Data sources&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230509174633554.png&#34; alt=&#39;image-20230509174633554&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230509174633554.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Add data source&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;데이터 소스 중에서 Oracle Cloud Infrastructure Metrics를 선택&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230509174755592.png&#34; alt=&#39;image-20230509174755592&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230509174755592.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>13.2 Autoscaling 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter13/2/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter13/2/</guid>
      <description>&lt;h2 id=&#34;132-autoscaling-구성&#34;&gt;13.2 Autoscaling 구성&lt;/h2&gt;&#xA;&lt;p&gt;Autoscaling을 하기 위해서는 다음 사항이 필요합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Instance Pool&lt;/strong&gt;: Autoscaling은 Instance Pool에서 현재 인스턴스 수를 설정된 메트릭에 따라 자동으로 변경하는 것으로 Instance Pool이 필요합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Monitoring 활성화&lt;/strong&gt;: Compute 인스턴스는 모니터링하여 자원상태를 기반으로 하는 것으로 Monitoring이 활성화되어야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Limit&lt;/strong&gt;: Autoscaling으로 새로운 인스턴스를 기동할 관련 자원이 충분해야 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;step-4-instance-pool을-이용하여-어떤-기준으로-확장축소할지-autoscaling-configuration-생성&#34;&gt;Step #4: Instance Pool을 이용하여 어떤 기준으로 확장/축소할지 Autoscaling Configuration 생성&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instance Pools&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.2 FSS를 Linux VM에 마운트하여 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter08/2/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter08/2/</guid>
      <description>&lt;h2 id=&#34;82-fssfile-storage-service를-linux-vm에-마운트하여-사용하기&#34;&gt;8.2 FSS(File Storage Service)를 Linux VM에 마운트하여 사용하기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;subnet-만들기&#34;&gt;Subnet 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다.  &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual Cloud Networks&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;앞서 만든 VCN인 클릭&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create Subnets&lt;/strong&gt; 클릭&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.2 Bucket에 파일 올리기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/2/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/2/</guid>
      <description>&lt;h2 id=&#34;72-bucket에-파일-올리기&#34;&gt;7.2 Bucket에 파일 올리기&lt;/h2&gt;&#xA;&lt;p&gt;Object Storage는 단일 파일 기준 최대 50 GB까지 지원합니다. OCI Console의 메시지 기준으로는 2 GiB까지만 올릴 수 있습니다. 그 이상 더 큰 파일은 SDK 또는 API를 통해 올릴 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.2 Reserved Public IP 할당하기</title>
      <link>https://thekoguryo.github.io/oci/chapter04/2/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter04/2/</guid>
      <description>&lt;h2 id=&#34;42-reserved-public-ip-할당하기&#34;&gt;4.2 Reserved Public IP 할당하기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instance 목록 중에서 고정 IP를 부여할 Instance의 이름을 클릭하여 상세정보로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.2 사용자 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/2/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter06/2/</guid>
      <description>&lt;h2 id=&#34;62-사용자-만들기&#34;&gt;6.2 사용자 만들기&lt;/h2&gt;&#xA;&lt;div class=&#34;panel panel-notice&#34;&gt;&lt;div class=&#34;panel-header&#34;&gt;&#xA;&lt;h3&gt;&lt;i class=&#34;fas fa-life-saver&#34;&gt;&lt;/i&gt; 팁&lt;/h3&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;panel-body&#34;&gt;&#xA;&#xA;OCI는 접속할 수 있는 사용자는 크게 IDCS 사용자와 OCI 사용자가 있습니다. OCI는 Identity Cloud Service와 기본적으로 연결설정이 되어 있어, IDCS의 사용자가 Federated 되어 로그인할 수도 있습니다. 그리고 IDCS는 등록되어 있지 않고, OCI에만 있는 자체 사용자도 있습니다. 여기서 내용은 OCI 자체 사용자만을 대상으로 합니다.&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4 id=&#34;oci-관리자-추가하기&#34;&gt;OCI 관리자 추가하기&lt;/h4&gt;&#xA;&lt;h5 id=&#34;step-1-oci-관리자-추가&#34;&gt;Step 1. OCI 관리자 추가&lt;/h5&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Identity &amp;amp; Security&lt;/strong&gt; &amp;gt; &lt;strong&gt;Identity&lt;/strong&gt; &amp;gt; &lt;strong&gt;Users&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.2 가상 네트워크 환경을 위한 VCN 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/2/</guid>
      <description>&lt;h2 id=&#34;32-가상-네트워크-환경을-위한-vcn-만들기&#34;&gt;3.2 가상 네트워크 환경을 위한 VCN 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;virtual-cloud-networkvcn-이란&#34;&gt;Virtual Cloud Network(VCN) 이란&lt;/h4&gt;&#xA;&lt;p&gt;Virtual Cloud Network(VCN)은 가상 네트워크 환경을 제공합니다. 사용자의 요구에 맞게 VCN 및 관련 자원을 구성하여 여러 가지 형태의 가상 네트워크 환경을 구성할 수 있습니다. Subnet은 VCN의 하위 요소로 단일 Availability Domain 단위로 만들어집니다. Subnet은 Route Table에 따라 트래픽은 대상 경로로 이동하며, 또한 Subnet은 Security List로 들어오고 나가는 트래픽을 제어할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.2 Block Volume을 Instance에 장착하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/2/</guid>
      <description>&lt;h3 id=&#34;362-block-volume을-instance에-장착하기&#34;&gt;3.6.2 Block Volume을 Instance에 장착하기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다.  &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;앞서 생성한 대상 &lt;strong&gt;Instance의 이름&lt;/strong&gt;을 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.7.2 백업으로 새 Volume 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/7/2/</guid>
      <description>&lt;h3 id=&#34;372-백업으로-새-volume-만들기&#34;&gt;3.7.2 백업으로 새 Volume 만들기&lt;/h3&gt;&#xA;&lt;p&gt;Block Volume 백업본을 이용해 새로운 Block Volume을 생성하는 복구방식입니다. 복구된 Block Volume은 새로운 Block Volume을 장착하는 것과 같은 방법으로 Compute Instance에 장착하게 사용하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.8.2 백업으로 새 Boot Volume 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/2/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/8/2/</guid>
      <description>&lt;h3 id=&#34;382-백업으로-새-boot-volume-만들기&#34;&gt;3.8.2 백업으로 새 Boot Volume 만들기&lt;/h3&gt;&#xA;&lt;p&gt;Boot Volume 백업 복구 기능은 Block Volume 백업 복구 기능과 거의 같습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. Boot Volume 상세 페이지로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Boot Volume 상세 페이지에서 왼쪽 아래의 &lt;strong&gt;Resources&lt;/strong&gt; &amp;gt; &lt;strong&gt;Boot Volume Backups&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.2 OCI Console 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter02/2/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter02/2/</guid>
      <description>&lt;h2 id=&#34;22-oci-console-접속하기&#34;&gt;2.2 OCI Console 접속하기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;방법-1-welcome-이메일을-통한-접속&#34;&gt;방법 #1. Welcome 이메일을 통한 접속&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Free Tier Account 준비 완료 메일 수신되면 &lt;strong&gt;Oracle Cloud에 사인인&lt;/strong&gt;을 클릭하여 OCI Cloud Console에 접속합니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20220109213716942.png&#34; alt=&#39;image-20220109213716942&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20220109213716942.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;로그인 화면에서 Free Tier 신청시 입력한 관리자 이메일과 암호를 입력하여 로그인합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.8.1.2 마이크로서비스 앱에 Istio 적용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/service-mesh/istio/2.sampleapp-with-istio/</link>
      <pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/service-mesh/istio/2.sampleapp-with-istio/</guid>
      <description>&lt;h4 id=&#34;1812-마이크로서비스-앱에-istio-적용하기&#34;&gt;1.8.1.2 마이크로서비스 앱에 Istio 적용하기&lt;/h4&gt;&#xA;&lt;p&gt;istioctl, Helm 또는 매뉴얼로 설치가 가능합니다. 여기서는 OKE 문서에서 예시로 설명하고 있는 istioctl 기준으로 설치하고 Istio 문서에 따라 서비스에 적용하는 것을 확인해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.2.4.2 Prometheus&amp;Grafana로 모니터링 하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/open-source/prometheusgrafana/1.install-prometheus-grafana/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/open-source/prometheusgrafana/1.install-prometheus-grafana/</guid>
      <description>&lt;h5 id=&#34;15242-prometheusgrafana로-모니터링-하기&#34;&gt;1.5.2.4.2 Prometheus&amp;amp;Grafana로 모니터링 하기&lt;/h5&gt;&#xA;&lt;p&gt;오픈 소스로 쿠버네티스 메트릭 모니터링을 하는 데 가장 많이 사용되는 구성인 Prometheus&amp;amp;Grafana을 확인해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.2 PATH 기반 라우팅</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/2.nginx-ingress-path/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/2.nginx-ingress-path/</guid>
      <description>&lt;h5 id=&#34;12222-nginx-ingress-controller에서-path-기반-라우팅&#34;&gt;1.2.2.2.2 NGINX Ingress Controller에서 PATH 기반 라우팅&lt;/h5&gt;&#xA;&lt;h6 id=&#34;path-기반-기본-라우팅-테스트&#34;&gt;PATH 기반 기본 라우팅 테스트&lt;/h6&gt;&#xA;&lt;p&gt;가장 기본적인 라우팅으로 URL PATH에 따라 라우팅 서비스를 달리하는 경우입니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;테스트를 위한 샘플 앱을 배포합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4.1.2 컨테이너 이미지 스캔</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/2.scan-image/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/2.scan-image/</guid>
      <description>&lt;h4 id=&#34;1412-컨테이너-이미지-스캔&#34;&gt;1.4.1.2 컨테이너 이미지 스캔&lt;/h4&gt;&#xA;&lt;p&gt;OCIR는 OCI Vulnerability Scanning 서비스를 사용하여, 알려진 Common Vulnerabilities and Exposures (CVE) database를 기반으로 컨테이너 이미지에 대한 취약점 분석 기능을 제공하고 있습니다. 다음은 취약점 분석을 위한 이미지 스캔 기능을 확인해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.6.2 File Storage 사용하기(Flex Volume Driver)</title>
      <link>https://thekoguryo.github.io/archives/oracle-cloudnative/oke/6.persistent-volume/2.file-storage-by-flex-volume-driver/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/archives/oracle-cloudnative/oke/6.persistent-volume/2.file-storage-by-flex-volume-driver/</guid>
      <description>&lt;h1 id=&#34;162-file-storage-사용하기flex-volume-driver&#34;&gt;1.6.2 File Storage 사용하기(Flex Volume Driver)&lt;/h1&gt;&#xA;&lt;p&gt;컨테이너의 내부 스토리지는 기본적으로 컨테이너가 삭제, 종료되면 사라집니다. 데이터가 사라지는 것을 막고 보존이 필요한 데이터를 저장하기 위해 별도의 Persistent Volume을 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1.2 OKE 클러스터 만들기 - Quick Create 모드</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/2.create-oke-cluster-in-quick-mode/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/basics/2.create-oke-cluster-in-quick-mode/</guid>
      <description>&lt;h3 id=&#34;112-oke-클러스터-만들기&#34;&gt;1.1.2 OKE 클러스터 만들기&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;v1.26.7, Oracle Linux 8, VCN-Native Pod Networking CNI에서 2024년 1월 7일에 테스트 되었음&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h6 id=&#34;quick-create-모드로-클러스터-만들기&#34;&gt;Quick Create 모드로 클러스터 만들기&lt;/h6&gt;&#xA;&lt;p&gt;처음 OKE 클러스터를 만드는 단계로 실환경에서는 별도의 OKE 사용자 및 VCN 등 커스텀한 환경을 사용하겠지만, OKE를 이해하기 위한 처음 단계로 Quick Create 모드로 설치합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.2 Terraform Configurations 작성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/2/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/2/</guid>
      <description>&lt;h3 id=&#34;1432-terraform-configurations-작성하기&#34;&gt;14.3.2 Terraform Configurations 작성하기&lt;/h3&gt;&#xA;&lt;p&gt;Terraform을 쓰려면 Terraform 설정 파일(.tf)에 HashiCorp Configuration Language(HCL) 형식으로 OCI 인프라 자원을 표현해야 합니다. JSON 형식도 지원하지만, 여기서는 HCL 포맷을 사용하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.2 VCN 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter10/2/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/2/</guid>
      <description>&lt;h2 id=&#34;102-vcn-구성&#34;&gt;10.2 VCN 구성&lt;/h2&gt;&#xA;&lt;h4 id=&#34;loadbalancer-테스트용-vcn-만들기&#34;&gt;LoadBalancer 테스트용 VCN 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual Cloud Networks&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;왼쪽 아래 Compartment에서 Sandbox를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.1.2 리눅스계열에서 OCI CLI 설치하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/2/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/2/</guid>
      <description>&lt;h4 id=&#34;14112-리눅스계열에서-oci-cli-설치하기&#34;&gt;14.1.1.2 리눅스계열에서 OCI CLI 설치하기&lt;/h4&gt;&#xA;&lt;p&gt;OCI Documentation &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm&#34;&gt;Installing the CLI&lt;/a&gt;을 참조하여 설치합니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;터미널 실행&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;설치된 python 버전을 확인합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python3 --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Python 3.6.8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Oracle Linux 8이고 python 버전이 3.6.x인 경우 삭제후 업그레이드 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.2 Default Security List 업데이트 하기</title>
      <link>https://thekoguryo.github.io/oci/chapter05/2/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter05/2/</guid>
      <description>&lt;h2 id=&#34;52-방법-1-default-security-list-업데이트-하기&#34;&gt;5.2 방법 #1. Default Security List 업데이트 하기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;원하는 Instance를 클릭하여 상세 페이지로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;왼쪽 아래의 &lt;strong&gt;Resources&lt;/strong&gt; &amp;gt; &lt;strong&gt;Attached VNICs&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.5.2 Windows에서 PuTTY로 접속하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/2/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/5/2/</guid>
      <description>&lt;h3 id=&#34;352-windows에서-putty로-접속하기&#34;&gt;3.5.2 Windows에서 PuTTY로 접속하기&lt;/h3&gt;&#xA;&lt;p&gt;PuTTY Key Generator로 생성한 SSH Key는 &lt;strong&gt;Save private key&lt;/strong&gt;를 통해 &lt;strong&gt;PuTTY Private Key (PPK)&lt;/strong&gt; .ppk로 저장하여 PuTTY에서 사용합니다. ssh-keygen로 생성한 PEM(Privacy Enhanced Mail) 파일 형식의 키는 PEM -&amp;gt; PPK 변환을 통해 PuTTY에서 사용 가능합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2 Fault Domains</title>
      <link>https://thekoguryo.github.io/oci/chapter01/2/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/2/</guid>
      <description>&lt;h2 id=&#34;12-fault-domains&#34;&gt;1.2 Fault Domains&lt;/h2&gt;&#xA;&lt;p&gt;Fault Domain은 Availability Domain 내에 하드웨어와 인프라스트럭쳐의 그룹입니다. 각 Availability Domain은 3개의 Fault Domain을 가지고 있습니다. Fault Domain은 Compute 인스턴스를 단일 Availability Domain 내에 하나의 물리적 하드웨어에 분배하지 않도록 합니다. 하나의 Fault Domain 내의 하드웨어 장애 또는 하드웨어 유지 보수 작업은 다른 Fault Domain에 영향을 끼치지 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>16.3 단일 Load Balancer 포트에 2개의 인증서 적용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter16/3/</link>
      <pubDate>Wed, 17 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter16/3/</guid>
      <description>&lt;h2 id=&#34;163-단일-load-balancer-포트에-2개의-인증서-적용하기&#34;&gt;16.3 단일 Load Balancer 포트에 2개의 인증서 적용하기&lt;/h2&gt;&#xA;&lt;p&gt;OCI Load Balancer의 Listener에는 하나의 인증서를 적용할 수 있습니다. 멀티 도메인 또는 와일드카드 도메인 기반의 인증서를 사용하지 않고, 인증서 발급 비용 등을 이유로 개별 인증서로 발급받는 경우가 있습니다. 이때 하나의 Load Balancer에 같은 443 포트에 인증서를 2개 적용하려는 요구사항이 생기게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>9.3 Azure AKS에서 OKE로 마이그레이션하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/migration/3.aks-to-oke-os/</link>
      <pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/migration/3.aks-to-oke-os/</guid>
      <description>&lt;h4 id=&#34;93-azure-aks에서-oke로-마이그레이션하기-oci-object-storage-사용&#34;&gt;9.3 Azure AKS에서 OKE로 마이그레이션하기 (OCI Object Storage 사용)&lt;/h4&gt;&#xA;&lt;p&gt;이번에는 Azure AKS에서 OKE로 마이그레이션하는 과정입니다. AKS 상에서 사용하고 있는 애플리케이션이 있다는 가정하에 마이그레이션과정을 테스트 해보기 위해 &lt;a href=&#34;https://github.com/Azure-Samples/aks-store-demo&#34;&gt;aks-store-demo&lt;/a&gt;예제를 먼저 AKS에 배포 설정하고, Velero를 통해 OKE로 마이그레이션 해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.2.3 Oracle Database 23ai Free Container Image</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/3.oracle-database-23ai-free/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/oracle-database/3.oracle-database-23ai-free/</guid>
      <description>&lt;h3 id=&#34;423-oracle-database-23ai-free-container-image&#34;&gt;4.2.3 Oracle Database 23ai Free Container Image&lt;/h3&gt;&#xA;&lt;p&gt;지난 2023년 4월,  개발자를 위해 개인 데스크탑/랩탑에서 실행할 수 있는 Oracle Database 23c Free Container Image를 출시하였습니다. 로컬 PC에 docker CLI 호환 도구를 통해 실행할 수 있습니다. 이후 23c 버전은 ai 관련 기능을 추가하여 23ai로 이름이 변경되었습니다. 많은 개발자들이 Arm기반 맥북 환경을 사용하고 있고, 개발자들의 요구에 따라 2024년 11월, 작성일 기준 이번달에 ARM기반에서 구동되는 이미지를 출시하였습니다. 그래서 현재는 윈도우즈, 리눅스, 맥 환경에서 모든 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17.3 Kafka Connect, Debezium로 OCI MySQL Database Service에 CDC 구성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-mds-debezium/</link>
      <pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-mds-debezium/</guid>
      <description>&lt;h2 id=&#34;173-kafka-connect-debezium로-oci-mysql-database-service에-cdc-구성하기&#34;&gt;17.3 Kafka Connect, Debezium로 OCI MySQL Database Service에 CDC 구성하기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://thekoguryo.github.io/oci/chapter17/oci-oss-cdc-mysql-debezium/&#34;&gt;OCI Streaming - Kafka Connect, Debezium로 MySQL CDC 구성하기&lt;/a&gt;을 먼저 본 것을 전제로 합니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;이전 문서에서 debezium에서 제공하는 컨테이너 이미지를 사용하여, Source MySQL -&amp;gt; Debezium Connector -&amp;gt; OCI Streaming -&amp;gt; JDBC Connector -&amp;gt; Target MySQL 구성하고, CDC를 테스트하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3.3 Cluster Autoscaler</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/3.cluster-autoscaler/</link>
      <pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/3.cluster-autoscaler/</guid>
      <description>&lt;h3 id=&#34;133-cluster-autoscaler&#34;&gt;1.3.3 Cluster Autoscaler&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Kubernetes Cluster Autoscaler는&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리소스가 요구하는 자원이 있는 Pod에 대해, Pod에게 할당할 자원이 부족하여 Pod를 스케줄할 수 없는 경우, 해당 노드 풀에 Worker Node를 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;장시간 동안 Worker Node의 활용도가 낮고 Pod를 다른 노드에 배치할 수 있는 경우, 노드 풀에서 Worker Node를 제거합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Kubernetes Cluster Autoscaler는 매뉴얼하게 직접 설치하거나, Cluster Add-On으로 설치할 수 있습니다. 여기서는 직접 설치하는 것을 기준합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.1.1.3 Spring Boot에서 OCI Cache with Redis &#43; MySQL 쓰기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/3.cache-with-redis-mysql-in-springboot/</link>
      <pubDate>Sun, 19 Nov 2023 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/redis/cache-with-redis/3.cache-with-redis-mysql-in-springboot/</guid>
      <description>&lt;h3 id=&#34;4113-spring-boot에서-oci-cache-with-redis--mysql-쓰기&#34;&gt;4.1.1.3 Spring Boot에서 OCI Cache with Redis + MySQL 쓰기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;사전-준비-테스트용-mysql-서버-준비&#34;&gt;사전 준비: 테스트용 MySQL 서버 준비&lt;/h4&gt;&#xA;&lt;p&gt;OCI에서는 MySQL 데이터베이스 서비스를 제공하고 있습니다. 여기서는 간단한 테스트이므로, 간단히 컨테이너 이미지를 실행할 수 있는 OCI Container Instance를 통해 MySQL 서버를 만들도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bastion Service 문제해결</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/bastion-service/</link>
      <pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/bastion-service/</guid>
      <description>&lt;h2 id=&#34;bastion-service-문제해결&#34;&gt;Bastion Service 문제해결&lt;/h2&gt;&#xA;&lt;h6 id=&#34;세션-접속용-ssh-command-실행시-접속-오류---permission-denied-publickey&#34;&gt;세션 접속용 SSH command 실행시 접속 오류 - Permission denied (publickey)&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;현상: Bastion 서비스 세션 생성후, SSH command로 접속시 아래와 같이 Permission denied (publickey) 오류 발생함.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;세션 생성시 사용한 SSH Key는 기존 Compute 인스턴스 생성시 사용시 연결 오류 발생하지 않음 =&amp;gt; SSH Key 문제는 아닌 거 같은데..&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.3 로컬 환경에 GraalVM for JDK 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/3.install-graal-vm-for-jdk/</link>
      <pubDate>Tue, 07 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/3.install-graal-vm-for-jdk/</guid>
      <description>&lt;h2 id=&#34;83-로컬-환경에-graalvm-for-jdk-설치하기&#34;&gt;8.3 로컬 환경에 GraalVM for JDK 설치하기&lt;/h2&gt;&#xA;&lt;p&gt;2023년 11월 기준으로 GraalVM for JDK 17, GraalVM for JDK 21 버전 모두 사용 가능합니다. 두 버전 모두 LTS 버전입니다. 여기서는 17 버전을 사용하도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.3.3 Kubernetes Volume Snapshot 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/3.volume-snapshot/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/3.volume-snapshot/</guid>
      <description>&lt;h4 id=&#34;1233-kubernetes-volume-snapshot-만들기&#34;&gt;1.2.3.3 Kubernetes Volume Snapshot 만들기&lt;/h4&gt;&#xA;&lt;p&gt;OCI Block Volume Backup과 연계하여 Kubernetes Volume Snapshot 기능을 제공합니다. 재해 복구 전략의 일부로 Persistent Volume을 백업하고, 복구시에 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;block-volume-snapshot-사용-전제조건&#34;&gt;Block Volume Snapshot 사용 전제조건&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OKE 클러스터 Control Plane의 쿠버네티스 버전은 1.24 이상&lt;/li&gt;&#xA;&lt;li&gt;Worker Node가 AMD 또는 Arm 기반이어야 함&lt;/li&gt;&#xA;&lt;li&gt;Worker Node는 Oracle Linux 7 또는 Oracle Linux 8&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h6 id=&#34;csi-snapshotter-설치&#34;&gt;CSI Snapshotter 설치&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CSI Snapshotter를 설치합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.10.3 Worker Node 생성시 Custom Image 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/3.custom-node-image/</link>
      <pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/3.custom-node-image/</guid>
      <description>&lt;h3 id=&#34;1103-worker-node-생성시-custom-image-사용하기&#34;&gt;1.10.3 Worker Node 생성시 Custom Image 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;OKE에서 Managed Node로 프로비저닝을 할때 지원하는 노드 이미지로 다음 세가지를 제공합니다. 세가지 모두 Oracle Linux입니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Platform Images&lt;/strong&gt;: 오라클에서 제공하는 이미지로 Oracle Linux를 포함하는 기본 이미지로, Managed Node로 프로비저닝시 OKE의 Worker Node로써 필요한 소프트웨어 설치 및 구성이 이루어집니다.&lt;/li&gt;&#xA;&lt;li&gt;OKE Images: 오라클에서 제공하는 이미지로 OKE Managed Node로 최적화된 이미지입니다. 필요한 소프트웨어 및 구성이 기본 포함되어 있어, 프로비저닝 시간이 단축됩니다. 대신 범용이미지가 아니라, 특정 쿠버네티스 버전, 특정 CPU 자원에 따라 사용해야 하는 이미지가 달라집니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Custom Images&lt;/strong&gt;: 사용자가 만든 이미지로, 위 오라클이 제공하는 Platform Images, OKE Images를 기반으로 만든 커스텀 이미지 이어야 합니다. Node Pool 생성시 사용할 이미지를 지정할 수 있는데, 현재 콘솔 UI에서는 Platform Images와 OKE Images만 나열되어, Custom Image 지정은 API 또는 CLI로만 지정이 가능합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;참고문서: OKE Documentation &amp;gt; &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/ContEng/Reference/contengimagesshapes.htm#images&#34;&gt;Supported Images for Managed Nodes&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.3 OKE에서 OCI 자원관리를 위한 Service Operator</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/databases/oci-services/1.oci-service-operator-1.1.8/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/databases/oci-services/1.oci-service-operator-1.1.8/</guid>
      <description>&lt;h2 id=&#34;43-oke에서-oci-자원관리를-위한-service-operator-사용하기&#34;&gt;4.3 OKE에서 OCI 자원관리를 위한 Service Operator 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;OCI Service Operator for Kubernetes(OSOK)는 OCI 자원을 Kubernetes API를 통해 관리할 수 있도록 도와주는 도구입니다. Autonomous Database 서비스를 Kubernetes API, kubectl을 통해 인스턴스를 생성, 삭제 등을 할 수 있게 해준다고 이해하면 됩니다. Kubernetes에서 사용하는 오픈소스 Operator Framework을 기반으로 작성되었습니다. 관련 참고 사이트는 아래와 같습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.1.3 HOST 기반 라우팅</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/3.ingress-host/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/oci-native-ingress/3.ingress-host/</guid>
      <description>&lt;h5 id=&#34;12213-oci-native-ingress-controller에서-host-기반-라우팅&#34;&gt;1.2.2.1.3 OCI Native Ingress Controller에서 HOST 기반 라우팅&lt;/h5&gt;&#xA;&lt;h6 id=&#34;dns에-등록하기&#34;&gt;DNS에 등록하기&lt;/h6&gt;&#xA;&lt;p&gt;이미 구입한 Domain Name이 있다는 전제하에 설정하는 과정입니다. 테스트를 위해 따로 구입한 Domain Name(thekoguryo.xyz)을 사용하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.3 Virtual Nodes 앱 배포 및 비용 예시</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/3.deploy-app-on-virtual-nodes/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-virtual-nodes/3.deploy-app-on-virtual-nodes/</guid>
      <description>&lt;h2 id=&#34;23-virtual-nodes-앱-배포-및-비용-예시&#34;&gt;2.3 Virtual Nodes 앱 배포 및 비용 예시&lt;/h2&gt;&#xA;&lt;h6 id=&#34;앱-배포-및-load-balancer-사용하기&#34;&gt;앱 배포 및 Load Balancer 사용하기&lt;/h6&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../../4.deploy-docker-hub-image-with-lb/&#34;&gt;1.4 앱 배포 및 Load Balancer 사용하기&lt;/a&gt;에서 한 과정을 동일하게 OKE Serverless 클러스터에서 수행해 봅니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;docker-hub-이미지-배포&#34;&gt;Docker Hub 이미지 배포&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;가장 흔한 형태인 Public Container Registry에 이미지를 가져와서 OKE 클러스터에 배포를 해봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.9.3 Node Cycling로 Worker Nodes 업데이트 하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/3.node-cycling/</link>
      <pubDate>Fri, 19 May 2023 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/enhanced-cluster/3.node-cycling/</guid>
      <description>&lt;h3 id=&#34;193-on-demand-node-cycling로-worker-nodes-업데이트업그레이드-하기&#34;&gt;1.9.3 On Demand Node Cycling로 Worker Nodes 업데이트/업그레이드 하기&lt;/h3&gt;&#xA;&lt;p&gt;Worker Nodes의 속성을 변경하거나 OS 버전을 변경하기 위해 Node Pool을 업데이트 하면, 이후 새로 생성되는 Node에 변경된 값이 적용됩니다. 기존 Worker Nodes에는 변경 적용되지 않기 때문에, 적용을 위해서는 Drain 작업을 포함한 재생성 작업이 필요합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.3 Private Registry를 위한 image pull secret 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/container-instances/3.image-pull-secrets/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/container-instances/3.image-pull-secrets/</guid>
      <description>&lt;h2 id=&#34;63-private-repository를-위한-image-pull-secret-사용하기&#34;&gt;6.3 Private Repository를 위한 image pull secret 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;컨테이너 이미지 레지스트리 중 Private Repository에서 이미지를 가져오기 위해서는 사용자 인증 정보가 필요합니다. 쿠버네티스에서는 imagePullSecrets을 사용합니다. Container Instance에서도 imagePullSecrets를 설정하여, 사용자 인증 정보를 입력합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.3.2.2 File Storage 사용하기 - Dynamic Provisioning</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/file-storage-service/2.file-storage-dynamic-provisioning/</link>
      <pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/file-storage-service/2.file-storage-dynamic-provisioning/</guid>
      <description>&lt;h5 id=&#34;12322-file-storage-사용하기csi-driver-기반---dynamic-provisioning&#34;&gt;1.2.3.2.2 File Storage 사용하기(CSI Driver 기반) - Dynamic Provisioning&lt;/h5&gt;&#xA;&lt;p&gt;앞선 Static Provisioning 방식으로 File Storage 서비스를 사용하는 경우, Persistent Volume 등록전에, File System과 Mount Target을 매번 만들고, Persistent Volume으로 등록하고, PVC를 요청하는 방식이었습니다. 그리고 Persistent Volume을 만들때 spec.csi.volumeHandle에 &amp;lt;FileSystemOCID&amp;gt;:&amp;lt;MountTargetIP&amp;gt;:&amp;lt;path&amp;gt; 형식으로 매번 지정해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5.3.3.3 FluentBit로 OKE 로그 전송하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/3.fluentbit-to-oci-opensearch/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/observability/application/oci-opensearch/3.fluentbit-to-oci-opensearch/</guid>
      <description>&lt;h5 id=&#34;15333-fluentbit로-oke-로그-전송하기&#34;&gt;1.5.3.3.3 FluentBit로 OKE 로그 전송하기&lt;/h5&gt;&#xA;&lt;p&gt;EFK 구성에서 ElasticSearch와 Kibana 대신 OpenSearch와 OpenSearch Dashboard를 사용합니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;fluentbit-설치&#34;&gt;FluentBit 설치&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;FluentBit 사이트의 권장에 따라 Helm Chart로 설치합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15.3 Resource Manager을 위한 Private Git 서버 구성</title>
      <link>https://thekoguryo.github.io/oci/chapter15/3/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter15/3/</guid>
      <description>&lt;h2 id=&#34;153-resource-manager을-위한-private-git-서버-구성&#34;&gt;15.3 Resource Manager을 위한 Private Git 서버 구성&lt;/h2&gt;&#xA;&lt;p&gt;Resource Manager는 테라폼 설정 저장소로 GitHub, GitLab을 지원합니다. 퍼블릭 인터넷으로 접근이 가능한 환경은 당연히 Resource Manager에서 연결이 가능합니다. 설정 저장소를 퍼블릭 서버가 아닌 내부 서버를 사용하고자 하는 경우, OCI 상에 Private 하게 설치된 서버는 다음 절차에 따라 연결할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.1.3 Token 기반 인증 Config File 설정</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/3/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/3/</guid>
      <description>&lt;h4 id=&#34;14113-토큰-기반-인증-config-file-설정&#34;&gt;14.1.1.3 토큰 기반 인증 Config File 설정&lt;/h4&gt;&#xA;&lt;p&gt;유저가 OCI CLI의 Config File 설정을 위해서 크게 API singing key 기반 인증과 토큰 기반 인증이 있습니다. (OCI에 배포된 인스턴스와 자원을 위해서는 다른 추가적인 방법도 있습니다.) 토큰 기반 인증은 웹브라우저를 통해 로그인하면 생성되는 세션 토큰을 이용하는 방식입니다. 토큰은 기본 TTL이 1시간으로 만료되기전에 갱신하여 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.3 Terraform OCI Provider 연결정보 구하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/3/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/3/</guid>
      <description>&lt;h3 id=&#34;1433-terraform-oci-provider-연결정보-구하기&#34;&gt;14.3.3 Terraform OCI Provider 연결정보 구하기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에 로그인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Tenancy OCID&lt;/p&gt;&#xA;&lt;p&gt;오른쪽 위 사용자 Profile에서 &lt;strong&gt;Tenancy&lt;/strong&gt; 클릭 후 Tenancy OCID 확인&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&lt;img class=&#34;img-fluid2&#34; src=&#34;../../1/1/images/image-20230510010202094.png&#34; alt=&#39;image-20230510010202094&#39; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&lt;img class=&#34;img-fluid2&#34; src=&#34;http://localhost:1313/oci/chapter14/1/1/images/image-20230510010434653.png&#34; alt=&#39;image-20230510010434653&#39; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;User OCID&lt;/p&gt;&#xA;&lt;p&gt;오른쪽 위 사용자 Profile에서 &lt;strong&gt;My profile&lt;/strong&gt; 클릭 후 사용자 OCID 확인&lt;/p&gt;</description>
    </item>
    <item>
      <title>13.3 Autoscaling 테스트</title>
      <link>https://thekoguryo.github.io/oci/chapter13/3/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter13/3/</guid>
      <description>&lt;h2 id=&#34;133-autoscaling-테스트&#34;&gt;13.3 Autoscaling 테스트&lt;/h2&gt;&#xA;&lt;h4 id=&#34;step-5-부하-발생에-따라-instance-pool내에-인스턴스-수-증가---scale-out-테스트&#34;&gt;Step #5: 부하 발생에 따라 Instance Pool내에 인스턴스 수 증가 - Scale Out 테스트&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instance Pool로 이동해서 현재 있는 Compute 인스턴스의 IP를 확인한 뒤 SSH로 접속합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.3 접근 제어를 위한 Export Option</title>
      <link>https://thekoguryo.github.io/oci/chapter08/3/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter08/3/</guid>
      <description>&lt;h2 id=&#34;83-접근-제어를-위한-export-option&#34;&gt;8.3 접근 제어를 위한 Export Option&lt;/h2&gt;&#xA;&lt;h4 id=&#34;export-option-설정을-통한-권한-제어&#34;&gt;Export Option 설정을 통한 권한 제어&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;앞서 만든 File System의 상세화면으로 이동합니다. 아래쪽에 그림과 같이 Export 리스트에서 생성된 Export를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.3 Object 권한 관리 - 사전인증</title>
      <link>https://thekoguryo.github.io/oci/chapter07/3/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/3/</guid>
      <description>&lt;h2 id=&#34;73-object-권한-관리---사전인증pre-authenticated-requests&#34;&gt;7.3 Object 권한 관리 - 사전인증(Pre-Authenticated Requests)&lt;/h2&gt;&#xA;&lt;p&gt;Pre-Authenticated Requests는 Bucket 또는 Object에 대해서 인증 없이 사용자가 접근할 수 있도록 설정하는 기능입니다. 지정된 기간까지 인증없이 Bucket 또는 Object에 접근할 수 있는 임시 공유 링크로 생성됩니다. 이 공유 링크를 통해 임의의 사용자가 접근할 수 있게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.7.3 백업을 다른 Region으로 복사하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/3/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/7/3/</guid>
      <description>&lt;h3 id=&#34;373-백업을-다른-region으로-복사하기&#34;&gt;3.7.3 백업을 다른 Region으로 복사하기&lt;/h3&gt;&#xA;&lt;p&gt;Block Volume의 백업은 단일 Region 내에서만 가능합니다. 장애 복구나 다른 용도로 다른 Region에서 필요한 경우에는 Region 간 복사 기능을 통해서 다른 Region으로 복사할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.3 SSH 접속을 위한 Key Pair 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/3/</guid>
      <description>&lt;h2 id=&#34;33-ssh-접속을-위한-key-pair-만들기&#34;&gt;3.3 SSH 접속을 위한 Key Pair 만들기&lt;/h2&gt;&#xA;&lt;p&gt;서버 인스턴스에 접근하기 위해 패스워드 대신 SSH Key Pair를 사용합니다. Key Pair는 개인키와 공개키로 구성되며, 개인키는 사용자가 사용자의 컴퓨터에 보관하며 공개키는 서버 인스턴스를 만들 때 등록해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.5.3 PEM &lt;-&gt; PPK 포맷 변경하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/5/3/</guid>
      <description>&lt;h3 id=&#34;353-pem---ppk-포맷-변경하기&#34;&gt;3.5.3 PEM &amp;lt;-&amp;gt; PPK 포맷 변경하기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;pemprivacy-enhanced-mail&#34;&gt;PEM(Privacy Enhanced Mail)&lt;/h4&gt;&#xA;&lt;p&gt;OCI 인스턴스에서 사용하는 Key Pair 포맷으로 앞선 문서 기준으로 ssh-keygen 명령을 통해 생성됨&lt;/p&gt;&#xA;&lt;h4 id=&#34;ppkputty-private-key&#34;&gt;PPK(PuTTY Private Key)&lt;/h4&gt;&#xA;&lt;p&gt;PuTTY에서 사용하는 키 포맷으로 PuTTY Key Generator를 통해 저장하면 기본적으로 생성되는 포맷&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.3 Block Volume에 연결하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/3/</guid>
      <description>&lt;h3 id=&#34;363-block-volume에-연결하기&#34;&gt;3.6.3 Block Volume에 연결하기&lt;/h3&gt;&#xA;&lt;p&gt;Block Volume 장착 후에 iSCSI 연결을 설정해야 합니다. iscsiadm 명령으로 실행되며 실행해야 할 명령은 장착된 Block Volume에서 제공하므로 복사 후 그대로 실행하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.8.3 Boot Volume으로 새 Instance 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/8/3/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/8/3/</guid>
      <description>&lt;h3 id=&#34;383-boot-volume으로-새-instance-생성하기&#34;&gt;3.8.3 Boot Volume으로 새 Instance 생성하기&lt;/h3&gt;&#xA;&lt;p&gt;아직 Instance에 사용 중이 아닌 Boot Volume을 이용하여 새 Compute Instance를 만들 수 있습니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;boot-volume으로-새-instance-생성하기&#34;&gt;Boot Volume으로 새 Instance 생성하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.3 OCI Console 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter02/3/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter02/3/</guid>
      <description>&lt;h2 id=&#34;23-oci-console-사용하기&#34;&gt;2.3 OCI Console 사용하기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;oci-console-ui&#34;&gt;OCI Console UI&lt;/h4&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230430174744016.png&#34; alt=&#39;image-20230430174744016&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230430174744016.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;h4 id=&#34;서비스-내비게이션&#34;&gt;서비스 내비게이션&lt;/h4&gt;&#xA;&lt;p&gt;왼쪽 위의 내비게이션 메뉴를 통해 서비스 및 자원에 대한 작업을 수행할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230430174902553.png&#34; alt=&#39;image-20230430174902553&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230430174902553.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;h4 id=&#34;region-관리&#34;&gt;Region 관리&lt;/h4&gt;&#xA;&lt;p&gt;현재 Region이 오른쪽 위에 표시되며, 여러 Region을 구독하여 사용하는 경우 해당 메뉴에서 다른 Region으로 전환할 수 있습니다. 또한 다른 Region에 구독하고 싶으면 하위 메뉴에 있는 Region 관리 메뉴를 통해 구독할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.3 HOST 기반 라우팅</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/3.nginx-ingress-host/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/3.nginx-ingress-host/</guid>
      <description>&lt;h5 id=&#34;12223-nginx-ingress-controller에서-host-기반-라우팅feat-oci-dns&#34;&gt;1.2.2.2.3 NGINX Ingress Controller에서 HOST 기반 라우팅(feat. OCI DNS)&lt;/h5&gt;&#xA;&lt;p&gt;Ingress Controller에서 도메인 네임을 기반하여 라우팅하기 위해 OCI DNS를 사용하는 방법을 확인합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4.1.3 Helm Chart Repository로 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/3.helm-chart/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/container-registry/ocir/3.helm-chart/</guid>
      <description>&lt;h4 id=&#34;1413-helm-chart-repository로-사용하기&#34;&gt;1.4.1.3 Helm Chart Repository로 사용하기&lt;/h4&gt;&#xA;&lt;p&gt;OCIR은 OCI(Open Container Initiative) Registry로 Helm v3.8.0에서 GA(General Availability)가 되어 공식적으로 지원하고 있습니다. 그 이상의 버전을 설치하여 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.3 Backend 웹서버 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/3/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/3/</guid>
      <description>&lt;h2 id=&#34;103-backend-웹서버-만들기&#34;&gt;10.3 Backend 웹서버 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;첫-번째-linux-instance-만들기&#34;&gt;첫 번째 Linux Instance 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instance를 생성할 Region을 확인하고 &lt;strong&gt;Create Instance&lt;/strong&gt; 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.3 그룹 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/3/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter06/3/</guid>
      <description>&lt;h2 id=&#34;63-그룹-만들기&#34;&gt;6.3 그룹 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;step-1-oci-그룹-추가&#34;&gt;Step 1. OCI 그룹 추가&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;관리자로 OCI 콘솔에 로그인합니다.&lt;/li&gt;&#xA;&lt;li&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Identity &amp;amp; Security&lt;/strong&gt; &amp;gt; &lt;strong&gt;Identity&lt;/strong&gt; &amp;gt; &lt;strong&gt;Groups&lt;/strong&gt; 항목으로 이동합니다.&lt;/li&gt;&#xA;&lt;li&gt;Cloud Account 생성후에 Administrators 그룹하나만 있는 것을 볼 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Create Group&lt;/strong&gt; 클릭&lt;/li&gt;&#xA;&lt;li&gt;그룹 정보 입력&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: &amp;ldquo;SandboxGroup&amp;rdquo; 입력&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: 설명 입력, 예) 이름과 동일하게 &amp;ldquo;SandboxGroup&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; 클릭&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;step-2-그룹group에-사용자-추가하기&#34;&gt;Step 2. 그룹(Group)에 사용자 추가하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;생성된 그룹을 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.3 Custom Security List 추가하기</title>
      <link>https://thekoguryo.github.io/oci/chapter05/3/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter05/3/</guid>
      <description>&lt;h2 id=&#34;53-방법-2-custom-security-list-추가하기&#34;&gt;5.3 방법 #2. Custom Security List 추가하기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual Private Networks&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;현재 사용중인 VCN(예시, oci-hol-vcn)을 클릭하여 VCN의 상세 정보로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3 Compartment</title>
      <link>https://thekoguryo.github.io/oci/chapter01/3/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/3/</guid>
      <description>&lt;h2 id=&#34;13-compartment&#34;&gt;1.3 Compartment&lt;/h2&gt;&#xA;&lt;p&gt;Compartment는 자원들을 쉽게 관리할 수 있도록 하는 개념으로 폴더 구조라고 생각하면 됩니다. Tenancy가 생성되면 최초로 Root Compartment 하나가 만들어져 있으며, 관리자가 Root Compartment 하위로 새로운 Compartment를 추가할 수 있습니다.&#xA;모든 OCI 자원들은 특정 Compartment에 속하게 되며 Compartment 단위로 사용자들의 접근 정책을 관리할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Limits</title>
      <link>https://thekoguryo.github.io/oci/chapter-appendix/3/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter-appendix/3/</guid>
      <description>&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. GOVERNANCE AND ADMINISTRATOR 하위에 Governance 항목에서 Service Limits을 클릭합니다.&lt;/p&gt;&#xA;&lt;p&gt;기본 Tenancy 정보와 Service Limits을 확인할 수 있습니다. Service Limits은 자원에 대한 사용한 가능한 쿼터입니다. 영업대표를 통해 구매시 산정된 쿼터가 설정되거나, Trial 또는 Oracle Store를 통한 직접 사용시는 Trial 또는 디폴트로 설정된 쿼터로 정해져 있습니다. 용량 증설이 필요하면 &lt;strong&gt;Request a service limit increase&lt;/strong&gt; 링크를 통해 요청할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3.4 Cluster Autoscaler (Cluster Add-on)</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/4.cluster-autoscaler-addon/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/autoscaling/4.cluster-autoscaler-addon/</guid>
      <description>&lt;h3 id=&#34;134-cluster-autoscaler를-cluster-add-on으로-설치하기&#34;&gt;1.3.4 Cluster Autoscaler를 Cluster Add-on으로 설치하기&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Kubernetes Cluster Autoscaler는&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리소스가 요구하는 자원이 있는 Pod에 대해, Pod에게 할당할 자원이 부족하여 Pod를 스케줄할 수 없는 경우, 해당 노드 풀에 Worker Node를 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;장시간 동안 Worker Node의 활용도가 낮고 Pod를 다른 노드에 배치할 수 있는 경우, 노드 풀에서 Worker Node를 제거합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Kubernetes Cluster Autoscaler는 매뉴얼하게 직접 설치하거나, Cluster Add-On으로 설치할 수 있습니다. 여기서는 &lt;em&gt;Cluster Add-On 설치&lt;/em&gt;하는 것을 기준합니다. Cluster Add-On은 Enhanced Cluster에서만 지원합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Console 접근을 위한 방화벽에 등록할 주소 찾기</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/access-console/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/access-console/</guid>
      <description>&lt;h2 id=&#34;console-접근을-위한-방화벽에-등록할-주소-찾기&#34;&gt;Console 접근을 위한 방화벽에 등록할 주소 찾기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI Documentation 기준으로 아래 주소에 대한 등록이 필요합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;방화벽, Proxy Server 등으로 외부 인터넷 접근을 통제하는 곳에서 Console 접근을 위해 아래 주소를 등록요청합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.3.4 Kubernetes Volume Clone 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/4.volume-clone/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/storage/4.volume-clone/</guid>
      <description>&lt;h4 id=&#34;1234-kubernetes-volume-clone-만들기&#34;&gt;1.2.3.4 Kubernetes Volume Clone 만들기&lt;/h4&gt;&#xA;&lt;p&gt;운영에 영향 없이 Volume 복제본을 만들어 테스트가 필요한 경우처럼, 사용중인 Persistent Volume을 복제하여 사용할 필요가 있을 때  사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;block-volume-clone-사용-전제조건&#34;&gt;Block Volume Clone 사용 전제조건&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OKE 클러스터 Control Plane의 쿠버네티스 버전은 &lt;em&gt;1.25&lt;/em&gt; 이상&lt;/li&gt;&#xA;&lt;li&gt;Worker Node가 AMD 또는 Arm 기반이어야 함&lt;/li&gt;&#xA;&lt;li&gt;Worker Node는 Oracle Linux 7 또는 Oracle Linux 8&lt;/li&gt;&#xA;&lt;li&gt;CSI volume plugin(여, oct-bv StorageClass)를 사용하여 이미 OCI Block Volume과 바인딩된 Persistent Volume이 있어야 함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h6 id=&#34;테스트-환경-준비&#34;&gt;테스트 환경 준비&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../block-volume/1.block-volume/&#34;&gt;1.2.3.1 Block Volume 사용하기&lt;/a&gt;에서 Block Volume을 사용하여, Persistent Volume을 구성한 예제를 그대로 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.10.4 Custom Scheduler 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/4.custom-scheduler/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/customize/4.custom-scheduler/</guid>
      <description>&lt;h3 id=&#34;1104-custom-scheduler-사용하기&#34;&gt;1.10.4 Custom Scheduler 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;OKE에서는 default-scheduler를 사용자에게 열어주고 있지 않습니다. 이런 상황에서 스케줄러를 확장하기 위해 쿠버네티스에서 제공하는 multiple schedulers 기능이 잘 동작하는 지 쿠버네티스 문서상의 내용을 따라 확인해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.4 Network Security Group 추가하기</title>
      <link>https://thekoguryo.github.io/oci/chapter05/4/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter05/4/</guid>
      <description>&lt;h2 id=&#34;54-방법-3-security-group-추가하기&#34;&gt;5.4 방법 #3. Security Group 추가하기&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual Private Networks&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;현재 사용중인 VCN(예시, oci-hol-vcn)을 클릭하여 VCN의 상세 정보로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.5.4 Oracle Linux 8 on OCI에 VNC 서버 설정하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/5/4/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/5/4/</guid>
      <description>&lt;h3 id=&#34;354-oracle-linux-8-on-oci에-vnc-서버-설정하기&#34;&gt;3.5.4 Oracle Linux 8 on OCI에 VNC 서버 설정하기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;vnc-서버-설정하기&#34;&gt;VNC 서버 설정하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GUI 환경을 설치합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf group install &lt;span class=&#34;s2&#34;&gt;&amp;#34;Server with GUI&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;VNC 서버를 설치합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install tigervnc-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;다음 파일을 수정하여 VNC를 사용할 유저를 추가합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.4 컨테이너에서 클라이언트 IP 얻기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/4.nginx-ingress-preserve-client-ip-lb/</link>
      <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/4.nginx-ingress-preserve-client-ip-lb/</guid>
      <description>&lt;h5 id=&#34;12224-oci-load-balancer-기반-nginx-ingress-controller에서-클라이언트-ip-얻기&#34;&gt;1.2.2.2.4 OCI Load Balancer 기반 NGINX Ingress Controller에서 클라이언트 IP 얻기&lt;/h5&gt;&#xA;&lt;p&gt;NGINX Ingress Controller를 사용할 때, 애플리케이션 Pod의 모니터링 등을 위해 애플리케이션 Pod에서 실 Client IP를 알아야 하거나, 로그에 실 Client IP가 출력될 필요가 있습니다. 하지만, 클라이언트의 요청은 NGINX Ingress Controller가 사용하는 OCI Load Balancer를 거쳐 오기 때문에, 실제 Client IP가 아닌, Load Balancer IP가 찍히게 됩니다. 여기서는 실제 Client IP를 얻기 위한 방법을 알아봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.1.1.4 API Key 기반 인증 Config File 설정</title>
      <link>https://thekoguryo.github.io/oci/chapter14/1/1/4/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/1/1/4/</guid>
      <description>&lt;h4 id=&#34;14114-api-key-기반-인증-config-file-설정&#34;&gt;14.1.1.4 API Key 기반 인증 Config File 설정&lt;/h4&gt;&#xA;&lt;p&gt;유저가 OCI CLI의 Config File 설정을 위해서 크게 API singing key 기반 인증과 토큰 기반 인증이 있습니다. (OCI에 배포된 인스턴스와 자원을 위해서는 다른 추가적인 방법도 있습니다.)  API singing key 기반 인증은 OCI 유저의 API Key에 사용할 Private Key, Public Key 키쌍을 생성하고 등록하여, 인증시 사용하는 방법입니다. OCI 유저 정보에 API Key가 등록된 상태에는 리프레쉬없이 지속해서 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.4 백업을 위한 스냅샷</title>
      <link>https://thekoguryo.github.io/oci/chapter08/4/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter08/4/</guid>
      <description>&lt;h2 id=&#34;84-백업을-위한-스냅샷&#34;&gt;8.4 백업을 위한 스냅샷&lt;/h2&gt;&#xA;&lt;p&gt;실행한 시간 기준으로 File System의 Snapshot을 만들 수 있습니다. 만들어진 Snapshot을 통해 파일 또는 전체를 복구할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>9.3 Custom Image Export/Import</title>
      <link>https://thekoguryo.github.io/oci/chapter09/3/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter09/3/</guid>
      <description>&lt;h2 id=&#34;93-custom-image-exportimport&#34;&gt;9.3 Custom Image Export/Import&lt;/h2&gt;&#xA;&lt;p&gt;Custom Image는 Import, Export 기능을 제공합니다. Custom Image는 해당 Region 내 Comparment에 속하게 되며, 다른 Compartment로 복사하거나, 다른 Region 내로 복사하기 위해서는 Object Storage로 Export 받은 다음, 원하는 곳에서 다시 Import 받으면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.4 Object 권한 관리 - Public Bucket</title>
      <link>https://thekoguryo.github.io/oci/chapter07/4/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/4/</guid>
      <description>&lt;h2 id=&#34;74-object-권한-관리---public-bucket&#34;&gt;7.4 Object 권한 관리 - Public Bucket&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;생성된 Bucket은 기본적으로 Private 상태입니다. 인증없이는 접근할 수 없는 상태입니다. Bucket을 Public으로 변경하게 되면 별도 인증 없이 접근할 수 있습니다. Pre-Authenticated Requests 처럼 임시 공유 링크가 생기는 것이 아니라, Bucket에 대한 접근이 허용되어 Object의 URL 경로로 바로 접근할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.7.4 정책 기반 Block Volume 백업하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/7/4/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/7/4/</guid>
      <description>&lt;h3 id=&#34;374-정책-기반-block-volume-백업하기&#34;&gt;3.7.4 정책 기반 Block Volume 백업하기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;volume-backup-policies&#34;&gt;Volume Backup Policies&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Bronze Policy&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;월단위 - 매월 첫날에 월간 증분 백업이 실행됩니다. 12개월 동안 유지됩니다.&lt;/li&gt;&#xA;&lt;li&gt;매단위 - 매년 1월 1일에 전체 백업이 실행됩니다. 5년간 유지됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Silver Policy&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.4 Policy 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/4/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter06/4/</guid>
      <description>&lt;h2 id=&#34;64-policy-만들기&#34;&gt;6.4 Policy 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;step-1-생성된-그룹을-위한-policy-추가&#34;&gt;Step 1. 생성된 그룹을 위한 Policy 추가&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Identity &amp;amp; Security&lt;/strong&gt; &amp;gt; &lt;strong&gt;Identity&lt;/strong&gt; &amp;gt; &lt;strong&gt;Policies&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;왼쪽 아래에 대상 Compartment를 &lt;strong&gt;Root Compartment&lt;/strong&gt;로 지정합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.4 Linux 인스턴스 생성하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/4/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/4/</guid>
      <description>&lt;h2 id=&#34;34-linux-인스턴스-생성하기&#34;&gt;3.4 Linux 인스턴스 생성하기&lt;/h2&gt;&#xA;&lt;div class=&#34;panel panel-caution&#34;&gt;&lt;div class=&#34;panel-header&#34;&gt;&#xA;&lt;h3&gt;&lt;i class=&#34;fas fa-life-saver&#34;&gt;&lt;/i&gt; 팁&lt;/h3&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;panel-body&#34;&gt;&#xA;&#xA;인스턴스를 생성하기 전에 자원이 충분한지 사전에 확인하는 것이 좋습니다. Service Limit 조회를 통해 가용한 자원이 있는지, 특히 가용한 CPU가 있는 지를 인스턴스 생성 전에 확인합니다.&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Compute&lt;/strong&gt; &amp;gt; &lt;strong&gt;Instances&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.4 Block Volume 포맷하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/4/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/4/</guid>
      <description>&lt;h3 id=&#34;364-block-volume-포맷하기&#34;&gt;3.6.4 Block Volume 포맷하기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Compute Instance에 SSH로 접속한 후 Block Volume을 포맷합니다. 파일 시스템 타입은 원하는 다른 것으로 변경하여 포맷하셔도 됩니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mkfs -t &amp;lt;fs type&amp;gt; /dev/sdb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;실행예시&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.4 최초 Cloud Account(Tenancy) 구조</title>
      <link>https://thekoguryo.github.io/oci/chapter02/4/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter02/4/</guid>
      <description>&lt;h2 id=&#34;24-최초-cloud-accounttenancy-구조&#34;&gt;2.4 최초 Cloud Account(Tenancy) 구조&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cloud Account 환경이 생성되면 OCI Native IAM에 의해서 사용자가 관리됩니다. OCI Classic의 유물로 기본적으로 Oracle Identity Cloud Service(IDCS)를 Identity Provider로 사용하게 Federation 되어 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;OCI의 Administrator는 OCI Tenancy의 모든 권한을 가집니다.&lt;/li&gt;&#xA;&lt;li&gt;IDCS의 OCI_Administrator 그룹은 OCI의 Administrator 그룹에 매핑되어 있습니다. OCI Console에 SSO로 로그인하면 실제는 OCI_Administrator에 속한 사용자이지만, OCI 상에서는 Administrator 그룹으로 처리되어 관련 권한을 가지게 됩니다.&lt;/li&gt;&#xA;&lt;li&gt;IDCS 상에 유저를 생성하면, 예) &lt;a href=&#34;mailto:neo@example.com&#34;&gt;neo@example.com&lt;/a&gt; 유저 생성되면 자동으로 동기화되어 OCI에 &lt;a href=&#34;mailto:oracleidentitycloudservice/neo@example.com&#34;&gt;oracleidentitycloudservice/neo@example.com&lt;/a&gt; 란 유저가 생성됩니다.&lt;/li&gt;&#xA;&lt;li&gt;OCI 자원에 대한 구획인 Compartment는 최초 Root Compartment만 있으며 필요시 추가 하면 됩니다.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/initial_tenancy_1.png&#34; alt=&#39;그림&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/initial_tenancy_1.png&#39;;&#34; /&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>14.2.4 Postman - OCI REST API 호출하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/4/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/2/4/</guid>
      <description>&lt;h3 id=&#34;1424-postman---oci-rest-api-호출하기&#34;&gt;14.2.4 Postman - OCI REST API 호출하기&lt;/h3&gt;&#xA;&lt;p&gt;가장 많이 사용하는 전문 REST 클라이언트 툴인 Postman을 사용하면 GUI를 통해 사용하기가 더 편리합니다. 아직 OCI Request Signature를 기본 지원하지 않아, Postman의 pre-script를 사용하여 OCI REST API를 호출하는 방법을 설명하고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.4 Terraform Configuration 실행하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/4/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/4/</guid>
      <description>&lt;h3 id=&#34;1434-terraform-configuration-실행하기&#34;&gt;14.3.4 Terraform Configuration 실행하기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;명령창실행&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Configuration 파일이 있는 경로로 이동&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;opc@bastion-host example_vcn&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;$ ls -la&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxrwxr-x. &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; opc opc  &lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; 09:50 .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxrwxr-x. &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; opc opc  &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; 09:46 ..&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-rw-r--. &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; opc opc &lt;span class=&#34;m&#34;&gt;359&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; 09:47 provider.tf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-rw-r--. &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; opc opc &lt;span class=&#34;m&#34;&gt;479&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; 09:50 terraform.tfvars&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-rw-r--. &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; opc opc &lt;span class=&#34;m&#34;&gt;284&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; 09:47 vcn.tf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;초기화 실행&lt;/p&gt;&#xA;&lt;p&gt;초기화를 수행하면 provider.tf에서 사용하는 OCI Provider를 자동으로 .terraform 폴더 밑으로 다운받습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.4 Load Balancer를 위한 Subnet 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/4/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/4/</guid>
      <description>&lt;h2 id=&#34;104-load-balancer를-위한-subnet-만들기&#34;&gt;10.4 Load Balancer를 위한 Subnet 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;subnet-만들기&#34;&gt;Subnet 만들기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual Cloud Networks&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;앞서 만든 VCN인 &lt;strong&gt;load-balancer-vcn&lt;/strong&gt; 클릭&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create Subnets&lt;/strong&gt; 클릭&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;생성정보 입력: 진한 글씨 항목만 입력하고 나머지는 기본값을 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.5 Apache HTTP Server 접속 테스트</title>
      <link>https://thekoguryo.github.io/oci/chapter05/5/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter05/5/</guid>
      <description>&lt;h2 id=&#34;55-apache-http-server-접속-테스트&#34;&gt;5.5 Apache HTTP Server 접속 테스트&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Apache HTTP Server가 구동하는 Compute Instance를 통해 접속을 테스트합니다. 그림처럼 잘 연결되는 것을 확인할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230504183019011.png&#34; alt=&#39;image-20230504183019011&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230504183019011.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>1.4 Virtual Cloud Network(VCN)</title>
      <link>https://thekoguryo.github.io/oci/chapter01/4/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/4/</guid>
      <description>&lt;h2 id=&#34;14-virtual-cloud-networkvcn&#34;&gt;1.4 Virtual Cloud Network(VCN)&lt;/h2&gt;&#xA;&lt;p&gt;OCI를 사용하게 되면 처음 해야 할 작업 중의 하나가 다른 클라우드 자원을 위해 Virtual Cloud Network(VCN)를 만드는 작업입니다. Oracle 데이터 센터에 서버 자원들이 사용할 가상의 네트워크 환경을 구성하는 것으로 네트워크 주소 할당, 방화벽, 라우팅 규칙, 게이트웨이 등을 하는 작업입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.2.5 Postman - OCI REST APIs 호출하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/2/5/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/2/5/</guid>
      <description>&lt;h3 id=&#34;1425-postman---oracle-cloud-infrastructure-rest-apis-호출하기&#34;&gt;14.2.5 Postman - Oracle Cloud Infrastructure REST APIs 호출하기&lt;/h3&gt;&#xA;&lt;p&gt;Oracle Cloud Infrastructure REST API는 REST Client를 사용해서 호출할 수 있습니다. 대표적인 많이 사용하는 클라이언트 툴로, Postman, Insomnia 등이 있지만, Postman의 경우, Oracle Developers 커뮤니티에서 Oracle Cloud Infrastructure (OCI) REST API 목록을 Postman에서 바로 사용할 수 있는 워크스페이스 형태로 사전 등록하여, 제공하고 있습니다. REST API들이 모두 등록되어 있고, 인증처리에 필요한 스크립트도 기본 설정되어 있어, 호출을 위한 인증정보만 업데이트 해주면 되기 때문에 사용하기 편리합니다.&#xA;그래서 여기서는 Postman에서 이를 활용하여, OCI REST API들을 호출하는 방법을 알아봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Compartment 문제해결</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/comartment/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/comartment/</guid>
      <description>&lt;h2 id=&#34;compartment-문제해결&#34;&gt;Compartment 문제해결&lt;/h2&gt;&#xA;&lt;h6 id=&#34;가-compartment-삭제시-특정-자원이-남아-있어-삭제가-되지-않는-경우&#34;&gt;#가 Compartment 삭제시 특정 자원이 남아 있어 삭제가 되지 않는 경우&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;삭제후 &lt;strong&gt;Compartment Details&lt;/strong&gt; &amp;gt; &lt;strong&gt;Work Requests&lt;/strong&gt;에서 Failed로 뜨는 경우 &lt;strong&gt;Information 아이콘&lt;/strong&gt;을 클릭하면, 이유를 확인할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.5 TLS termination - OCI LB 레벨</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/5.nginx-ingress-tls-termination-lb/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/5.nginx-ingress-tls-termination-lb/</guid>
      <description>&lt;h5 id=&#34;12225-nginx-ingress-controller에서-tls-terminationoci-lb-레벨&#34;&gt;1.2.2.2.5 NGINX Ingress Controller에서 TLS termination(OCI LB 레벨)&lt;/h5&gt;&#xA;&lt;h6 id=&#34;ssl-인증서를-secret으로-등록하기&#34;&gt;SSL 인증서를 secret으로 등록하기&lt;/h6&gt;&#xA;&lt;p&gt;유료 인증서도 등록절차는 동일하니, 여기서는 무료 인증서를 발급 받아 진행합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.5 Public Bucket을 통한 정적 웹사이트 호스팅</title>
      <link>https://thekoguryo.github.io/oci/chapter07/5/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/5/</guid>
      <description>&lt;h2 id=&#34;75-public-bucket을-통한-정적-웹사이트-호스팅&#34;&gt;7.5 Public Bucket을 통한 정적 웹사이트 호스팅&lt;/h2&gt;&#xA;&lt;p&gt;Public Bucket을 생성하면 URL 경로로 접근할 수 있다는 것을 이용하며 점을 이용하여 간단한 정적 웹사이트 호스팅을 해보도록 하겠습니다. Object Storage는 기본적으로 계층구조가 없는 일자 구조입니다. 폴더구조의 가진 웹페이지는 어떻게 처리할 수 있는지에 대해서 테스트 해 봅니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.5 Block Volume 마운트하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/5/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/5/</guid>
      <description>&lt;h3 id=&#34;365-block-volume-마운트하기&#34;&gt;3.6.5 Block Volume 마운트하기&lt;/h3&gt;&#xA;&lt;p&gt;OCI 문서에 따르면 root volume 이외 volume이 둘 이상일 경우 장치 이름으로 마운트 할 경우 서버 재기동 후 장치 이름과 실제 장치의 대응 되는 순서가 달라 질 수도 있다고 합니다. 2019년 1월 10일 기준 서버 재기동 후 장치 이름과 실제 장치의 대응 되는 순서를 보장하기 위해 Consistent Device Path 기능이 출시 되었습니다. 지원되지 않는 이미지 및 인스턴스에서는 전과 동일하게 &lt;strong&gt;Volume의 UUID를 기준으로 마운트&lt;/strong&gt; 방식을 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.5 다중 환경을 위한 workspace 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/5/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/5/</guid>
      <description>&lt;h3 id=&#34;1435-다중-환경을-위한-workspace-사용하기&#34;&gt;14.3.5 다중 환경을 위한 workspace 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;OCI는 여러 Region을 제공하고 있습니다. 필요에 따라 동일 자원을 여러 Region에 한꺼번에 만들어야 하는 경우가 있습니다. 하지만 앞서 실습에서 잠깐 보았겠지만, terraform 설정이 실행되면 기본으로 해당 폴더에 terraform.tfstate로 상태를 관리하게되어 동일 Terraform 설정을 그대로 사용할 경우 상태파일이 충돌나서 원하는 데로 동작하지 않게 됩니다. Terraform 설정 폴더 자체를 통채로 복사해서 대상 Region 별로 사용해도 되지만, 관리가 번거롭게 됩니다. 그래서 Terraform에서는 workspace만 개념을 제공하고, 기본적으로 default workspace를 사용하게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.5 Load Balancer 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter10/5/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/5/</guid>
      <description>&lt;h2 id=&#34;105-load-balancer-만들기&#34;&gt;10.5 Load Balancer 만들기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;load-balancer-생성&#34;&gt;Load Balancer 생성&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Load Balancers&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create Load Balancer&lt;/strong&gt; 클릭합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Load Balancer 를 타입으로 선정합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Load Balancer Type&lt;/strong&gt;: L7 로드밸런서로 HTTP Listener로 분배할때 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;Network Load Balancer Type: L4 로드밸런서로 일반 IP, Port로 분배할때 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230509131145882.png&#34; alt=&#39;image-20230509131145882&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230509131145882.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.5 Policy 개념 잡기</title>
      <link>https://thekoguryo.github.io/oci/chapter06/5/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter06/5/</guid>
      <description>&lt;h2 id=&#34;65-policy-개념-잡기&#34;&gt;6.5 Policy 개념 잡기&lt;/h2&gt;&#xA;&lt;h4 id=&#34;iam-policy&#34;&gt;IAM Policy&lt;/h4&gt;&#xA;&lt;p&gt;IAM Policy는 OCI 자원에 대한 접근 정책입니다. 하나의 정책은 일반적으로 사용자 그룹에 특정 Compartment에 속한 특정 타입의 자원에 대한 권한을 허용하는 것을 정의하는 것으로 생각하면 하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5 Bare Metal, Virtual Machine</title>
      <link>https://thekoguryo.github.io/oci/chapter01/5/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/5/</guid>
      <description>&lt;h2 id=&#34;15-bare-metal-virtual-machine&#34;&gt;1.5 Bare Metal, Virtual Machine&lt;/h2&gt;&#xA;&lt;p&gt;OCI는 Bare Metal과 Virtual Machine 인스턴스를 모두 제공하고 있습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bare Metal&lt;/strong&gt;: 물리적인 서버를 단일 사용자에게 전용으로 사용할 수 있는 환경을 제공합니다. 물리적인 서버의 자원을 직접사용하고, 전용으로 사용하기 때문에 서버자원을 성능을 100% 활용하여 높은 성능을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Virtual Machine&lt;/strong&gt;: 물리적인 서버 위의 가상화를 통해 컴퓨팅 환경을 제공합니다. Hypervisor에 의해 가상화된 레이어를 거치기 때문에 Bare Metal 보다는 상대적으로 낮은 성능을 제공합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Rancher Desktop 설정하기</title>
      <link>https://thekoguryo.github.io/oci/troubleshooting/rancher-desktop/</link>
      <pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/troubleshooting/rancher-desktop/</guid>
      <description>&lt;h2 id=&#34;rancher-desktop-설정하기&#34;&gt;Rancher Desktop 설정하기&lt;/h2&gt;&#xA;&lt;p&gt;Docker Desktop 라이선스 이슈로 다른 대체툴을 설치하는 경우가 있습니다. 여기서는 Rancher Desktop 사용하는 경우입니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;mac에서-사용하는-rancher-desktop에-http-proxy-설정하기&#34;&gt;#Mac에서 사용하는 Rancher Desktop에 HTTP Proxy 설정하기&lt;/h6&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사내망에서 Container Registry 접속을 위해 HTTP Proxy 설정이 필요한 경우&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.6 CloudBerry Explorer를 통한 파일 업로드</title>
      <link>https://thekoguryo.github.io/oci/chapter07/6/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/6/</guid>
      <description>&lt;h2 id=&#34;76-cloudberry-explorer를-통한-파일-업로드&#34;&gt;7.6 CloudBerry Explorer를 통한 파일 업로드&lt;/h2&gt;&#xA;&lt;p&gt;Object Storage는 자체 API를 제공합니다. 또한 Amazon S3 호환 API를 제공합니다. OCI CLI를 통해 다량, 대용량 파일을 업로드가 가능합니다. 여기서는 사용 가능한 GUI 툴 중인 CloudBerry Explorer를 사용해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.6 Block Volume 장착 해제하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/6/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/6/</guid>
      <description>&lt;h3 id=&#34;366-block-volume-장착-해제하기&#34;&gt;3.6.6 Block Volume 장착 해제하기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;언마운트-하기&#34;&gt;언마운트 하기&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Compute Instance에 SSH로 접속합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/etc/fstab 업데이트&lt;/p&gt;&#xA;&lt;p&gt;sudo vi /etc/fstab 명령을 수행하여 fstab 파일에서 언마운트할 Volume인 /mnt/vol1을 삭제합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.6 클라우드 서비스 제공업체(CSP) 간 제공 서비스 매핑</title>
      <link>https://thekoguryo.github.io/oci/chapter01/6/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter01/6/</guid>
      <description>&lt;h2 id=&#34;16-클라우드-서비스-제공업체cloud-service-provider-간-제공-서비스-매핑&#34;&gt;1.6 클라우드 서비스 제공업체(Cloud Service Provider) 간 제공 서비스 매핑&lt;/h2&gt;&#xA;&lt;p&gt;IaaS 기준으로 Oracle Cloud Infrastructure에서 제공하는 클라우드 서비스를 이해를 돕고자 타사 Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform의 서비스 이름과 매핑은 Oracle Cloud 사이트에서 확인할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.2.2.6 TLS Termination - Ingress 레벨</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/6.nginx-ingress-tls-termination-spec-tls-secret/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/6.nginx-ingress-tls-termination-spec-tls-secret/</guid>
      <description>&lt;h5 id=&#34;122263-nginx-ingress-controller에서-tls-terminationfeats-lets-encrypt&#34;&gt;1.2.2.2.6.3 NGINX Ingress Controller에서 TLS termination(feats. Let&amp;rsquo;s Encrypt)&lt;/h5&gt;&#xA;&lt;p&gt;Ingress Controller에서 외부 수신을 SSL로 하기 위한 설정을 확인합니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;nginx-ingress-controller-설치&#34;&gt;NGINX Ingress Controller 설치&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;kubectl 사용이 가능한  Cloud Shell 또는 작업환경에 접속합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.6 예시, list, count를 이용한 유저 만들기</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/6/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/6/</guid>
      <description>&lt;h3 id=&#34;1436-예시-list-count를-이용한-유저-만들기&#34;&gt;14.3.6 예시, list, count를 이용한 유저 만들기&lt;/h3&gt;&#xA;&lt;p&gt;자원을 만들다 보면 Array를 통해 동일한 자원을 여러개 만드는 경우가 있습니다. 실습환경을 구성하기위해 여러 유저를 만든다는 상황을 고려해 list, count를 통해 여러 유저를 한꺼번에 만드는 방법을 알아 보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.6 Load Balancer 연결 확인</title>
      <link>https://thekoguryo.github.io/oci/chapter10/6/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter10/6/</guid>
      <description>&lt;h2 id=&#34;106-load-balancer-연결-확인&#34;&gt;10.6 Load Balancer 연결 확인&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Networking&lt;/strong&gt; &amp;gt; &lt;strong&gt;Load Balancers&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;앞서 생성한 Load Balancer의 Public IP를 확인합니다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;img class=&#34;img-fluid1&#34; src=&#34;../images/image-20230509140004062.png&#34; alt=&#39;image-20230509140004062&#39; onerror=&#34;this.onerror=null;this.src=&#39;images\/image-20230509140004062.png&#39;;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;브라우저를 통해 LB의 Public IP로 접속합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.7 수명주기를 통한 Archive 설정하기</title>
      <link>https://thekoguryo.github.io/oci/chapter07/7/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter07/7/</guid>
      <description>&lt;h2 id=&#34;77-수명주기를-통한-archive-설정하기&#34;&gt;7.7 수명주기를 통한 Archive 설정하기&lt;/h2&gt;&#xA;&lt;p&gt;Object Storage의 사용 사례의 하나로 디스크 이미지 백업, 파일 백업 등의 용도로 많이 사용합니다. 최근 백업을 사용할 가능성이 높지만, 그 외에 백업을 사용할 가능성을 낮아지지만, 보관 기간 등이 장기간 보관해야 하는 경우가 많습니다. 보관 기간 동안 Storage 비용을 조금이라도 줄이고 싶은 요구 사항이 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6.7 Block Volume 삭제하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/7/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/7/</guid>
      <description>&lt;h3 id=&#34;367-block-volume-삭제하기&#34;&gt;3.6.7 Block Volume 삭제하기&lt;/h3&gt;&#xA;&lt;div class=&#34;panel panel-caution&#34;&gt;&lt;div class=&#34;panel-header&#34;&gt;&#xA;&lt;h3&gt;&lt;i class=&#34;fas fa-life-saver&#34;&gt;&lt;/i&gt; 주의사항&lt;/h3&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;panel-body&#34;&gt;&#xA;&#xA;Block Volume을 Terminate 하면 완전히 삭제됩니다. 복구할 수 없으니 이점 유의합니다.&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OCI 콘솔에서 내비게이션 메뉴를 엽니다. &lt;strong&gt;Storage&lt;/strong&gt;  &amp;gt; &lt;strong&gt;Block Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Block Volumes&lt;/strong&gt; 항목으로 이동합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2.4.1 Kubernetes 버전 업그레이드</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/management/1.supported-version-and-upgrade/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/management/1.supported-version-and-upgrade/</guid>
      <description>&lt;h4 id=&#34;1241-kubernetes-버전-업그레이드&#34;&gt;1.2.4.1 Kubernetes 버전 업그레이드&lt;/h4&gt;&#xA;&lt;h6 id=&#34;oke-지원-버전&#34;&gt;OKE 지원 버전&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;Kubernetes 지원 버전&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes 버전은 x.y.z로 표현되며, 각각 x는 메이저, y는 마이너, z는 패치 버전을 뜻하며, 오픈소스 Kubernetes도 현재 버전과 그 이전 2개 버전까지를 지원하고 있습니다. OKE 또한 OKE가 지원하는 최신버전 기준으로 그 이전 2개의 마이너 버전까지 지원하고 있습니다. 금일자 기준 지원하는 버전은 다음과 같습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.3.7 OCI Terraform 사용 예제</title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/7/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/7/</guid>
      <description>&lt;h3 id=&#34;1437-oci-terraform-사용-예제&#34;&gt;14.3.7 OCI Terraform 사용 예제&lt;/h3&gt;&#xA;&lt;p&gt;오라클에서 OCI Github에서 다양한 예제를 제공하고 있습니다. 다음 사이트를 참고하세요.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/oracle/terraform-provider-oci/tree/master/examples&#34;&gt;terraform-provider-oci/examples&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>3.6.8 Ultra High Performance 레벨 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/6/8/</link>
      <pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/6/8/</guid>
      <description>&lt;h3 id=&#34;368-ultra-high-performance-레벨-사용하기&#34;&gt;3.6.8 Ultra High Performance 레벨 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://thekoguryo.github.io/oci/chapter03/6/1/&#34;&gt;3.6.1 Block Volume 생성하기&lt;/a&gt; 설명한 것 처럼 Block Volume을 생성할 때 볼륨 성능(IOPS/GB)을 조절할 수 있습니다.  이 중에서 제일 높은 볼륨 성능을 사용하기 위해서는 추가적인 설정이 필요합니다. 여기서는 필요한 설정과 실제 성능을 확인해 보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.6.1 Secret Store로 OCI Vault 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/security/1.secret-store/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/security/1.secret-store/</guid>
      <description>&lt;h3 id=&#34;161-secret-store로-oci-vault-사용하기&#34;&gt;1.6.1 Secret Store로 OCI Vault 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;OKE에서는 Secret를 etcd에서 관리, 저장하며, 암호화 키를 통해 암호화해서 저장하고 있습니다. 더불어 Secret이 YAML상에 포함되어 사용되는 경우가 많은데, 이것이 보안상의 문제가 우려되는 경우, 외부 Secret 저장소를 사용하여 관리하고자 하는 요구사항이 있습니다. OKE에서는 OCI Secrets Store CSI Driver Provider를 통해 OCI Vault에서 Secret을 저장하고 사용하는 것을 지원하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cache with Redis is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20231017-cache-with-redis-is-now-available/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20231017-cache-with-redis-is-now-available/</guid>
      <description>이제 Cache with Redis를 통해 관리형 Redis 서비스를 제공합니다.</description>
    </item>
    <item>
      <title>Support for Kubernetes volume clones</title>
      <link>https://thekoguryo.github.io/release-notes/20231004-support-for-kubernetes-volume-clones/</link>
      <pubDate>Wed, 04 Oct 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20231004-support-for-kubernetes-volume-clones/</guid>
      <description>이제 CSI volume plugin은 Kubernetes 볼륨 복제를 지원합니다. 내부적으로는 OCI Block Volume 서비스의 복제 기능을 활용합니다.</description>
    </item>
    <item>
      <title>Support for Kubernetes volume snapshots</title>
      <link>https://thekoguryo.github.io/release-notes/20230620-support-for-kubernetes-volume-snapshots/</link>
      <pubDate>Tue, 20 Jun 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20230620-support-for-kubernetes-volume-snapshots/</guid>
      <description>CSI volume plugin에서 쿠버네티스 볼륨 스냅샷을 지원합니다. Block Volume을 사용하여 만든 Persistent Volume을 쿠버네티스 볼륨 스냅샷을 요청하면, OCI Block Volume Backup을 통해 스냅샷이 생성됩니다. 재해복구 관점에서 볼륨 스냅샷을 만들고, 복구시 사용할 수 있는 기능을 제공합니다.</description>
    </item>
    <item>
      <title>Support to store image pull secrets in OCI Vault</title>
      <link>https://thekoguryo.github.io/release-notes/20230509-support-to-store-image-pull-secrets-in-oci-vault/</link>
      <pubDate>Tue, 09 May 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20230509-support-to-store-image-pull-secrets-in-oci-vault/</guid>
      <description>마켓플레이스를 통해 Kubernetes Monitoring and Management 구성 툴을 제공합니다. Resource Manager를 통해 설치하면 OKE에서 수집된 로그, 메트릭을 OCI Log Analytics에서 모니터링하는 기능을 제공합니다.</description>
    </item>
    <item>
      <title>Support for service mesh and performance improvements when using the VCN-Native CNI plugin</title>
      <link>https://thekoguryo.github.io/release-notes/20230426-support-for-service-mesh-and-performance-improvements-when-using-the-vcn-native-cni-plugin/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20230426-support-for-service-mesh-and-performance-improvements-when-using-the-vcn-native-cni-plugin/</guid>
      <description>OCI VCN-Native Pod Networking CNI을 사용하는 경우, Pod가 VCN의 IP의 할당받아, 해당 IP로 직접 통신할 수 있습니다.</description>
    </item>
    <item>
      <title>3.9.1 Burstable Instances 사용하기</title>
      <link>https://thekoguryo.github.io/oci/chapter03/9/1.burstable-instances/</link>
      <pubDate>Mon, 24 Apr 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter03/9/1.burstable-instances/</guid>
      <description>&lt;h3 id=&#34;391-burstable-instances-사용하기&#34;&gt;3.9.1 Burstable Instances 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;Burstable Instance는 Baseline의 기본 CPU 성능을 제공하며, 일시적으로 사용량이 늘어날때에는 더 높은 성능을 제공하는 가상 머신 인스턴스 타입입니다. 비용은 지정한 Baseline OCPU를 기준으로 과금됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logging Analytics: Monitor and manage Kubernetes with our Marketplace app</title>
      <link>https://thekoguryo.github.io/release-notes/20230109-logging-analytics-monitor-and-manage-kubernetes/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20230109-logging-analytics-monitor-and-manage-kubernetes/</guid>
      <description>마켓플레이스를 통해 Kubernetes Monitoring and Management 구성 툴을 제공합니다. Resource Manager를 통해 설치하면 OKE에서 수집된 로그, 메트릭을 OCI Log Analytics에서 모니터링하는 기능을 제공합니다.</description>
    </item>
    <item>
      <title>Support for dynamically provisioning PVCs in File Storage service</title>
      <link>https://thekoguryo.github.io/release-notes/20221214-support-for-dynamically-provisioning-pvcs-in-file-storage-service/</link>
      <pubDate>Wed, 14 Dec 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20221214-support-for-dynamically-provisioning-pvcs-in-file-storage-service/</guid>
      <description>File Storage 서비스를 OKE에서 Persistent Volume으로 사용하는 경우 이제 Dynamic Provisioning을 지원합니다.</description>
    </item>
    <item>
      <title>Container Instances is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20221206-container-instances-is-now-available/</link>
      <pubDate>Tue, 06 Dec 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20221206-container-instances-is-now-available/</guid>
      <description>컨테이너를 간편하게 실할하여 사용할수 있는 Container Instances를 서비스로 제공합니다.</description>
    </item>
    <item>
      <title>ARM 기반 서버 성능 비교: OCI vs. AWS</title>
      <link>https://thekoguryo.github.io/blog/arm-based-server-performance/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/arm-based-server-performance/</guid>
      <description>&lt;h2 id=&#34;arm-기반-서버-성능-비교-oci-vs-aws&#34;&gt;ARM 기반 서버 성능 비교: OCI vs. AWS&lt;/h2&gt;&#xA;&lt;h6 id=&#34;oci-ampere-altra-a1&#34;&gt;OCI Ampere Altra A1&lt;/h6&gt;&#xA;&lt;p&gt;오라클은 2021년 5월부터 Arm 기반의 Ampere A1 Compute Shape을 가상 머신에서 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Release Notes - &lt;a href=&#34;https://docs.oracle.com/en-us/iaas/releasenotes/changes/be1f5b9b-70ce-42fb-9866-a8640b68fd41/&#34;&gt;Arm-based Ampere A1 Compute shape now available&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.oracle.com/kr/cloud/compute/arm/&#34;&gt;Ampere A1 Compute 소개 페이지&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h6 id=&#34;oci-ampere-a1-성능-측정-참고-문서&#34;&gt;OCI Ampere A1 성능 측정 참고 문서&lt;/h6&gt;&#xA;&lt;p&gt;최근 API Gateway인 &lt;a href=&#34;https://apisix.apache.org/&#34;&gt;Apache APISIX&lt;/a&gt; 블로그에서 클라우드 ARM 기반 서버들의 성능을 비교하였습니다. 해당 내용을 기반으로 OCI에서도 최대한 유사한 환경을 구성하여 성능 측정을 한번 해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Editor is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20220802-code-editor-is-now-available/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220802-code-editor-is-now-available/</guid>
      <description>오라클 클라우드 콘솔에서 코드 에디터를 제공합니다. Cloud Shell과 동일한 사용자 환경을 사용합니다.</description>
    </item>
    <item>
      <title>Cloud Shell now offers Private Access</title>
      <link>https://thekoguryo.github.io/release-notes/20220802-cloud-shell-now-offers-private-access/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220802-cloud-shell-now-offers-private-access/</guid>
      <description>Cloud Shell에서 Private IP를 가지는 자원에 대한 접근을 지원합니다.</description>
    </item>
    <item>
      <title>CloudShell now offers GraalVM Enterprise JDK 17 and Native Image</title>
      <link>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</link>
      <pubDate>Tue, 26 Jul 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</guid>
      <description>CloudShell에서 GraalVM Enterprise JDK 17을 제공합니다.</description>
    </item>
    <item>
      <title>Support for VCN-native pod networking</title>
      <link>https://thekoguryo.github.io/release-notes/20220712-support-for-vcn-native-pod-networking/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220712-support-for-vcn-native-pod-networking/</guid>
      <description>OCI VCN-Native Pod Networking CNI을 사용하는 경우, Pod가 VCN의 IP의 할당받아, 해당 IP로 직접 통신할 수 있습니다.</description>
    </item>
    <item>
      <title>Support for worker node deletion, along with new cordon and drain options</title>
      <link>https://thekoguryo.github.io/release-notes/20220628-support-for-worker-node-deletion-along-with-new-cordon-and-drain-options/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220628-support-for-worker-node-deletion-along-with-new-cordon-and-drain-options/</guid>
      <description>특정 Worker Node를 삭제하는 기능을 제공합니다.</description>
    </item>
    <item>
      <title>Private endpoints for Resource Manager</title>
      <link>https://thekoguryo.github.io/release-notes/20220608-private-endpoints-for-resource-manager/</link>
      <pubDate>Wed, 08 Jun 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220608-private-endpoints-for-resource-manager/</guid>
      <description>Resource Manager에서 Private Endpoint를 통해 인터넷을 거치지 않고, Private 환경에서 있는 자원에 대한 접근을 지원합니다.</description>
    </item>
    <item>
      <title>Support for OKE images as worker node base images</title>
      <link>https://thekoguryo.github.io/release-notes/20220601-support-for-oke-images-as-worker-node-base-images/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220601-support-for-oke-images-as-worker-node-base-images/</guid>
      <description>Worker Node의 베이스 이미지로 범용 이미지가 아닌 OKE 전용 이미지를 사용하므로 이전보다 더 빠르게 클러스터 생성 및 확장이 가능합니다.</description>
    </item>
    <item>
      <title>Support for fault domains in node pool placement configuration</title>
      <link>https://thekoguryo.github.io/release-notes/20220601-support-for-fault-domains-in-node-pool-placement-configuration/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220601-support-for-fault-domains-in-node-pool-placement-configuration/</guid>
      <description>Node Pool 생성시 Availability Domain을 설정시 Fault Domain을 사용자가 지정할 수 있습니다.</description>
    </item>
    <item>
      <title>Support for CSI metrics</title>
      <link>https://thekoguryo.github.io/release-notes/20220526-support-for-csi-metrics/</link>
      <pubDate>Thu, 26 May 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220526-support-for-csi-metrics/</guid>
      <description>Persistent Volume에 대한 용량에 대한 모니터링 지원을 추가적인 메트릭을 지원합니다.</description>
    </item>
    <item>
      <title>Support for Kubernetes version 1.23.4</title>
      <link>https://thekoguryo.github.io/release-notes/20220518-support-for-kubernetes-version-1.23.4/</link>
      <pubDate>Wed, 18 May 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220518-support-for-kubernetes-version-1.23.4/</guid>
      <description>쿠버네티스 지원 버전이 업데이트 되었습니다. 이제 1.23.4을 새롭게 지원합니다.</description>
    </item>
    <item>
      <title>Detect vulnerabilities from the DevOps build pipeline</title>
      <link>https://thekoguryo.github.io/release-notes/20220517-detect-vulnerabilities-from-the-devops-build-pipeline/</link>
      <pubDate>Wed, 25 May 2022 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220517-detect-vulnerabilities-from-the-devops-build-pipeline/</guid>
      <description>Application Dependency Management (ADM) 서비스와 연계하여 DevOps 빌드 파이프라인에서 라이브러리 패키지에 대한 취약점 검사기능을 제공합니다.</description>
    </item>
    <item>
      <title>New features for DevOps</title>
      <link>https://thekoguryo.github.io/release-notes/20220517-new-features-for-devops/</link>
      <pubDate>Tue, 17 May 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220517-new-features-for-devops/</guid>
      <description>OCI DevOps 서비스가 Bitbucket Cloud, Helm Chart, 취약점 검사 기능을 제공합니다.</description>
    </item>
    <item>
      <title>OCI Search Service with OpenSearch is now available</title>
      <link>https://thekoguryo.github.io/release-notes/20220510-oci-search-service-with-opensearch-is-now-available/</link>
      <pubDate>Tue, 10 May 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220510-oci-search-service-with-opensearch-is-now-available/</guid>
      <description>OpenSearch 기반의 관리형 서비스로 OCI Search 서비스가 출시되었습니다.</description>
    </item>
    <item>
      <title>Accelerate function start-ups using provisioned concurrency</title>
      <link>https://thekoguryo.github.io/release-notes/20220504-accelerate-function-start-ups-using-provisioned-concurrency/</link>
      <pubDate>Wed, 04 May 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220504-accelerate-function-start-ups-using-provisioned-concurrency/</guid>
      <description>함수 실행을 위한 초기 응답지연을 최소화하기 위해 항상 provisioned concurrency 만큼 가용 환경을 지원합니다.</description>
    </item>
    <item>
      <title>Support for PVC block volume performance levels</title>
      <link>https://thekoguryo.github.io/release-notes/20220411-support-for-pvc-block-volume-performance-levels/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220411-support-for-pvc-block-volume-performance-levels/</guid>
      <description>Persistent Volume으로 사용하는 Block Volume에 대해서 성능 레벨을 지정할 수 있게 되었습니다.</description>
    </item>
    <item>
      <title>DevOps now supports deployment to private Kubernetes API endpoints</title>
      <link>https://thekoguryo.github.io/release-notes/20220329-devops-now-supports-deployment-to-private-kubernetes-api-endpoints/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220329-devops-now-supports-deployment-to-private-kubernetes-api-endpoints/</guid>
      <description>DevOps 서비스가 프라이빗 쿠버네티스 API 엔드포인트를 지원합니다.</description>
    </item>
    <item>
      <title>DevOps adds Blue-Green and Canary deployment strategies</title>
      <link>https://thekoguryo.github.io/release-notes/20220329-devops-adds-blue-green-and-canary-deployment-strategies/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220329-devops-adds-blue-green-and-canary-deployment-strategies/</guid>
      <description>DevOps 서비스에서 Blue/Green 배포 전략, Canary 배포 전략을 새롭게 지원합니다.</description>
    </item>
    <item>
      <title>Support for Kubernetes version 1.22.5</title>
      <link>https://thekoguryo.github.io/release-notes/20220321-support-for-kubernetes-version-1.22.5/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220321-support-for-kubernetes-version-1.22.5/</guid>
      <description>쿠버네티스 지원 버전이 업데이트 되었습니다. 이제 1.22.5을 새롭게 지원합니다.</description>
    </item>
    <item>
      <title>Support for OCI Network Load Balancers</title>
      <link>https://thekoguryo.github.io/release-notes/20220315-support-for-oci-network-load-balancers/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:02 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220315-support-for-oci-network-load-balancers/</guid>
      <description>OKE에서 Service Type을 Load Balancer를 사용할때 이제는 OCI &lt;strong&gt;Network&lt;/strong&gt; Load Balancer을 추가적으로 지원합니다.</description>
    </item>
    <item>
      <title>Container image scanning using the Console</title>
      <link>https://thekoguryo.github.io/release-notes/20220315-container-image-scanning-using-the-console/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220315-container-image-scanning-using-the-console/</guid>
      <description>Oracle Cloud 콘솔에서 Vulnerability Scanning 서비스를 통해 컨테이너 이미지 스캐닝하여 취약점을 분석하는 기능을 지원합니다.</description>
    </item>
    <item>
      <title>Support for function invocation logs</title>
      <link>https://thekoguryo.github.io/release-notes/20220303-support-for-function-invocation-logs/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220303-support-for-function-invocation-logs/</guid>
      <description>서비스 중인 Function을 클라이언트가 호출을 로그 정보를 확인하는 기능을 지원합니다.</description>
    </item>
    <item>
      <title>Support for PVC block volume expansion</title>
      <link>https://thekoguryo.github.io/release-notes/20220228-support-for-pvc-block-volume-expansion/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220228-support-for-pvc-block-volume-expansion/</guid>
      <description>OKE에서 Block Volume을 Persistent Volume으로 사용하는 경우, 할당 받은 이후에도 사용 중인 볼륨의 크리를 확장하는 기능을 지원합니다.</description>
    </item>
    <item>
      <title>Support for 2 GB functions</title>
      <link>https://thekoguryo.github.io/release-notes/20220211-support-for-2gb-functions/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220211-support-for-2gb-functions/</guid>
      <description>Functions 서비스에서 하나의 함수에서 사용할 수 있는 최대 메모리를 2GB까지 지원합니다.</description>
    </item>
    <item>
      <title>1.7.1.1 Spring Boot 앱 배포 자동화하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/1.deploy-app-on-oke-using-devops/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/1.deploy-app-on-oke-using-devops/</guid>
      <description>&lt;h4 id=&#34;1711-devops-서비스를-이용한-spring-boot-앱을-oke에-배포-자동화하기&#34;&gt;1.7.1.1 DevOps 서비스를 이용한 Spring Boot 앱을 OKE에 배포 자동화하기&lt;/h4&gt;&#xA;&lt;h6 id=&#34;devops-서비스-사용을-위한-iam-policy-설정&#34;&gt;DevOps 서비스 사용을 위한 IAM Policy 설정&lt;/h6&gt;&#xA;&lt;p&gt;DevOps 서비스를 사용하기 위해서는 DevOps 자원들에 권한 설정이 필요합니다. 공식 문서를 참조하여 권한 설정을 위한 Dynamic Group 및 Group에 대한 Policy를 설정합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Let’s Encrypt로 무료 SSL 인증서 발급받기</title>
      <link>https://thekoguryo.github.io/blog/lets-encrypt-ssl-certificate/</link>
      <pubDate>Fri, 19 Jan 2024 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/lets-encrypt-ssl-certificate/</guid>
      <description>&lt;h2 id=&#34;lets-encrypt로-무료-ssl-인증서-발급받기&#34;&gt;Let’s Encrypt로 무료 SSL 인증서 발급받기&lt;/h2&gt;&#xA;&lt;p&gt;아래는 dns-manual-mode로 SSL 인증서를 발급하는 방법입니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;프로젝트 클론후 설치합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;본인 메일 주소로 변경하여 실행합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/acmesh-official/acme.sh.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ./acme.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./acme.sh --install -m my@example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;재접속하거나, 지금 세션에서 아래 명령을 실행합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>무료 SSL 인증서 발급받기</title>
      <link>https://thekoguryo.github.io/blog/free-ssl-certificate/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/free-ssl-certificate/</guid>
      <description>&lt;h2 id=&#34;ssl-for-frees에서-무료-ssl-인증서-발급받기&#34;&gt;SSL For Frees에서 무료 SSL 인증서 발급받기&lt;/h2&gt;&#xA;&lt;p&gt;다른 글에서 Let&amp;rsquo;s encrypt로 인증서를 툴을 통해 자동으로 발급받는 내용을 확인했습니다. 여기서는 다른 사람에 SSL Certificate을 발급받은 것을 사용할 때를 가정한 테스트하기 위한 예비단계로 SSL Certificate을 발급 받는 과정을 진행해 보겠습니다. 테스트이므로 무료 인증서를 발급 받을 수 있는 사이트 중에 하나인 &lt;a href=&#34;https://www.sslforfree.com/&#34;&gt;SSL For Free&lt;/a&gt;을 사용하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7.1.2 Blue/Green 배포 전략으로 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/2.bluegreen-stragtegy/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/2.bluegreen-stragtegy/</guid>
      <description>&lt;h2 id=&#34;1712-devops-서비스의-bluegreen-배포-전략으로-배포하기&#34;&gt;1.7.1.2 DevOps 서비스의 Blue/Green 배포 전략으로 배포하기&lt;/h2&gt;&#xA;&lt;h6 id=&#34;devops-서비스를-통한-cicd-배포-자동화-하기&#34;&gt;DevOps 서비스를 통한 CI/CD 배포 자동화 하기&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;사전 준비 사항&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DevOps 서비스는 NGINX Ingress Controller를 사용하여, Blue/Green 배포를 지원합니다. 먼저 &lt;a href=&#34;https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/fundamentals/ingress/nginx-ingress/lb/1.install-nginx-ingress-controller/&#34;&gt;1.2.2.2.1 NGINX Ingress Controller 설치하기&lt;/a&gt;을 참조하여 NGINX Ingress Controller를 미리 설치합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;DevOps 프로젝트 만들기&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle Linux 8에 Visual Studio Code 설치하기</title>
      <link>https://thekoguryo.github.io/blog/install-vscode-on-oracle-linux-8/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/install-vscode-on-oracle-linux-8/</guid>
      <description>&lt;h2 id=&#34;oracle-linux-8에-visual-studio-code-설치하기&#34;&gt;Oracle Linux 8에 Visual Studio Code 설치하기&lt;/h2&gt;&#xA;&lt;p&gt;Oracle Linux 8에 GUI 환경이 구성되지 않은 경우 &lt;a href=&#34;https://thekoguryo.github.io/oci/chapter03/5/4/&#34;&gt;3.5.4 Oracle Linux 8 on OCI에 VNC 서버 설정하기&lt;/a&gt;을 참조하여 먼저 구성후 진행합니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;설치를 위해 루트 유저로 yum repo를 추가합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7.1.3 Canary 배포 전략으로 배포하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/3.canary-stragtegy/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/3.canary-stragtegy/</guid>
      <description>&lt;h4 id=&#34;1713-devops-서비스의-canary-배포-전략으로-배포하기&#34;&gt;1.7.1.3 DevOps 서비스의 Canary 배포 전략으로 배포하기&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../2.bluegreen-stragtegy&#34;&gt;1.7.1.2 DevOps 서비스의 Blue/Green 배포 전략으로 배포하기&lt;/a&gt;에서 만든 Code Repository, Build Pipeline, Trigger 등을 그대로 사용합니다.&lt;/p&gt;&#xA;&lt;p&gt;여기서는 배포전략으로 변경이 발생하는 Deployment Pipeline만 추가로 새로 만듭니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7.1.4 Helm Chart로 배포 자동화하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/4.deploy-app-with-helm-chart/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/4.deploy-app-with-helm-chart/</guid>
      <description>&lt;h4 id=&#34;1714-devops-서비스를-통해-helm-chart로-배포-자동화하기&#34;&gt;1.7.1.4 DevOps 서비스를 통해 Helm Chart로 배포 자동화하기&lt;/h4&gt;&#xA;&lt;h6 id=&#34;devops-프로젝트-만들기&#34;&gt;DevOps 프로젝트 만들기&lt;/h6&gt;&#xA;&lt;p&gt;이전에 생성한 프로젝트를 그대로 사용하거나, 새롭게 프로젝트를 만듭니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;code-repository를-사용하여-애플리케이션-코드-관리하기&#34;&gt;Code Repository를 사용하여 애플리케이션 코드 관리하기&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;코드 저장소 생성을 위해 왼쪽 메뉴에서 &lt;strong&gt;Code Repositories&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>다른 Cloud Account의 Identity Domain를 인증서버 IdP로 추가하기</title>
      <link>https://thekoguryo.github.io/blog/add-identity-domain-as-idp/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/add-identity-domain-as-idp/</guid>
      <description>&lt;h2 id=&#34;다른-cloud-account의-identity-domain를-인증서버-idp로-추가하기&#34;&gt;다른 Cloud Account의 Identity Domain를 인증서버 IdP로 추가하기&lt;/h2&gt;&#xA;&lt;p&gt;다른 Identity Domain을 인증서버 등록할 수 있습니다. 여기서는 명확한 확인을 위해 2개의 OCI Cloud Account간에 하나가 다른 Cloud Account의 Identity Domain을 인증서버로 등록해서 사용하는 방법을 확인해 봅니다. 기본 생성된 Identity Domain은 동일한 구조로 연동이 간편합니다. 여기서는 Default Domain을 기준으로 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7.1.5 빌드시 패키지 취약점 검사하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/5.detect-vulnerabilities-from-build-pipeline/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/oke-managed-nodes/cicd/devops/5.detect-vulnerabilities-from-build-pipeline/</guid>
      <description>&lt;h4 id=&#34;1715-devops-서비스의-빌드시-패키지-취약점-검사하기&#34;&gt;1.7.1.5 DevOps 서비스의 빌드시 패키지 취약점 검사하기&lt;/h4&gt;&#xA;&lt;h6 id=&#34;취약점-검사를-위한-소스-코드-스캐닝&#34;&gt;취약점 검사를 위한 소스 코드 스캐닝&lt;/h6&gt;&#xA;&lt;p&gt;Application Dependency Management (ADM) 서비스는 OCI DevOps 빌드 파이프라인 내에서 소스코드 빌드에 사용되는 라이브러리 패키지에 대한 취약점 검사하는 기능을 제공합니다. 빌드 스펙상에서 취약점 검사를 위한 VulnerabilityAudit 유형을 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Identity Domain에서 MS Active Directory를 인증서버 IdP로 추가하기</title>
      <link>https://thekoguryo.github.io/blog/add-active-directory-as-idp/</link>
      <pubDate>Fri, 21 Jun 2024 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/add-active-directory-as-idp/</guid>
      <description>&lt;h2 id=&#34;identity-domain에서-ms-active-directory를-인증서버-idp로-추가하기&#34;&gt;Identity Domain에서 MS Active Directory를 인증서버 IdP로 추가하기&lt;/h2&gt;&#xA;&lt;h6 id=&#34;active-directory-설치하기&#34;&gt;Active Directory 설치하기&lt;/h6&gt;&#xA;&lt;p&gt;&lt;strong&gt;Window Server VM 만들기&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;테스트용 Active Directory를 OCI에 설치합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCI Console 로그인을 위한 MFA 설정하기</title>
      <link>https://thekoguryo.github.io/blog/mfa-settings/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/mfa-settings/</guid>
      <description>&lt;h2 id=&#34;oci-console-로그인을-위한-mfa-설정하기&#34;&gt;OCI Console 로그인을 위한 MFA 설정하기&lt;/h2&gt;&#xA;&lt;p&gt;오라클 블로그 &lt;a href=&#34;https://blogs.oracle.com/cloudsecurity/post/oracle-multifactor-authentication-cloud-signin&#34;&gt;Oracle further reduces your attack surface by requiring multifactor authentication at cloud sign-in&lt;/a&gt; 글에서 언급하듯 2023년 연말부터 신규 테넌시에는 MFA를 기본으로  사용하고 있고, 지금은 기존 테넌시에도 적용되어, 이제 모든 테넌시에서 기본으로 사용하고 있습니다. 기본 MFA 인증 도구로 Mobile App과 Fast ID Online (FIDO)를 지원하고 있습니다. 하라고 해서 하긴 해야 겠는데, 어떤 도구를 사용하는 것을 선호하시나요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI gpt-oss를 GPU기반 OCI Compute VM, Oracle 23ai로 구성하기</title>
      <link>https://thekoguryo.github.io/blog/gpt-oss-on-oci-v2/</link>
      <pubDate>Fri, 29 Aug 2025 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/gpt-oss-on-oci-v2/</guid>
      <description>&lt;h2 id=&#34;openai-gpt-oss를-gpu기반-oci-compute-vm-oracle-23ai로-구성하기&#34;&gt;OpenAI gpt-oss를 GPU기반 OCI Compute VM, Oracle 23ai로 구성하기&lt;/h2&gt;&#xA;&lt;p&gt;OpenAI가 8월 5일에 &lt;a href=&#34;https://openai.com/ko-KR/index/introducing-gpt-oss/&#34;&gt;오픈 웨이트 추론 모델 2가지를 출시&lt;/a&gt; 하였습니다. 두 모델을 아래와 같이 설명하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI gpt-oss를 GPU기반 OCI Compute VM으로 구성하기</title>
      <link>https://thekoguryo.github.io/blog/gpt-oss-on-oci/</link>
      <pubDate>Fri, 08 Aug 2025 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/gpt-oss-on-oci/</guid>
      <description>&lt;h2 id=&#34;openai-gpt-oss를-gpu기반-oci-compute-vm으로-구성하기&#34;&gt;OpenAI gpt-oss를 GPU기반 OCI Compute VM으로 구성하기&lt;/h2&gt;&#xA;&lt;p&gt;OpenAI가 8월 5일에 &lt;a href=&#34;https://openai.com/ko-KR/index/introducing-gpt-oss/&#34;&gt;오픈 웨이트 추론 모델 2가지를 출시&lt;/a&gt; 하였습니다. 두 모델을 아래와 같이 설명하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCI에 레드햇 리눅스 사용하기</title>
      <link>https://thekoguryo.github.io/blog/rhel-on-oci/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/blog/rhel-on-oci/</guid>
      <description>&lt;h2 id=&#34;oci에-레드햇-리눅스-사용하기&#34;&gt;OCI에 레드햇 리눅스 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;지난 2023년 1월에 오라클 블로그에 올라온 &lt;a href=&#34;https://blogs.oracle.com/cloud-infrastructure/post/red-hat-enterprise-linux-supported-oci&#34;&gt;RHEL runs on OCI supported by Oracle and Red Hat&lt;/a&gt; 처럼 OCI에서 레드햇 리눅스를 지원합니다. 다만 Bring Your Own Subscription (BYOS) 모델만 지원하기 때문에, 레드햇에서 관련 라이센스 구독을 해야 하며, OCI를 통한 온디맨드 라이선스 취득은 지원하지 않습니다. OCI에서는 인프라에 대한 비용만 지불합니다. 설치 이미지 또한 레드햇 사이트에 다운로드 받아 사용해야 합니다. 그래서 Compute 인스턴스 생성시 OS를 Red Hat으로 선택하면, 아래와 같이 다른 OS 처럼 버전을 선택하는 것이 아닌, 이미지 등록 절차를 따로 설명하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://thekoguryo.github.io/oci/chapter14/3/8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oci/chapter14/3/8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/terraformUsingObjectStore.htm#http&#34;&gt;https://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/terraformUsingObjectStore.htm#http&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Bucket 생성&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;tf-example-tfstate&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;PAR(Pre-Authenticated Request) 생성&#xA;=&amp;gt; 근데 PAR URL로 접근해야 하면, 이건 인터넷에서 인증 없이 접근됨. Object Storage가 Private Bucket이라 하더라도 해당 PAR URL로는 인증없이 접근됨&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;par-bucket-tf-example-tfstate&#xA;Permit object reads and writes&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search</title>
      <link>https://thekoguryo.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
