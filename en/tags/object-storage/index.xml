<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>object storage on TheKoguryo&#39;s Tech Blog</title>
    <link>https://thekoguryo.github.io/en/tags/object-storage/</link>
    <description>Recent content in object storage on TheKoguryo&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 18 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/en/tags/object-storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>14.1.2.1 Setting IAM Policy for Object Storage</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/1/2/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/1/2/1/</guid>
      <description>14.1.2.1 IAM Policy Settings for Object Storage Policy setting for Object Storage IAM Policy is an access policy for OCI resources. A policy can generally be thought of as defining what grants a group of users permission to a specific type of resource belonging to a specific compartment.
Object Storage, Archive Storage, and Data Transfer Reference
https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/objectstoragepolicyreference.htm example
Object list search
Allow group &amp;lt;group_name&amp;gt; to inspect objects in compartment &amp;lt;compartment_name&amp;gt; Reading Object</description>
    </item>
    
    <item>
      <title>7.1 Creating a Bucket</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/1/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/1/</guid>
      <description>7.1 Creating Buckets Open the navigation menu in the OCI console. Go to Storage &amp;raquo; Object Storage &amp;amp; Archive Storage &amp;raquo; Buckets.
Select the compartment in which to create a bucket.
Open the navigation menu in the OCI console. Go to [Core Infrastructure] &amp;raquo; [Object Storage] &amp;raquo; [Storage]
Click Create Bucket.
Enter creation information
Bucket Name: Enter the name of the bucket to be created, ex) &amp;ldquo;ExampleBucket&amp;rdquo; Default Storage Tier: Standard: It is used to store frequently used data quickly with standard object storage.</description>
    </item>
    
    <item>
      <title>14.1.2.2 File Upload via CLI</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/1/2/2/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/1/2/2/</guid>
      <description>14.1.2.2 File Upload via CLI Some of the pages below are summarized. Please refer to the following link for full details. https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.4.2/oci_cli_docs/cmdref/os/object/put.html Query the Object Storage Namespace. oci os ns get Search the list of objects on the bucket oci os object list -ns &amp;lt;object_storage_namespace&amp;gt; -bn &amp;lt;bucket_name&amp;gt; Examples of execution PS D:\&amp;gt; oci os ns get { &amp;#34;data&amp;#34;: &amp;#34;cnzdbcmqu9s8&amp;#34; } PS D:\&amp;gt; oci os object list -ns cnzdbcmqu9s8 -bn</description>
    </item>
    
    <item>
      <title>7.2 Uploading Files to Bucket</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/2/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/2/</guid>
      <description>7.2 Uploading Files to Bucket Object Storage supports up to 50 GB per single file. Based on the message of the OCI Console, you can only upload up to 2 GiB. Files larger than that can be uploaded via the SDK or API.
Upload file to Bucket from OCI Console Click on the Bucket name to view details.
Click Upload.
When the dialog box appears, you can drag and drop the file or upload it through the browser file upload function.</description>
    </item>
    
    <item>
      <title>7.3 Object Permission Management - Pre-authentication</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/3/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/3/</guid>
      <description>7.3 Object Permission Management - Pre-Authenticated Requests Pre-Authenticated Requests is a function that allows users to access buckets or objects without authentication. It is created as a temporary shared link that allows you to access the Bucket or Object without authentication until the specified period. This shared link will make it accessible to any user.
Access to Object URL In the Object Details screen, check the URL path of the object.</description>
    </item>
    
    <item>
      <title>7.4 Object Rights Management - Public Bucket</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/4/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/4/</guid>
      <description>7.4 Object Rights Management - Public Bucket The created Bucket is in Private state by default. Without authentication, access is not possible. If you change the Bucket to Public, you can access it without additional authentication. As with Pre-Authenticated Requests, a temporary shared link is not created, but access to the Bucket is allowed, allowing direct access to the object&amp;rsquo;s URL path.
Go to the detailed information screen of Bucket. You can check that Visibility is Private.</description>
    </item>
    
    <item>
      <title>7.5 Hosting Static Websites with Public Bucket</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/5/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/5/</guid>
      <description>7.5 Static Website Hosting via Public Bucket If we create a public bucket, we will use that it can be accessed by a URL path, and we will try to host a simple static website using dots. Object Storage is basically a date structure without a hierarchical structure. Let&amp;rsquo;s test how to handle web pages with folder structure
Constraints As of the current version, Public Bucket can be used for file link sharing, etc.</description>
    </item>
    
    <item>
      <title>7.6 Uploading Files via CloudBerry Explorer</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/6/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/6/</guid>
      <description>7.6 Uploading Files via CloudBerry Explorer Object Storage provides its own API. It also provides an Amazon S3-compatible API. It is possible to upload large and large files through OCI CLI. Here we will try CloudBerry Explorer, which is a GUI tool available.
Upload files via CloudBerry Explorer Object Storage provides its own API. It also provides an Amazon S3-compatible API, so you can use existing clients for S3 as it is.</description>
    </item>
    
    <item>
      <title>7.7 Setting up an Archive via Lifecycle</title>
      <link>https://thekoguryo.github.io/en/oci/chapter07/7/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter07/7/</guid>
      <description>7.7 Setting up archives through lifecycle As one of the use cases of Object Storage, it is widely used for disk image backup and file backup. You are more likely to use a recent backup, but you are less likely to use a backup otherwise, but you often need to keep it for a long period of time, for example. You have a requirement that you want to reduce your Storage costs even a little bit during the retention period.</description>
    </item>
    
  </channel>
</rss>
