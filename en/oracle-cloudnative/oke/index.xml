<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1. Using Managed Kubernetes OKE on TheKoguryo&#39;s Tech Blog</title>
    <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/</link>
    <description>Recent content in 1. Using Managed Kubernetes OKE on TheKoguryo&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 07 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/en/oracle-cloudnative/oke/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 Introduction to Oracle Container Engine for Kubernetes (OKE)</title>
      <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/1.oke/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oracle-cloudnative/oke/1.oke/</guid>
      <description>1.1 Introduction to Oracle Container Engine for Kubernetes (OKE) Oracle Container Engine for Kubernetes is a managed Kubernetes service provided by OCI. We call it OKE for short and we are using a CNCF certified version of Kubernetes.
When you create a cluster with the Quick Start version, a Kubernetes cluster with the following structure is created using OCI resources.
Control Plane Nodes:
In Kubernetes, the Control Plane is an area managed by OCI and is not directly exposed to users.</description>
    </item>
    
    <item>
      <title>1.2 Creating an OKE Cluster</title>
      <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/2.install-quick-oke-cluster/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oracle-cloudnative/oke/2.install-quick-oke-cluster/</guid>
      <description>1.2 Creating an OKE Cluster Create a cluster in Quick mode As the first step to create the OKE cluster, a custom environment such as a separate OKE user and VCN will be used in the real environment, but as the first step to understand OKE, install it in Quick mode through the Administrator user.
Log in to the OCI console.
Go to Developer Services &amp;gt; Containers &amp;amp; Artifacts &amp;gt; Kubernetes Clusters (OKE) from the top left hamburger menu.</description>
    </item>
    
    <item>
      <title>1.4 Deploying Apps and Using Load Balancer</title>
      <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/4.deploy-docker-hub-image-with-lb/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oracle-cloudnative/oke/4.deploy-docker-hub-image-with-lb/</guid>
      <description>1.4 Deploying an App and Using a Load Balancer Testing Docker Hub images Try deploying the image to the OKE cluster by pulling the image to the most common form, Public Container Registry.
kubectl create deployment nginx-docker-hub --image=nginx:latest If you check the distribution result, you can see that it has been deployed normally.
oke_admin@cloudshell:~ (ap-chuncheon-1)$ kubectl create deployment nginx-docker-hub --image=nginx:latest deployment.apps/nginx-docker-hub created oke_admin@cloudshell:~ (ap-chuncheon-1)$ kubectl get all NAME READY STATUS RESTARTS AGE pod/nginx-docker-hub-78b9999646-xgtjp 1/1 Running 0 17s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/kubernetes ClusterIP 10.</description>
    </item>
    
    <item>
      <title>1.5 Using OCIR Images</title>
      <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/5.deploy-ocir-image/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oracle-cloudnative/oke/5.deploy-ocir-image/</guid>
      <description>1.5 Deploying the app using the OCIR image Register image to OCIR Oracle Cloud Infrastructure Registry (OCIR) is a managed container registry provided by Oracle that supports the Docker V2 API and is an Open Container Initiate compliant container registry. You can push and pull images through the docker cli and use them in a Kubernetes cluster.
To use an image for OCIR, registration is required first, and try to register the nginx image used in the previous example by following the procedure below.</description>
    </item>
    
    <item>
      <title>1.7 Upgrading the Kubernetes Version</title>
      <link>https://thekoguryo.github.io/en/oracle-cloudnative/oke/7.supported-version-and-upgrade/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oracle-cloudnative/oke/7.supported-version-and-upgrade/</guid>
      <description>1.7 Kubernetes Supported Versions and Upgrades Kubernetes supported version Kubernetes version is expressed as x.y.z, where x stands for major, y for minor, and z for patch version, respectively. Open source Kubernetes also supports the current version and up to two previous versions. OKE also supports the latest version supported by OKE, up to two previous minor versions. The supported versions as of today are as follows.
1.20.11 1.19.15 1.18.10 We support the previous version only for 30 days after the new version is released.</description>
    </item>
    
  </channel>
</rss>
