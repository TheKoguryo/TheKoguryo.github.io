<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. Using OCI DevOps Services as CI/CD on TheKoguryo's Tech Blog</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/</link><description>Recent content in 3. Using OCI DevOps Services as CI/CD on TheKoguryo's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 23 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/en/oracle-cloudnative/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>3.1 Automating deployment of Spring Boot app to OKE via DevOps service</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/1.deploy-app-on-oke-using-devops/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/devops/1.deploy-app-on-oke-using-devops/</guid><description>3.1 Automating deployment of Spring Boot app to OKE via DevOps service Set up IAM policy to use DevOps service To use DevOps services, you need to set permissions on DevOps resources. Refer to the official documentation to set the policy for Dynamic Group and Group for permission setting.
https://docs.oracle.com/en-us/iaas/Content/devops/using/devops_iampolicies.htm#build_policies The Dynamic Group and Policy below are based on the examples in the above document and may be subject to some changes depending on requirements.</description></item><item><title>3.2 Deploying with a Blue/Green Deployment Strategy for DevOps Services</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/2.bluegreen-stragtegy/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/devops/2.bluegreen-stragtegy/</guid><description>3.2 Deploying with a Blue/Green Deployment Strategy for DevOps Services Automating CI/CD deployment through DevOps service Prerequisites Refer to 4.1.1 Installing NGINX Ingress Controller to install Nginx Ingress Controller in advance. Create a DevOps project Use the previously created project as it is, or create a new one.
Automating application deployment Use Code Repository to Manage Application Code As a sample, we will create and test our pre-made Nginx-based web app.</description></item><item><title>3.3 Deploying as a Canary Deployment Strategy for DevOps Services</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/3.canary-stragtegy/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/devops/3.canary-stragtegy/</guid><description>3.3 Deploying as a canary deployment strategy for DevOps services Use the Code Repository, Build Pipeline, Trigger, etc. created in 2.2 Deploying with Blue/Green Deployment Strategy of DevOps Service.
In this case, we will create a new Deployment Pipeline with only the deployment strategy where changes occur.
And change the Deployment Pipeline called in the last step of the Build Pipeline from the old Blue/Green to the Canary Deployment Pipeline.</description></item><item><title>3.4 Automating Deployments with Helm Charts via DevOps Services</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/4.deploy-app-with-helm-chart/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/devops/4.deploy-app-with-helm-chart/</guid><description>3.4 Automating Deployments with Helm Charts via DevOps Services Automating CI/CD deployment through DevOps service Create a DevOps project Use the previously created project as it is, or create a new one.
Automating application deployment Use Code Repository to Manage Application Code Click Code Repositories in the left menu to create a code repository.
Click Create repository to create the repository.
Repository name: Ex) oci-devops-mychart The actual development work can be done on the development PC through the git command.</description></item><item><title>3.5 Checking for Package Vulnerabilities When Building DevOps Services</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/devops/5.detect-vulnerabilities-from-build-pipeline/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/devops/5.detect-vulnerabilities-from-build-pipeline/</guid><description>3.5 Checking for package vulnerabilities when building DevOps services Source Code Scanning for Vulnerability Scanning The Application Dependency Management (ADM) service provides vulnerability scanning for library packages used to build source code within the OCI DevOps build pipeline. The build specification provides the VulnerabilityAudit type for vulnerability checking.
Currently only supports scanning for Maven packages.
Vulnerability Check Build Step Add the VulnerabilityAudit type to the build specification and configure the related settings as shown below.</description></item></channel></rss>