<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>oss on TheKoguryo's Tech Blog</title><link>https://thekoguryo.github.io/en/tags/oss/</link><description>Recent content in oss on TheKoguryo's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 20 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/en/tags/oss/index.xml" rel="self" type="application/rss+xml"/><item><title>4.1.1 Installing the NGINX Ingress Controller</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/1.install-nginx-ingress-controller/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/1.install-nginx-ingress-controller/</guid><description>4.1.1 Installing the NGINX Ingress Controller OKE allows you to use several open source ingress controllers available on Kubernetes. In this document, we will test the nginx-ingress-controller, which is used the most and is described as an example in the OKE document. Official documentation https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupingresscontroller.htm https://kubernetes.github.io/ingress-nginx/deploy/#oracle-cloud-infrastructure installed version As of the OKE document, the NGINX Ingress Controller for Kubernetes document is based on the latest version, v1.1.3. This document is</description></item><item><title>4.4.1 Deploying Microservices Apps Without Service Mesh</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/1.sampleapp-without-istio/</link><pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/1.sampleapp-without-istio/</guid><description>4.4.1 Deploying microservice apps without Service Mesh This is a review of the contents of the Istio document below to find out what problems may occur when using a microservice app and why a Service Mesh like Istio is needed.
https://istio.io/latest/docs/examples/microservices-istio/bookinfo-kubernetes/ https://istio.io/latest/docs/examples/microservices-istio/add-new-microservice-version/ Deploy the test microservice app (Bookinfo) Test app
Consists of 4 microservice apps: Product, Review, Details, and Ratings.
First of all, the Reviews service only distributes v1 here.</description></item><item><title>4.3.1 Installing Prometheus&amp;Grafana</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/monitoring/1.install-prometheus-grafana/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/monitoring/1.install-prometheus-grafana/</guid><description>4.3.1 Installing Prometheus&amp;amp;Grafana Install Prometheus Create a namespace for installation.
kubectl create ns monitoring Register the repository for installation via Helm Chart. This example uses the Bitnami Helm Chart repository.
helm repo add bitnami https://charts.bitnami.com/bitnami Setting value definition
When installing Helm Chart, refer to the list of configurable parameters and input the value you want to change.
https://github.com/bitnami/charts/tree/master/bitnami/kube-prometheus#parameters The example below is an example of using the nginx ingress controller installed in the previous chapter with the prometheus and alertmanager access URLs.</description></item><item><title>4.2.1 Installing EFK</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/logging-efk/1.install-efk/</link><pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/logging-efk/1.install-efk/</guid><description>4.2.1 Installing EFK Install Elastic Search + Kibana Create a namespace for installation.
kubectl create ns logging Register the repository for installation via Helm Chart. This example uses the Bitnami Helm Chart repository.
helm repo add bitnami https://charts.bitnami.com/bitnami Define setpoints
When installing Helm Chart, refer to the list of configurable parameters and input the value you want to change.
https://github.com/bitnami/charts/tree/master/bitnami/elasticsearch/#parameters The example below is an example of using the nginx ingress controller installed with elasticsearch built-in kibana and the kibana access URL installed in the previous chapter.</description></item><item><title>4.1 Ingress Controller</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/</guid><description>4.1 Ingress Controller OKE allows you to use several open source ingress controllers available on Kubernetes. In this document, we will test the nginx-ingress-controller, which is used the most and is described as an example in the OKE document.
Official documentation
https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupingresscontroller.htm</description></item><item><title>4.4.2 Applying Service Mesh - Istio to Microservices Apps</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/2.sampleapp-with-istio/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/2.sampleapp-with-istio/</guid><description>4.4.2 Applying Service Mesh - Istio to microservices apps Installation is possible with istioctl, Helm, or manual. Here, we will install the istioctl standard described as an example in the OKE document and check that it is applied to the service according to the Istio document.
Official documentation https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengistio-intro-topic.htm https://istio.io/latest/docs/examples/microservices-istio/add-istio/ Install Istio Connect to Cloud Shell or work environment.
Download Istio
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.12.1 TARGET_ARCH=x86_64 sh - Go to the Istio route</description></item><item><title>4.2 Logging - EFK</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/logging-efk/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/logging-efk/</guid><description>#4.2 Logging - EFK
Let&amp;rsquo;s check the following three configurations as the most used configurations for monitoring Kubernetes logs with open source.
Elasticsearch: Performs a role of searching and analyzing collected and saved logs Fluentd: Collects logs from the Kubernetes cluster. Kibana: Performs a role of querying and visualizing logs</description></item><item><title>4.1.2 PATH-Based Routing in NGINX Ingress Controller</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/2.nginx-ingress-path/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/2.nginx-ingress-path/</guid><description>4.1.2 PATH based routing in NGINX Ingress Controller PATH-based basic routing test This is the most basic routing, and the routing service is different according to the URL PATH.
Deploy the sample app for testing.
Deploy two web pages with different background colors.
kubectl create deployment nginx-blue --image=thekoguryo/nginx-hello:blue kubectl expose deployment nginx-blue --name nginx-blue-svc --port 80 kubectl create deployment nginx-green --image=thekoguryo/nginx-hello:green kubectl expose deployment nginx-green --name nginx-green-svc --port 80 Write the ingress setup YAML (path-basic.</description></item><item><title>4.3 Monitoring - Prometheus&amp;Grafana</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/monitoring/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/monitoring/</guid><description>4.3 Monitoring - Prometheus&amp;amp;Grafana Check out Prometheus&amp;amp;Grafana, the most popular configuration for monitoring Kubernetes metrics with open source.
Prometheus: Open Source System Monitoring and Alert Toolkit https://prometheus.io/docs/introduction/overview/ Grafana: A tool that visualizes the collected data in the form of a dashboard through queries, etc. https://grafana.com/grafana/</description></item><item><title>4.1.3 Host-Based Routing in NGINX Ingress Controller (feat. OCI DNS)</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/3.nginx-ingress-host/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/3.nginx-ingress-host/</guid><description>4.1.3 Host based routing in NGINX Ingress Controller (feat. OCI DNS) See how the Ingress Controller uses OCI DNS for routing based on domain names.
Using OCI DNS service This is the process of setting up a domain name that has already been purchased. For testing freenom I used the free Domain Name (thekoguryo.ml) issued by the site.
OCI DNS service settings Log in to the OCI console.
From the top left hamburger menu, go to Networking &amp;gt; DNS Management &amp;gt; Zones.</description></item><item><title>4.4 Service Mesh - Istio</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/service-mesh/</guid><description>#4.4 Service Mesh - Istio
Modern container-based applications are increasingly using microservices architectures. Check out Istio, the most used service mesh that supports communication, security, and monitoring between distributed microservices without changing application code.
Istio: Provides service mesh function for distributed applications https://istio.io/latest/about/service-mesh/</description></item><item><title>4.1.4 TLS termination in NGINX Ingress Controller</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/4.nginx-ingress-tls-termination/</link><pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/4.nginx-ingress-tls-termination/</guid><description>4.1.4 TLS termination on NGINX Ingress Controller (feats. Let&amp;rsquo;s Encrypt) Check the settings for SSL external ingress in the Ingress Controller.
Using Self-Signed Certificates Learn how to create and use Self-Signed certificates for testing purposes. In a real environment, a certificate issued by an authorized certification authority is used. Only the self-signed certificate issuance process is replaced, and the TLS Secret registration process is the same.
References
https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupingresscontroller.htm Create a certificate Create a certificate with the following command in Cloud Shell or your environment.</description></item><item><title>4.1.5 Getting Client IP from NGINX Ingress Controller</title><link>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/5.nginx-ingress-preserve-client-ip/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://thekoguryo.github.io/en/oracle-cloudnative/oss/ingress-controller/5.nginx-ingress-preserve-client-ip/</guid><description>4.1.5 Get client IP from NGINX Ingress Controller When using the Nginx Ingress Controller, it is necessary to check the real Client IP for monitoring, etc. in the application in the Pod. However, since the client&amp;rsquo;s request goes through the OCI Load Balancer used by the Nginx Ingress Controller, the IP of the Load Balancer is recorded, not the IP of the actual client. Here, we will learn how to get the real Client IP.</description></item></channel></rss>