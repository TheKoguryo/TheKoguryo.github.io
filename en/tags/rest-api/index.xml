<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rest api on TheKoguryo&#39;s Tech Blog</title>
    <link>https://thekoguryo.github.io/en/tags/rest-api/</link>
    <description>Recent content in rest api on TheKoguryo&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 19 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://thekoguryo.github.io/en/tags/rest-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>14.3.1 OCI Request Signature Version 1</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/1/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/1/</guid>
      <description>14.3.1 OCI Request Signature Version 1 As mentioned earlier, in order to call the OCI REST API, you need to add a request signature. It is based on the draft-cavage-http-signatures-08 specification and the schematic procedure is as follows.
Create an HTTPS (SSL protocol TLS 1.2) request message. Create a signature string according to the request message. Sign (encrypt) the string to be signed using the private key and RSA-SHA256. Add the signed string and any additional information required to the request message Authorization header.</description>
    </item>
    
    <item>
      <title>14.3.2 Bash Sample Client</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/2/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/2/</guid>
      <description>14.3.2 Bash sample client (old style) Step 1. Prepare oci-curl function The method below uses the oci-curl bash function previously provided in the OCI documentation. It is reserved for backup, and as of 2022, it has been changed to use oci cli like oci raw-request. See the link below for the latest information.
https://docs.cloud.oracle.com/iaas/Content/API/Concepts/signingrequests.htm#Bash # Version: 1.0.2 # Usage: # oci-curl &amp;lt;host&amp;gt; &amp;lt;method&amp;gt; [file-to-send-as-body] &amp;lt;request-target&amp;gt; [extra-curl-args] # ex: # oci-curl iaas.</description>
    </item>
    
    <item>
      <title>14.3.3 Insomnia - Calling the OCI REST API</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/3/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/3/</guid>
      <description>14.3.3 Insomnia - Calling OCI REST API Insomnia, a professional REST client tool, is more convenient to use through a GUI. Since OCI Request Signature is not yet natively supported, I would like to explain how to call OCI REST API in Insomnia.
Step 0. Download insomnia Download the Free app from the official site.
https://insomnia.rest/download Step 1. insomnia-plugin-oci-request-signature plugin I made a plugin for OCI through the plugin extension provided by Insomina to make a call through OCI Request Signature.</description>
    </item>
    
    <item>
      <title>14.3.4 Postman - Calling the OCI REST API</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/4/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/4/</guid>
      <description>14.3.4 Postman - Calling OCI REST API Postman, the most used professional REST client tool, is more convenient to use through a GUI. Since OCI Request Signature is not yet natively supported, I would like to explain how to call OCI REST API using Postman&amp;rsquo;s pre-script.
To make a call through OCI Request Signature, Postman must use pre-script. Like Insomina, it does not provide plug-in functionality. Pre-script can be set in units of REST request, and can also be set in units of folders and collections.</description>
    </item>
    
  </channel>
</rss>
