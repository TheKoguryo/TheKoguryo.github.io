<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graalvm on TheKoguryo&#39;s 기술 블로그</title>
    <link>https://thekoguryo.github.io/tags/graalvm/</link>
    <description>Recent content in Graalvm on TheKoguryo&#39;s 기술 블로그</description>
    <generator>Hugo</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 07 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thekoguryo.github.io/tags/graalvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>8.1 GraalVM 사용하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.use-graal-vm/</link>
      <pubDate>Tue, 10 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/1.use-graal-vm/</guid>
      <description>&lt;h2 id=&#34;81-graalvm-사용하기&#34;&gt;8.1 GraalVM 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;GraalVM은 고급 JIT(Just-In-Time) 최적화 컴파일러를 추가하여 자바 애플리케이션의 성능 향상을 제공하는 자바 런타임입니다. Just-In-Time 방식으로 자바 바이트코드를 실행시점에 머신코드로 변환하여 실행할때, 개선된 최적화 기법을 사용합니다. 여기에 추가하여 AOT(Ahead-Of-Time) 방식도 지원하여, JVM 없이 바로 실행할수 있도록, 바이트 코드가 아닌, 실행가능한 Native Image 생성 기능을 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.2.1 GraalVM 기반 컨테이너 이미지 만들기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.graalvm/1.use-graal-vm/</guid>
      <description>&lt;h3 id=&#34;721-graalvm-기반-컨테이너-이미지-만들기&#34;&gt;7.2.1 GraalVM 기반 컨테이너 이미지 만들기&lt;/h3&gt;&#xA;&lt;p&gt;여기서는 향상된 just-in-time(JIT) 컴파일러를 통한 가장 간편한 방법으로 코드 변경없이 자바 애플케이션의 성능 개선하는 방벙으로 알아보겠습니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;graalvm--제공-컨테이너-이미지&#34;&gt;GraalVM  제공 컨테이너 이미지&lt;/h4&gt;&#xA;&lt;p&gt;GraalVM은 오픈소스로 제공하는 Community 버전과 상업용 Enterprise 버전을 제공하고 있습니다. Enterprise 버전은 더 높은 최적화 기능을 제공하고 있습니다. GraalVM은 Oracle Java SE 구독 모델에 포함되어 있으며, Oracle Cloud Infrastructure 내 자원에서는 별도 비용없이 사용할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.2 GraalVM 사용하여 Spring Boot 3 애플리케이션 개발하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.develop-spring-boot-app/</link>
      <pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/2.develop-spring-boot-app/</guid>
      <description>&lt;h3 id=&#34;82-graalvm-사용하여-spring-boot-3-애플리케이션-개발하기&#34;&gt;8.2 GraalVM 사용하여 Spring Boot 3 애플리케이션 개발하기&lt;/h3&gt;&#xA;&lt;p&gt;Spring Boot 예제를 바탕으로 앱 개발, 컨테이너 이미지 빌드, OKE에 배포하는 과정을 확인해 봅니다.&lt;/p&gt;&#xA;&lt;h6 id=&#34;spring-boot-기반-마이크로-서비스-만들기&#34;&gt;Spring Boot 기반 마이크로 서비스 만들기&lt;/h6&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://start.spring.io&#34;&gt;Spring Initializr&lt;/a&gt;를 사용하여 기본 프로젝트 소스파일을 기반으로 개발을 하게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.3 로컬 환경에 GraalVM for JDK 설치하기</title>
      <link>https://thekoguryo.github.io/oracle-cloudnative/appdev/3.install-graal-vm-for-jdk/</link>
      <pubDate>Tue, 07 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/oracle-cloudnative/appdev/3.install-graal-vm-for-jdk/</guid>
      <description>&lt;h2 id=&#34;83-로컬-환경에-graalvm-for-jdk-설치하기&#34;&gt;8.3 로컬 환경에 GraalVM for JDK 설치하기&lt;/h2&gt;&#xA;&lt;p&gt;2023년 11월 기준으로 GraalVM for JDK 17, GraalVM for JDK 21 버전 모두 사용 가능합니다. 두 버전 모두 LTS 버전입니다. 여기서는 17 버전을 사용하도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CloudShell now offers GraalVM Enterprise JDK 17 and Native Image</title>
      <link>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</link>
      <pubDate>Tue, 26 Jul 2022 00:00:01 +0000</pubDate>
      <guid>https://thekoguryo.github.io/release-notes/20220726-cloudshell-now-offers-graalvm-enterprise-jdk-17-and-native-image/</guid>
      <description>CloudShell에서 GraalVM Enterprise JDK 17을 제공합니다.</description>
    </item>
  </channel>
</rss>
