/*
Author: Ashwin Agarwal
Contributors: Tom McGinn
Last updated: 3-Aug-2021 by Ashwin Agarwal
Version: 21.5
Feature added: DBDOC-2438 - Create a lint checker for LiveLabs markdown (updated Lint checker)
*/
"use strict";
var showdown = "https://oracle.github.io/learning-library/common/redwood-hol/js/showdown.min.js",
    highlight = "https://oracle.github.io/learning-library/common/redwood-hol/js/highlight.min.js",
    track = "https://apex.oraclecorp.com/pls/apex/livelabs-analytics/r/files/static/v2/track.min.js";
let main = function() {
        let e = "manifest.json";
        const t = [{
                url: "https://signup.cloud.oracle.com",
                inParam: "customTrackingParam",
                outParam: "sourceType"
            }, {
                url: "https://myservices.us.oraclecloud.com/mycloud/signup",
                inParam: "customTrackingParam",
                outParam: "sourceType"
            }, {
                url: "https://myservices.oraclecloud.com/mycloud/signup",
                inParam: "customTrackingParam",
                outParam: "sourceType"
            }],
            n = {
                "#last": 2,
                "#next": 1,
                "#prev": -1,
                "#first": -2
            };
        let o;
        $.ajaxSetup({
            cache: !0
        }), $(document).ready(function() {
            let t;
            D("manifest") && (e = D("manifest")), $.when($.getScript(showdown, function() {
                console.log("Showdown library loaded!")
            }), $.getJSON(e, function(n) {
                void 0 !== n.workshoptitle && (document.getElementsByClassName("hol-Header-logo")[0].innerText = n.workshoptitle), console.log("Manifest file loaded!"), D("manifest") && $(n.tutorials).each(function() {
                    -1 == $(this)[0].filename.indexOf("http") && ($(this)[0].filename = e.substring(0, e.lastIndexOf("/") + 1) + $(this)[0].filename)
                });
                for (let t in n.include) {
                    let o = n.include[t]; - 1 == o.indexOf("http") && (o = e.substring(0, e.lastIndexOf("/") + 1) + o), $.get(o, function(e) {
                        n.include[t] = e
                    })
                }
                o = t = n
            }), $.getScript(highlight, function() {
                console.log("Highlight.js loaded!")
            })).done(function() {
                $.getScript(track), i();
                let e = g(t),
                    n = document.createElement("article");
                a(n, e, t, m), p(t), setTimeout(function() {
                    location.hash.slice(1)
                    
                    A($("li[data-unique='" + location.hash.slice(1) + "']")), $("#leftNav-toc").hasClass("scroll")
                    
                    //$(".selected")[0].scrollIntoView(!0)

                    //location.hash.slice(1) && A($("li[data-unique='" + location.hash.slice(1) + "']")), $("#leftNav-toc").hasClass("scroll") && $(".selected")[0].scrollIntoView(!0)
                }, 1e3)
            })
        }), $(window).scroll(function() {
            $("#contentBox").outerHeight() + $("header").outerHeight() + $("footer").outerHeight() > $(window).outerHeight() ? ($("#leftNav-toc").addClass("scroll"), $(window).scrollTop() + $(window).height() > $("footer").offset().top ? $("#leftNav-toc").css("max-height", $("footer").offset().top - $("#leftNav-toc").offset().top) : $("#leftNav-toc").css("max-height", $(window).height() - $("header").height())) : $("#leftNav-toc").removeClass("scroll");
            try {
                document.querySelector(".selected .active").getBoundingClientRect().y + document.querySelector(".selected .active").clientHeight > $(window).height() && $("#leftNav-toc").hasClass("scroll") && $(".selected .active")[0].scrollIntoView(!1)
            } catch (e) {}
            let e = $("#contentBox").find("[data-unique]").first();
            $("#contentBox").find("[data-unique]").each(function() {
                $(this).offset().top - $(window).scrollTop() - $("header").height() < Math.abs($(e).offset().top - $(window).scrollTop()) && (e = $(this))
            }), $(".selected .toc .toc-item").removeClass("active"), $(".selected .toc").find('[data-unique="' + $(e).attr("data-unique") + '"]').addClass("active")
        }), $(window).on("hashchange load", function(e) {
            try {
                let t = n[e.target.location.hash];
                void 0 !== t && x(w(y(o, t).filename))
            } catch (e) {}
        });
        let i = function() {
                $(".hol-Header-actions").prependTo(".hol-Header-wrap"), $('<div id="tutorial-title"></div>').appendTo(".hol-Header-logo")[0], $("#openNav").click(function() {
                    let e = D("nav");
                    e && "open" !== e ? "close" === e && window.history.pushState("", "", U(window.location.href, "nav", "open")) : window.history.pushState("", "", U(window.location.href, "nav", "close")), m()
                }), $(".hol-Footer-topLink").after($(document.createElement("a")).addClass("hol-Footer-rightLink hide")), $(".hol-Footer-topLink").before($(document.createElement("a")).addClass("hol-Footer-leftLink hide")), $("#contentBox").css("min-height", $(window).height() - $("header").outerHeight() - $("footer").outerHeight()), $(".hol-Header-actions").show("slide")
            },
            a = function(e, t, n, o = null) {
                $.get(t.filename, function(o) {
                    console.log(t.filename + " loaded!"), "preview" == t.filename && "None" == o && (o = window.localStorage.getItem("mdValue")), o = R(o, t.type), o = u(o, n.include), o = B(o), o = b(o, t.filename), o = f(o), o = l(o), o = r(o), $(e).html(new showdown.Converter({
                        tables: !0,
                        parseImgDimensions: !0,
                        metadata: !0
                    }).makeHtml(o)), e = V(e, n), e = _(e), e = k(e), e = C(e), e = E(e), e = T(e, t.filename), e = z(e), e = q(e), e = N(e), e = M(e), e = h(e), e = Y(e), e = c(e, t.type), e = d(e), e = s(e), O(t, n.workshoptitle), P(n.support), S(n.help, n.workshoptitle), "true" == D("qa") && (e = J(e, o, n))
                }).done(function() {
                    if ($("main").html(e), setTimeout(I, 0), "preview" == t.filename) {
                        let e = JSON.parse(window.localStorage.getItem("imagesValue"));
                        null !== e && $("main").find("img").each(function(t, n) {
                            for (let t = 0; t < e.length; t++) $(n).attr("src").indexOf(e[t].filename) >= 0 && $(n).attr("src", e[t].src)
                        })
                    }
                    "true" == D("qa") ? function(e) {
                        var t = 0,
                            n = 0,
                            o = 0,
                            i = 0;
                        document.getElementById(e.id + "header") ? (document.getElementById(e.id + "header").onmousedown = a, $("#qa-reportheader").dblclick(function() {
                            $("#qa-reportbody").fadeToggle()
                        })) : e.onmousedown = a;

                        function a(e) {
                            (e = e || window.event).preventDefault(), o = e.clientX, i = e.clientY, document.onmouseup = r, document.onmousemove = l
                        }

                        function l(a) {
                            (a = a || window.event).preventDefault(), t = o - a.clientX, n = i - a.clientY, o = a.clientX, i = a.clientY, e.style.top = e.offsetTop - n + "px", e.style.left = e.offsetLeft - t + "px"
                        }

                        function r() {
                            document.onmouseup = null, document.onmousemove = null
                        }
                    }(document.getElementById("qa-report")) : H($("#module-content h2:not(:eq(0))"), "none"), o && o()
                }).fail(function() {
                    console.log(t.filename + " not found! Please check that the file is available in the location provided in the manifest file.")
                })
            },
            l = function(e) {
                let t, n = new RegExp(/`{3,4}(.*?)`{3,4}/g),
                    o = [];
                do {
                    if (null === (t = n.exec(e))) return $(o).each(function(t, n) {
                        e = e.replace(n.replace, n.with)
                    }), e;
                    o.push({
                        replace: t[0],
                        with: "`" + t[1] + "`"
                    })
                } while (t)
            },
            r = function(e) {
                let t, n, o = new RegExp(/`{3,}(.*?)\n([\s\S|\n]*?)`{3,}/g),
                    i = [];
                do {
                    let a = "<pre>";
                    if (null === (t = o.exec(e))) return $(i).each(function(t, n) {
                        e = e.split(n.replace).join(n.with)
                    }), e;
                    n = t[2].substring(0, t[2].indexOf(t[2].trim())).replace(/\t/g, "    "), 0 !== t[1].trim().length && (a = '<pre class="' + t[1].trim() + '">');
                    let l = t[2].replace(/\t/g, "    ").split("\n");
                    for (let e = 0; e < l.length; e++) l[e] = l[e].replace(n, "");
                    l = l.join("\n"), i.push({
                        replace: t[0],
                        with: a + "<code>" + l.trim() + "</code></pre>"
                    })
                } while (t)
            },
            s = function(e) {
                let t = $(document.createElement("span")).attr("id", "modalClose").html("&times;"),
                    n = $(document.createElement("img")).attr("id", "modalImg"),
                    o = $(document.createElement("div")).attr("id", "modalCaption"),
                    i = $(document.createElement("div")).attr("id", "modalWindow");
                return $(i).append([o, t, n]), $(e).append(i), $(e).find("img").click(function() {
                    $(n).attr("src", this.src), $(i).addClass("show"), $(o).text(this.alt)
                }), $(i).click(function() {
                    $(i).removeClass("show")
                }), e
            },
            c = function(e, t) {
                if ("object" == $.type(t)) {
                    let n = $(document.createElement("div")).addClass("selection_tabs"),
                        o = $(document.createElement("ul")).addClass("tab");
                    0 == D("type") && window.history.pushState("", "", U(window.location.href, "type", Object.keys(t)[0])), $(Object.keys(t)).each(function(e, n) {
                        let i = $(document.createElement("li")).addClass("btn_if_" + n);
                        $(i).html('<a href="#">' + t[n] + "</a>"), $(i).find("a").click(function() {
                            $(this).attr("href", U(window.location.href, "type", n))
                        }), $(o).append(i), n == D("type") && $(i).find("a").addClass("active")
                    }), $(n).append(o), $(e).find("h2:not(:eq(0))").after(n), $(e).find("h1").after(n), $(e).find(".selection_tabs:not(:eq(0))").addClass("stick")
                }
                return e
            },
            d = function(e) {
                return $(e).find("pre:not(.nohighlighting) code").each(function(e, t) {
                    hljs.highlightBlock(t)
                }), e
            },
            h = function(e) {
                return $(e).find('a[href$="?download=1"]').each(function() {
                    $(this).attr("download", ""), $(this)[0].href = $(this)[0].href.replace("?download=1", "")
                }), e
            },
            u = function(e, t) {
                for (let n in t) e = e.split("[](include:" + n + ")").join(t[n]);
                return e
            },
            f = function(e) {
                let t, n = new RegExp(/\[(?:.+?)\]\((&type=(\S*?))\)/g);
                do {
                    null !== (t = n.exec(e)) && (e = e.replace(t[1], U(window.location.href, "type", t[2])))
                } while (t);
                return e
            },
            p = function(e) {
                let t, n = new RegExp(/^##\s(.+)*/gm);
                $(e.tutorials).each(function(o, i) {
                    let a, l = document.createElement("div");
                    $(l).attr("id", "toc" + o).addClass("toc"), $.get(i.filename, function(o) {
                        "preview" == i.filename && "None" == o && (o = window.localStorage.getItem("mdValue")), o = R(o, i.type), o = u(o, e.include);
                        do {
                            null !== (t = n.exec(o)) && (a = document.createElement("ul"), $(a).append($(document.createElement("li")).addClass("toc-item").text(t[1].replace(/\**/g, "").replace(/\##/g, "")).attr("data-unique", X(t[1]))), $(a).click(function() {
                                $(this).parent().parent().parent().hasClass("selected") ? (location.hash = X($(this).text()), A($(this).find("li").attr("data-unique"))) : x(w(i.filename), X($(this).text()))
                            }), $(a).each(function() {
                                $(this).wrapInner('<a href="' + unescape(U(window.location.href, "lab", w(i.filename))) + "#" + $(this).find("li").attr("data-unique") + '"></a>')
                            }), $(a).appendTo(l))
                        } while (t)
                    }), $(".hol-Nav-list li")[o].append(l)
                }), setTimeout(function() {
                    let e = $('.selected li[data-unique="' + location.hash.slice(1) + '"]');
                    0 !== e.length && $(e)[0].click()
                }, 1e3), $(".hol-Nav-list>li").wrapInner("<div></div>"), $(".hol-Nav-list>li>div").prepend($(document.createElement("div")).addClass("arrow").text("+")), $(".hol-Nav-list > li > div .arrow").click(function() {
                    "-" === $(this).text() ? ($(this).next().next().fadeOut("fast", function() {
                        $(window).scroll()
                    }), $(this).text("+")) : ($(this).next().next().fadeIn("fast", function() {
                        $(window).scroll()
                    }), $(this).text("-"))
                }), $(".selected div.arrow").text("-"), $(".hol-Nav-list > li:not(.selected) .toc").hide()
            },
            m = function() {
                let e = D("nav");
                e && "open" !== e ? "close" === e && ($(".hol-Nav-list > li:not(.selected)").attr("tabindex", "-1"), $("#leftNav-toc, #leftNav, #contentBox").addClass("close").removeClass("open")) : ($(".hol-Nav-list > li:not(.selected)").attr("tabindex", "0"), $("#leftNav-toc, #leftNav, #contentBox").addClass("open").removeClass("close")), setTimeout(function() {
                    $(window).scroll()
                }, 100)
            },
            g = function(e) {
                let t = $(document.createElement("div")).attr("id", "leftNav-toc"),
                    n = $(document.createElement("ul")).addClass("hol-Nav-list");
                return $(e.tutorials).each(function(e, t) {
                    let o = w(t.filename);
                    $(document.createElement("li")).each(function() {
                        $(this).click(function(e) {
                            if (!$(e.target).hasClass("arrow") && !$(e.target).hasClass("toc-item") && !$(e.target).hasClass("toc-item active"))
                                if ($(e.target).parent().parent().hasClass("selected") || $(e.target).hasClass("selected")) try {
                                    $(".selected .arrow").click()
                                } catch (e) {} else x(o)
                        }), $(this).attr("id", v(o)), $(this).text(t.title).wrapInner('<a href="' + unescape(U(window.location.href, "lab", w(t.filename))) + '"><div></div></a>'), $(this).appendTo(n), $(this).keydown(function(e) {
                            13 !== e.keyCode && 32 !== e.keyCode || (e.preventDefault(), x(o))
                        })
                    })
                }), $(n).appendTo(t), $(t).appendTo("#leftNav"), y(e)
            },
            w = function(e) {
                return e.split("/")[e.split("/").length - 1].replace(".md", "")
            },
            v = function(e, t = "tut-") {
                return t + w(e.toString()).replace(/[\(\)]+?/g, "").replace(".md", "")
            },
            y = function(e, t = 0) {
                if ($("#" + v(D("lab"))).addClass("selected"), $(".selected").find("a").contents().unwrap(), $(".selected").unbind("keydown"), -2 === t) return e.tutorials[0];
                if (2 === t) return e.tutorials[e.tutorials.length - 1];
                for (var n = 0; n < e.tutorials.length; n++)
                    if (D("lab") === w(e.tutorials[n].filename)) return e.tutorials[n + t];
                for (n = 0; n < e.tutorials.length; n++)
                    if (D("lab") === F(e.tutorials[n].title)) return void x(w(e.tutorials[n].filename), window.location.hash.substr(1));
                return $(".hol-Nav-list").find("li:eq(0)").addClass("selected"), e.tutorials[0 + t]
            },
            x = function(e, t = "") {
                "" !== t && (t = "#" + t), location.href = unescape(U(window.location.href, "lab", e) + t)
            },
            b = function(e, t) {
                let n, o = new RegExp(/!\[.*?\]\((.*?)\)/g),
                    i = [];
                t = t.substring(0, t.lastIndexOf("/") + 1);
                do {
                    if (null === (n = o.exec(e))) return $(i).each(function(t, n) {
                        e = e.replace(n.replace, n.with)
                    }), e;
                    n[1] = n[1].split(" ")[0], -1 === n[1].indexOf("http") && i.push({
                        replace: "(" + n[1],
                        with: "(" + t + n[1].trim()
                    })
                } while (n)
            },
            k = function(e) {
                return $("#tutorial-title").text("\t\t›\t\t" + $(e).find("h1").text()), e
            },
            C = function(e) {
                return $(e).find("h2").each(function() {
                    $(this).nextUntil("h2").andSelf().wrapAll("<section></section>")
                }), e
            },
            E = function(e) {
                return $(e).find("img").on("load", function() {
                    if ($(this)[0].width > 100 || $(this)[0].height > 100 || void 0 !== $(this).attr("title"))
                        if ($(this).wrap("<figure></figure>"), $.trim($(this).attr("title"))) {
                            let e = $(this).attr("src").split("/").pop().split(".").shift(),
                                t = $(this).attr("src").split("/").slice(0, -2).join("/") + "/files/" + e + ".txt";
                            $(this).parent().append('<figcaption><a href="' + t + '">Description of illustration [' + e + "]</figcaption>")
                        } else $(this).removeAttr("title")
                }), e
            },
            T = function(e, t) {
                return -1 !== t.indexOf("/") && (t = t.replace(/\/[^\/]+$/, "/"), $(e).find("a").each(function() {
                    -1 === $(this).attr("href").indexOf("http") && 0 !== $(this).attr("href").indexOf("?") && 0 !== $(this).attr("href").indexOf("#") && $(this).attr("href", t + $(this).attr("href"))
                })), e
            },
            q = function(e) {
                return $(e).find('a[href^="#"]').each(function() {
                    let e = $(this).attr("href");
                    "#" !== e && $(this).click(function() {
                        A(e.split("#")[1])
                    })
                }), e
            },
            N = function(e) {
                return $(e).find("a").each(function() {
                    0 === $(this).attr("href").indexOf("http") && -1 == $(this).attr("href").indexOf("&type=") && $(this).attr("target", "_blank")
                }), e
            },
            O = function(e, t) {
                document.title = void 0 !== t ? t + " | " + e.title : e.title;
                const n = [{
                    name: "contentid",
                    content: e.contentid
                }, {
                    name: "description",
                    content: e.description
                }, {
                    name: "partnumber",
                    content: e.partnumber
                }, {
                    name: "publisheddate",
                    content: e.publisheddate
                }];
                $(n).each(function(e, t) {
                    if (t.content) {
                        let e = document.createElement("meta");
                        $(e).attr(t).prependTo("head")
                    }
                })
            },
            P = function(e) {
                if (void 0 !== e) {
                    let t = $(document.createElement("li")).append($(document.createElement("a")).attr({
                        href: e,
                        target: "_blank"
                    }).text("Go to forum"));
                    $(".footer-links").append(t)
                }
            },
            S = function(e, t) {
                const n = "Question about workshop: " + t;
                if (void 0 !== e) {
                    let t = $(document.createElement("a")).attr({
                        href: "mailto:" + e + "?subject=" + n,
                        title: "Need help? Send us an email.",
                        id: "need_help",
                        tabindex: "0"
                    }).text("?");
                    $("header .hol-Header-wrap").append(t)
                }
            },
            I = function() {
                $("#module-content h2:eq(1)").before('<button id="btn_toggle" class="hol-ToggleRegions plus">Expand All Tasks</button>').prev().on("click", function(e) {
                    "Expand All Tasks" === $(this).text() ? j($("#module-content h2:not(:eq(0))"), "show") : H($("#module-content h2:not(:eq(0))"), "hide"), L()
                }), $("#module-content h2:not(:eq(0))").click(function(e) {
                    $(this).hasClass("plus") ? j(this, "fade") : H(this, "fade"), L()
                }), $("#module-content h2:not(:eq(0))").attr("tabindex", "0"), $("#module-content h2:not(:eq(0))").keydown(function(e) {
                    13 !== e.keyCode && 32 !== e.keyCode || (e.preventDefault(), $(this).hasClass("plus") ? j($(this), "fade") : H($(this), "fade"))
                }), window.scrollTo(0, 0)
            },
            j = function(e, t) {
                "show" === t ? $(e).nextUntil("#module-content h1, #module-content h2").show("fast", function() {
                    $(window).scroll()
                }) : "fade" === t && $(e).nextUntil("#module-content h1, #module-content h2").fadeIn("fast", function() {
                    $(window).scroll()
                }), $(e).addClass("minus"), $(e).removeClass("plus")
            },
            H = function(e, t) {
                "hide" === t ? $(e).nextUntil("#module-content h1, #module-content h2").hide("fast", function() {
                    $(window).scroll()
                }) : "fade" === t ? $(e).nextUntil("#module-content h1, #module-content h2").fadeOut("fast", function() {
                    $(window).scroll()
                }) : "none" == t && $(e).nextUntil("#module-content h1, #module-content h2").attr("style", "display:none;"), $(e).addClass("plus"), $(e).removeClass("minus")
            },
            L = function() {
                $("#module-content h2.minus").length <= $("#module-content h2.plus").length ? ($("#btn_toggle").text("Expand All Tasks"), $("#btn_toggle").addClass("plus"), $("#btn_toggle").removeClass("minus")) : ($("#btn_toggle").text("Collapse All Tasks"), $("#btn_toggle").addClass("minus"), $("#btn_toggle").removeClass("plus"))
            },
            A = function(e) {
                let t = $('div[name="' + e + '"]').next();
                $(t).hasClass("hol-ToggleRegions") && (t = $(t).next());
                try {
                    "H2" !== t[0].tagName && (t = $(t).siblings("h2")), ($(t).hasClass("minus") || $(t).hasClass("plus")) && j(t, "fade"), $(t)[0].scrollIntoView(), window.scrollTo(0, window.scrollY - $(".hol-Header").height()), L()
                } catch (e) {}
            },
            M = function(e) {
                return $(e).find("pre code").each(function() {
                    if ($(this).text().indexOf("<copy>") >= 0) {
                        let e = $(document.createElement("code")).html($(this).text());
                        $(this).html($(e).html())
                    }
                    $(this).has("copy").length >= 1 && ($(this).find("copy").contents().unwrap().wrap('<span class="copy-code">'), $(this).before('<button class="copy-button" title="Copy text to clipboard">Copy</button>'))
                }), $(e).find(".copy-button").click(function() {
                    var e;
                    e = $(this).next().find(".copy-code"), $(e).addClass("code-highlight"), window.setTimeout(function() {
                        $(e).removeClass("code-highlight")
                    }, 2e3);
                    let t = $(this).next().find(".copy-code").map(function() {
                            return $(this).text().trim()
                        }).get().join("\n"),
                        n = $("<textarea>").val(t).appendTo(this).select();
                    document.execCommand("copy"), $(n).remove(), $(this).parent().animate({
                        opacity: .2
                    }).animate({
                        opacity: 1
                    })
                }), e
            },
            _ = function(e) {
                return $(e).find('a[href^="youtube:"]').each(function() {
                    $(this).after('<div class="video-container"><iframe src="https://www.youtube.com/embed/' + $(this).attr("href").split(":")[1] + '" frameborder="0" allowfullscreen></div>'), $(this).remove()
                }), e
            },
            R = function(e, t) {
                let n, o = new RegExp(/<\s*if type="([^>]*)">([\s\S|\n]*?)<\/\s*if>/gm),
                    i = [];
                !1 !== D("type") ? t = D("type") : "object" == $.type(t) && (t = Object.keys(t)[0]), "array" !== $.type(t) && (t = Array(t));
                do {
                    if (null === (n = o.exec(e))) return $(i).each(function(t, n) {
                        e = e.replace(n.replace, n.with)
                    }), e;
                    let a = n[1].split(" "),
                        l = !1;
                    for (let e = 0; e < a.length && !l; e++) $.inArray(a[e], t) >= 0 && (l = !0);
                    l ? i.push({
                        replace: n[0],
                        with: n[2]
                    }) : i.push({
                        replace: n[0],
                        with: ""
                    })
                } while (n)
            },
            B = function(e) {
                let t = new RegExp(/<copy>([\s\S|\n]*?)<\/copy>/gm);
                return e = e.replace(t, function(e) {
                    return "<copy>" + (e = (e = (e = (e = e.replace("<copy>", "")).replace("</copy>", "")).replace(/</g, "&lt;")).replace(/>/g, "&gt;")).trim() + "</copy>"
                })
            },
            Y = function(e) {
                window.location.href;
                return $(t).each(function(t, n) {
                    let o = D(n.inParam);
                    o && $(e).find('a[href*="' + n.url + '"]').each(function() {
                        let e = $(this).attr("href");
                        $(this).attr("href", unescape(U(e, n.outParam, o)))
                    })
                }), $(t).each(function(t, n) {
                    let o = D(n.inParam);
                    o && $(e).find('a[href*="?lab="]').each(function() {
                        let e = $(this).attr("href") + "&" + n.inParam + "=" + o;
                        $(this).attr("href", unescape(e))
                    })
                }), e
            },
            U = function(e, t, n) {
                let o = e.split("?")[0].split("#")[0],
                    i = e.replace(o, "").split("#")[0],
                    a = e.replace(o + i, "");
                a = "";
                let l = D(t);
                return l ? o + i.replace(t + "=" + l, t + "=" + n) + "" : 0 === i.length || 1 === i.length ? o + "?" + t + "=" + n : o + i + "&" + t + "=" + n
            },
            D = function(e) {
                let t = window.location.search.substring(1).split("&");
                for (var n = 0; n < t.length; n++)
                    if (t[n].split("=")[0] == e) return t[n].split("=")[1];
                return !1
            },
            F = function(e) {
                if (!e) return console.log("The title in the manifest file cannot be blank!"), "ErrorTitle";
                let t = e.toLowerCase().replace(/ /g, "-").trim().substr(0, 50);
                return $.each(["<", ">", ":", '"', "/", "\\\\", "|", "\\?", "\\*", "&", "\\.", ","], function(e, n) {
                    t = t.replace(new RegExp(n, "g"), "")
                }), $.each(["-a-", "-in-", "-of-", "-the-", "-to-", "-an-", "-is-", "-your-", "-you-", "-and-", "-from-", "-with-"], function(e, n) {
                    t = t.replace(new RegExp(n, "g"), "-")
                }), t.length > 40 && (t = t.substr(0, t.lastIndexOf("-"))), t
            },
            V = function(e, t) {
                let o = y(t, n["#next"]),
                    i = y(t, n["#prev"]);
                return void 0 !== o && $(".hol-Footer-rightLink").removeClass("hide").addClass("show").attr({
                    href: unescape(U(window.location.href, "lab", w(o.filename))),
                    title: "Next"
                }).text("Next"), void 0 !== i && $(".hol-Footer-leftLink").removeClass("hide").addClass("show").attr({
                    href: unescape(U(window.location.href, "lab", w(i.filename))),
                    title: "Previous"
                }).text("Previous"), e
            },
            z = function(e) {
                return $(e).find("h2").each(function() {
                    $(this).before($(document.createElement("div")).attr({
                        name: X($(this).text()),
                        "data-unique": X($(this).text())
                    }))
                }), e
            },
            X = function(e) {
                //return e.replace(/[^[A-Za-z0-9:?\(\)]+?/g, "")
                return e.trim().replace(/ /g, "-")
            },
            J = function(e, t, n) {
                let o = $(document.createElement("div")).attr("id", "qa-report").html("<div id='qa-reportheader'></div><div id='qa-reportbody'><ol></ol></div>");
                let i = function(e, t) {
                        $.ajax({
                            type: "HEAD",
                            url: e,
                            success: function() {
                                t(!0)
                            },
                            error: function() {
                                t(!1)
                            }
                        })
                    },
                    a = function(e, t = "", n = !1) {
                        n ? $(o).find("ol").append("<li class=" + t + ">" + e + " <small onclick=\"window.scrollTo({top:$('." + n + "').offset().top - ($('header').outerHeight() + 10), behavior: 'smooth'});\">(show)</small></li>") : $(o).find("ol").append("<li class=" + t + ">" + e + "</li>")
                    },
                    l = function(e) {
                        $(o).find("#qa-reportheader").html("Total Issues: " + $(o).find("li").length), $(o).find("li").length ? ($(o).find("#qa-reportbody").show(), 0 === $(o).find("#qa-reportbody p").length && $(o).find("#qa-reportbody").append("<p>Please see <a href='https://confluence.oraclecorp.com/confluence/x/ep81Y' target='_blank'>using the LiveLabs template</a> for more information.</p>")) : $(o).find("#qa-reportbody").hide()
                    },
                    r = function() {
                        return "error_" + $(o).find("li").length
                    };
                var s;
                return s = e, 1 !== $(s).find("h1").length && (a("Only a single title is allowed, please edit your Markdown file and remove or recast other content tagged with a single #.", "major-error"), $(s).find("h1").addClass("error")), -1 !== n.workshoptitle.indexOf("ing ") && a("Please use an imperative workshop title instead of a gerund.", "major-error"),
                    function(e) {
                        let t = (e.match(new RegExp("<a href=", "g")) || []).length;
                        1 == t ? a("There is " + t + " occurrence of HTML (for example: &lt;a href=...&gt;) in your Markdown. Please do not embed HTML in Markdown.") : t > 1 && a("There are " + t + " occurrences of HTML (for example: &lt;a href=...&gt;) in your Markdown. Please do not embed HTML in Markdown.")
                    }(t),
                    function(e) {
                        $(e).find("img").each(function() {
                            if ("modalImg" !== $(this).attr("id")) try {
                                if ($(this).attr("src").indexOf("/images/") <= 0) return a("Your images must be in an <strong>images</strong> folder. Please rename the folder and update your Markdown."), !1
                            } catch (e) {
                                return a("Your images must be in an <strong>images</strong> folder. Please rename the folder and update your Markdown."), !1
                            }
                        })
                    }(e),
                    function(e) {
                        let t = (e.match(/\````/g) || []).length;
                        1 == t ? a("Your Markdown file has " + t + " codeblock with 4 (````). This should be changed to 3 (```). Please review your Markdown and make the necessary changes.") : t > 1 && a("Your Markdown file has " + t + " codeblocks with 4 (````). This should be changed to 3 (```). Please review your Markdown and make the necessary changes.")
                    }(t),
                    function(e) {
                        0 !== $(e).find("h2:eq(1)").text().substr(0, 4).indexOf("Task") && ($(e).find("h2:eq(1)").addClass(r()), a('The second H2 tag (##) of your Markdown file should be labeled with "Task".', "", r()))
                    }(e),
                    function(e) {
                        let t = 0;
                        $(e).find("pre > code").each(function() {
                            0 == $(this).find(".copy-code").length && (t += 1, $(this).addClass(r()), a("You have a code block (```) without a &lt;copy&gt; tag. Please review your Markdown and make the necessary changes.", "", r()))
                        })
                    }(e), !window.location.href.indexOf("localhost") && window.location.href.indexOf("127.0.0.1") && function(e) {
                        $(e).find("a").each(function() {
                            let e = $(this).attr("href"),
                                t = $(this).text();
                            i(e, function(n) {
                                n || ($('a[href$="' + e + '"]').addClass("error " + r()), a("This URL may be broken: <a href='" + e + "' target='_blank'>" + t + "</a>", "major-error", r()), l())
                            })
                        })
                    }(e),
                    function(e) {
                        $(e).find("img").each(function() {
                            if ("modalImg" === $(this).attr("id")) return;
                            let e = $(this).attr("src"),
                                t = $(this).attr("src").split("/")[$(this).attr("src").split("/").length - 1];
                            i(e, function(n) {
                                n || ($('img[src$="' + e + '"]').addClass("error " + r()), a("The link to image <strong>" + t + "</strong> is broken.", "major-error", r()), l())
                            })
                        })
                    }(e),
                    function(e, t) {
                        0 === $(e).find('div[name="' + X(t) + '"]').length && a("You are missing <strong>" + t + "</strong> section.")
                    }(e, "Acknowledgements"),
                    function(e) {
                        $(e).find("section:not(:first-of-type)").each(function() {
                            let e = [];
                            0 == $(this).find("h2").text().toUpperCase().trim().indexOf("Task") && ($(this).children().each(function() {
                                e.push($(this).prop("tagName"))
                            }), -1 !== $.inArray("UL", e) & -1 == $.inArray("OL", e) && (a("In section <strong>" + $(this).find("h2").text() + "</strong>, your steps are not numbered. Numbered steps should follow your STEP element.", "minor-error"), $(this).find("h2").addClass("format-error")), $.inArray("PRE", e) > $.inArray("OL", e) && ($(this).children("pre").addClass("format-error " + r()), a("Your codeblock is not indented correctly. Add spaces to indent your codeblock.", "minor-error", r())), $(this).find("img").each(function() {
                                -1 == $(this).parent().parent().prop("tagName").indexOf("LI") && -1 == $(this).parent().parent().prop("tagName").indexOf("OL") && -1 == $(this).parent().parent().prop("tagName").indexOf("UL") && ($(this).addClass("format-error " + r()), a("The image <strong>" + $(this).attr("src").split("/")[$(this).attr("src").split("/").length - 1] + "</strong> is not aligned with your text blocks. Add spaces to indent your image.", "minor-error", r()))
                            }))
                        })
                    }(e), l(), $(e).prepend(o)
            }
    }(),
    download = function() {
        $.when($("img").each(function() {
            $(this).css("max-width", "75%"), -1 == $(this).attr("src").indexOf("http") && $(this).attr("src", location.protocol + "//" + location.host + location.pathname + $(this).attr("src"))
        }), $("pre button").remove(), $("pre").attr("style", "white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; max-width: 80%;"), $("#module-content h2:not(:eq(0))").nextAll().show("fast"), $("h2").removeClass("plus minus"), $("#btn_toggle").remove()).done(function() {
            ! function(e, t) {
                let n = document.createElement("a");
                if (n.setAttribute("href", "data:html/plain;charset=utf-8," + encodeURIComponent(t)), n.setAttribute("download", e), document.createEvent) {
                    let e = document.createEvent("MouseEvents");
                    e.initEvent("click", !0, !0), n.dispatchEvent(e)
                } else n.click()
            }($(".selected span").text().replace(/[^[A-Za-z0-9:?]+?/g, "") + ".html", '<html><head><link rel="stylesheet" href="https://oracle.github.io/learning-library/common/redwood-hol/css/style.min.css" /><link rel="shortcut icon" href="https://oracle.github.io/learning-library/common/redwood-hol/img/favicon.ico" /></head><body style="padding-top: 0px;">' + $("#contentBox")[0].outerHTML + "</body></html>")
        })
    };