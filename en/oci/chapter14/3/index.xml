<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>14.2 Terraform on TheKoguryo&#39;s Tech Blog</title>
    <link>https://thekoguryo.github.io/en/oci/chapter14/3/</link>
    <description>Recent content in 14.2 Terraform on TheKoguryo&#39;s Tech Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Jan 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thekoguryo.github.io/en/oci/chapter14/3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>14.2.1 Installing Terraform</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/1/</guid>
      <description>14.2.1 Installing Terraform Download the appropriate installation file for your OS from [HashiCorp download page] (https://www.terraform.io/downloads.html). After unpacking, it is a single terraform.exe or terraform file, so you can use it immediately by copying it to the folder you want to use and registering it in the PATH.&#xA;Linux example&#xA;wget https://releases.hashicorp.com/terraform/1.1.3/terraform_1.1.3_linux_amd64.zip unzip terraform_1.1.3_linux_amd64.zip sudo mv terraform /usr/local/bin terraform -v </description>
    </item>
    <item>
      <title>14.2.2 Creating Terraform Configurations</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/2/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/2/</guid>
      <description>14.2.2 Writing Terraform Configurations To write Terraform, you need to express your OCI infrastructure resources in HashiCorp Configuration Language (HCL) format in a Terraform configuration file (.tf). JSON format is also supported, but we will use HCL format here.&#xA;The following are some of the most basic contents of Terraform. For complete information, please refer to the Terraform and Terraform OCI Provider documentation.&#xA;Terraform OCI Provider Documentation Let&amp;rsquo;s test it by creating a VCN through Terraform, just like we first created the VCN in the OCI console.</description>
    </item>
    <item>
      <title>14.2.3 Obtaining Terraform OCI Provider Connection Information</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/3/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/3/</guid>
      <description>14.2.3 Obtaining Terraform OCI Provider Connection Information Tenancy OCID&#xA;Click Tenancy in the user profile in the upper right corner and check the Tenancy OCID&#xA;user OCID&#xA;Click User Settings in the user profile in the upper right corner and check the user OCID&#xA;region: Region Identifier to use&#xA;API Key - private_key_path, fingerprint&#xA;Use the API Key used when installing OCI CLI. Or create a new one. Refer to 3.</description>
    </item>
    <item>
      <title>14.2.4 Running Terraform Configuration</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/4/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/4/</guid>
      <description>14.2.4 Running Terraform Configuration Run the command window&#xA;Go to the path where the configuration file is located&#xA;[opc@bastion-host example_vcn]$ ls -la total 12 drwxrwxr-x. 2 opc opc 63 Jan 18 09:50 . drwxrwxr-x. 3 opc opc 25 Jan 18 09:46 .. -rw-rw-r--. 1 opc opc 359 Jan 18 09:47 provider.tf -rw-rw-r--. 1 opc opc 479 Jan 18 09:50 terraform.tfvars -rw-rw-r--. 1 opc opc 284 Jan 18 09:47 vcn.tf Run initialization</description>
    </item>
    <item>
      <title>14.2.5 Using workspaces for multiple environments</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/5/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/5/</guid>
      <description>14.2.5 Using workspaces for multiple environments OCI provides several Regions. Depending on your needs, you may need to create the same resource in multiple Regions at once. However, as we saw briefly in the previous practice, when the terraform setting is executed, the state is managed as terraform.tfstate in the corresponding folder by default. You can copy the entire Terraform setting folder itself and use it for each target region, but management becomes cumbersome.</description>
    </item>
    <item>
      <title>14.2.6 Example, Creating Users Using List and Count</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/6/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/6/</guid>
      <description>14.2.6 Example, creating a user using list and count When creating resources, there are cases where multiple identical resources are created through Array. Considering the situation where multiple users are created to compose the practice environment, let&amp;rsquo;s see how to create multiple users at once through list and count.&#xA;Policy required for user creation Allow group &amp;lt;group_name&amp;gt; to manage users in tenancy Create User OCI users can be created using the syntax oci_identity_user.</description>
    </item>
    <item>
      <title>14.2.7 OCI Terraform Usage Example</title>
      <link>https://thekoguryo.github.io/en/oci/chapter14/3/7/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://thekoguryo.github.io/en/oci/chapter14/3/7/</guid>
      <description>14.2.7 Example of using OCI Terraform Oracle provides various examples on OCI Github. Please refer to the following site.&#xA;terraform-provider-oci/docs/examples </description>
    </item>
  </channel>
</rss>
